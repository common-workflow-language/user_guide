# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-24 17:23+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: pt\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../src/faq.md:1
#: 5daa5afac36f46dd8329e5629056384c
msgid "FAQ"
msgstr ""

#: ../../src/faq.md:11
#: 40c8efda3caf4c6089bda3027c522f37
msgid "Non \"`File`\" Types Using `evalFrom`"
msgstr ""

#: ../../src/faq.md:41
#: ee854bcb685941cab45ae7f33b0efe48
msgid "Rename an Input File"
msgstr ""

#: ../../src/faq.md:43
#: a4cdd5ab6fe341a3ad3e3055556d96c3
msgid "This example demonstrates how to change the name of an input file as part of a tool description. This could be useful when you are taking files produced from another step in a workflow, and don't want to work with the default names that these files were given when they were created."
msgstr ""

#: ../../src/faq.md:59
#: d1f359d47f124dfab23a75b196cd5884
msgid "Rename an Output File"
msgstr ""

#: ../../src/faq.md:61
#: d83ced40605e411c92c4ae38761d7ffa
msgid "This example demonstrates how to change the name of an output file from the default name given to it by a tool:"
msgstr ""

#: ../../src/faq.md:82
#: bc8997df2e6746cebc2068534f30ee82
msgid "Referencing a Local Script"
msgstr ""

#: ../../src/faq.md:84
#: 20b6ae57e1cf4410877a60fb3ef87264
msgid "There are two ways to reference a local script:"
msgstr ""

#: ../../src/faq.md:86
#: 73c66b809e9a4218b624338ccb88a05e
msgid "The first method involves adding the folder containing your scripts to the `PATH` environment variable. This allows you to run the shell script directly without using `sh` or `bash` commands."
msgstr ""

#: ../../src/faq.md:89
#: 9be72b7d5d604526b125b63148e99320
msgid "Start with adding a _shebang_ at the top of your file:"
msgstr ""

#: ../../src/faq.md:95
#: fd96d178901545008a43fa99e3aa6cf3
msgid "After that, make the script executable with the command `chmod +x scriptname.sh`"
msgstr ""

#: ../../src/faq.md:97
#: db58a582e66244468f4d31e9213933d1
msgid "Finally, modify your `PATH` to add the directory where your script is located. (It is good practice to use `$HOME/bin` for storing your own scripts)."
msgstr ""

#: ../../src/faq.md:104
#: 3e70f0da5cd7460b90c1690366f40820
msgid "Now you can use `baseCommand: scriptname.sh` to run the script directly."
msgstr ""

#: ../../src/faq.md:113
#: db28dc27c82b4b29a7a9a768550bba9b
msgid "When you wish to share your work later, you can place your script in a software container in the Docker format."
msgstr ""

#: ../../src/faq.md:115
#: 4474b16fb3fd4cdc85da931159804967
msgid "The second method involves including an input of `type: File` in the script itself:"
msgstr ""

#: ../../src/faq.md:135
#: 23c9b2e21cec4ee8ade087e6630f62c2
msgid "In CWL, everything must be directly stated."
msgstr ""

#: ../../src/faq.md:138
#: c01309dcd65c4f1080c396e6a9efb75d
msgid "Setting `self`-based Input Bindings for Optional Inputs"
msgstr ""

#: ../../src/faq.md:140
#: 0a36801172fd4e24a04b3ba85cf74e29
msgid "Currently, `cwltool` can't cope with missing optional inputs if their input binding makes use of `self`. Below is an example workaround for this, pending a more sophisticated fix."
msgstr ""

#: ../../src/faq.md:165
#: 433e788ba01141e98ea5a9e73ef71e6f
msgid "Model a \"one-or-the-other\" Parameter"
msgstr ""

#: ../../src/faq.md:167
#: b6de2761ce454992904775a06b7ba326
msgid "Below is an example showing how to specify different strings to be added to a command line, based on the value given to a Boolean parameter."
msgstr ""

#: ../../src/faq.md:188
#: e36c2d53e8ba40f4a602b489a6688e24
msgid "Connect a Solo Value to an Input that Expects an Array of that Type"
msgstr ""

#: ../../src/faq.md:190
#: a9310166cb514e4e8824bba7fcfcb277
msgid "Using [`MultipleInputFeatureRequirement`](https://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement) along with [`linkMerge: merge_nested`](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
msgstr ""

#: ../../src/faq.md:194
#: f6144f77152e4284963951abaa30adb2
msgid "merge_nested"
msgstr ""

#: ../../src/faq.md:196
#: 790709dfc2854e4a89fcc4769f84b0f4
msgid "The input must be an array consisting of exactly one entry for each input link. If \"merge_nested\" is specified with a single link, the value from the link must be wrapped in a single-item list."
msgstr ""

#: ../../src/faq.md:199
#: 438789c8def549d1b4b8a187d5acc48e
msgid "Which means \"create a list with exactly these sources as elements\""
msgstr ""

#: ../../src/faq.md:201
#: 23ede7dfd5c84492baee1d5bbb9a91d9
msgid "Or in other words: if the destination is of type `File[]` (an array of `File`s) and the source is a single `File` then add `MultipleInputFeatureRequirement` to the Workflow level `requirements` and add `linkMerge: merge_nested` under the appropriate `in` entry of the destination step."
msgstr ""

#: ../../src/faq.md:229
#: 37c0474e48164160b23c4094d583d2d3
msgid "Optional Inputs üíØ"
msgstr ""

#: ../../src/faq.md:231
#: 3b2be0a4a87041b7a5bda20c6df2ffc8
msgid "To make an input parameter optional, add a question mark to the type declaration."
msgstr ""

#: ../../src/faq.md:247
#: 886300d2dcff4861aae503d34b0bee44
msgid "<a name=\"enuminputs\"></a>"
msgstr ""

#: ../../src/faq.md:248
#: fe393ecdff25428da6cbcd30171c7811
msgid "Enum Inputs ‚öúÔ∏è"
msgstr ""

#: ../../src/faq.md:250
#: ebfd4991d917413b858da8b437a55805
msgid "For command line flags that require a specific input as the argument an enum type can be declared in CWL. **Specifying null here is known as long form style. It does the same thing as the question mark on the other inputs.**"
msgstr ""

#: ../../src/faq.md:267
#: 2919ff4f51254e69aea40146e2d911f1
msgid "<a name=\"recordinputs\"></a>"
msgstr ""

#: ../../src/faq.md:268
#: 61ed4e87457c41eea31f51740557597e
msgid "Record Inputs üìÄ"
msgstr ""

#: ../../src/faq.md:270
#: 1e6624104b024eb092682cd0dd0f6a3c
msgid "For commandline flags that are either **mutually exclusive** or **dependent** a special record type can be defined. You can also specify null here to create optional inputs."
msgstr ""

#: ../../src/faq.md:322
#: b741b8333e104feaa6d1f41fd4476304
msgid "Setting Mutually Exclusive Parameters"
msgstr ""

#: ../../src/faq.md:324
#: 334673ae870a4dada817857f3a49326e
msgid "To properly set fields in a record input type, you need to pass a dictionary to the input to properly set the parameters. This is done by using inline JavaScript and returning the dictionary with the key of the field you want to set. The source field is set to indicate the input from the workflow to be used as the value."
msgstr ""

#: ../../src/faq.md:342
#: 362f85270df04712b2e2f21c7019e3cb
msgid "Setting Booleans"
msgstr ""

#: ../../src/faq.md:344
#: ad6997f24c7c42fe965b5d7bfd1e633e
msgid "These can be set by using the default field"
msgstr ""

#: ../../src/faq.md:349
#: 99dce9d60b6a4f99bc39899b7c8c10ef
msgid "Concatenating Strings in Inputs"
msgstr ""

#: ../../src/faq.md:351
#: 6b68fe24cbf64624b49ea56fce2eecad
msgid "The valueFrom field must be used instead of default."
msgstr ""

#: ../../src/faq.md:359
#: d23326837eb74e7faf1f54e25f8309c4
msgid "`cwltool` Errors due to Filenames with Space Characters Inside"
msgstr ""

#: ../../src/faq.md:361
#: 2e2eabe92670412e95474b25ad9cda4c
msgid "`cwltool` does not allow some characters in filenames by default."
msgstr ""

#: ../../src/faq.md:363
#: 81f9308adbee4a3c9e585b8e0f0c4844
msgid "For example, the filename `a space is here.txt` includes 3 space characters."
msgstr ""

#: ../../src/faq.md:371
#: a5d3ed6cac28415288e7fc7fbfc6e8a6
msgid "If you can not avoid these dangerous characters, then pass `--relax-path-checks` to `cwltool`."
msgstr ""

#: ../../src/faq.md:373
#: 72f9692803304daf9f846e2b90139660
msgid "CWL Parameter Reference Error due to Hyphen in Input Identifier"
msgstr ""

#: ../../src/faq.md:375
#: a7eb20c817704811b3bcf2f94ec2e51d
msgid "If `cwltool --validate` returns valid"
msgstr ""

#: ../../src/faq.md:384
#: 20fa869849ef4b358a11db46111017de
msgid "But executing it causes an error like:"
msgstr ""

#: ../../src/faq.md:396
#: 35032fcd9f23403ca006d62a7d6e7be7
msgid "The file is here"
msgstr ""

#: ../../src/faq.md:410
#: f6d6a4e3691446378c8fb01a2d19f8ad
msgid "Problem caused by `-` (hyphen character)."
msgstr ""

#: ../../src/faq.md:423
#: 44608fed1048458e999e13b014327e7e
msgid "To fix this error, change `-` (hyphen) to `_` (underscore)"
msgstr ""

#: ../../src/faq.md:436
#: 96ede8a8f1f34786aabd4004bf2e7acc
msgid "If it is not possible to change the input identifier, then you can use an alternative CWL Parameter Reference syntax:"
msgstr ""

#: ../../src/faq.md:442
#: 84634a368e704e8d828678785c784595
msgid "Use CWL and cwltool with Singularity"
msgstr ""

#: ../../src/faq.md:445
#: 545c4db9c24f42ee946081254d9ca7a8
msgid "The CWL standards are built around (optional) Docker format containers. The reference runner and several other CWL implementations support running those Docker format containers using the Singularity engine. Directly specifying a Singularity format container is not part of the CWL standards."
msgstr ""

#: ../../src/faq.md:450
#: 1c1e6d583d5646a8a5c9316dcd743d9f
msgid "Debug JavaScript Expressions"
msgstr ""

#: ../../src/faq.md:452
#: cf7d336d444e4f59aa83585b7abb1fe5
msgid "You can use the <code>--js-console</code> option of <code>cwltool</code>, or you can try creating a JavaScript or TypeScript project for your code, and load it using <code>expressionLib</code>, e.g.: <a href=\"https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8\"> https://github.com/common-workflow-language/common-workflow-language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8</a></dd>"
msgstr ""
