# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow
# Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-16 11:48+0100\n"
"PO-Revision-Date: 2024-04-25 09:24+0000\n"
"Last-Translator: Manabu ISHII <manabu.ishii.rb@gmail.com>\n"
"Language-Team: Japanese <https://hosted.weblate.org/projects/commonwl/"
"user-guide/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.5.1-dev\n"
"Generated-By: Babel 2.12.1\n"

#: ../../LICENSE.md:2 a48279b2231348eea3f7a3b74a6362ac
msgid "Licenses"
msgstr "ライセンス"

#: ../../LICENSE.md:4 9dd9705700664b31a3f296d263b4028b
msgid "Instructional Material"
msgstr "指導資料"

#: ../../LICENSE.md:6 e54324bd39cd431d91b32e338217b8c7
msgid ""
"All Common Workflow Language project instructional material and changes "
"to the structure are also made available under the [Creative Commons "
"Attribution license][cc-by-human]. The following is a human-readable "
"summary of (and not a substitute for) the [full legal text of the CC BY "
"4.0 license][cc-by-legal]."
msgstr ""
"Common Workflow Languageプロジェクトのすべての説明資料と構造の変更は、["
"Creative Commons Attribution license][cc-by-human] "
"の下でも利用できるようになっています。以下は、[CC BY 4.0 ライセンスの法的全文"
"][cc-by-legal]を人間が読めるようにまとめたものです（ライセンス全文に代わるも"
"のではありません）。"

#: ../../LICENSE.md:12 754f3f54aa4142ef9dac27f508dd0bca
msgid "You are free:"
msgstr ""

#: ../../LICENSE.md:14 d2b1d5e965ef4e71b64c359549919975
msgid "to **Share**---copy and redistribute the material in any medium or format"
msgstr ""

#: ../../LICENSE.md:15 fe9551ffef8149bf8da50e70318e8de8
msgid "to **Adapt**---remix, transform, and build upon the material"
msgstr ""

#: ../../LICENSE.md:17 247db3bcc7024c44a044886a29ef1414
msgid "for any purpose, even commercially."
msgstr "営利目的であっても、いかなる目的であっても。"

#: ../../LICENSE.md:19 c04d906124854afc917707b7b4e45bb2
msgid ""
"The licensor cannot revoke these freedoms as long as you follow the "
"license terms:"
msgstr ""

#: ../../LICENSE.md:24 551cb5ab59dd4737b1042a4ef79ffab7
msgid ""
"**Attribution**---You must give appropriate credit (mentioning that your "
"work is derived from work that is Copyright © the Common Workflow "
"Language project, and, where practical, linking to "
"https://www.commonwl.org/ ), provide a [link to the license][cc-by-"
"human], and indicate if changes were made. You may do so in any "
"reasonable manner, but not in any way that suggests the licensor endorses"
" you or your use."
msgstr ""

#: ../../LICENSE.md:32 f6c3b2ccad494ed6811a35537fc1fb0d
msgid ""
"**No additional restrictions**---You may not apply legal terms or "
"technological measures that legally restrict others from doing anything "
"the license permits.  With the understanding that:"
msgstr ""

#: ../../LICENSE.md:36 91c95248cd7f435c909ee263a9a8bf3f
msgid ""
"You do not have to comply with the license for elements of the material "
"in the public domain or where your use is permitted by an applicable "
"exception or limitation."
msgstr ""

#: ../../LICENSE.md:39 27f79b0b648b4de4b0eb3172b2dc4ae8
msgid ""
"No warranties are given. The license may not give you all of the "
"permissions necessary for your intended use. For example, other rights "
"such as publicity, privacy, or moral rights may limit how you use the "
"material."
msgstr ""

#: ../../LICENSE.md:44 1e367d07720d4f9fb7ebc3149052e823
msgid "Software"
msgstr "ソフトウェア"

#: ../../LICENSE.md:46 cf8b58d02b6943a48cb70aa78a27bea4
msgid ""
"Except where otherwise noted, the example programs and other software "
"provided by Common Workflow Language project are made available under the"
" [OSI][osi]-approved [Apache 2.0 license][apache-2.0-license]."
msgstr ""
"Common Workflow Languageプロジェクトが提供するサンプルプログラムおよびその他"
"のソフトウェアは、特に断りのない限り、[OSI][osi]が承認した[Apache 2.0 "
"license][apache-2.0-license] の下で提供されています。"

#: ../../LICENSE.md:51 96f1e5be3e1e48db8d9a4c7693008715
msgid ""
"Unless required by applicable law or agreed to in writing, software "
"distributed under the License is distributed on an \"AS IS\" BASIS, "
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. "
"See the License for the specific language governing permissions and "
"limitations under the License."
msgstr ""

#: ../../src/_includes/what-is-cwl.md:1 ../../src/_includes/what-is-cwl.md:2
#: 08aa9181d5304e0fa96b28db15718559 d37fc100eb6948bba8b5e757574b2aaf
#: ecdd0f28d5b048d69dd1ffae2fa1f6c0
msgid ""
"CWL is a way to describe command-line tools and connect them together to "
"create workflows. Because CWL is a specification and not a specific piece"
" of software, tools and workflows described using CWL are portable across"
" a variety of platforms that support the CWL standard."
msgstr ""
"CWLは、コマンドラインツールを定義し、それらのツールを繋げてワークフローを作成"
"するための方法です。CWLは仕様であり、特定のソフトウェアではないため、CWLを使"
"用して定義されたツールやワークフローは、CWL標準をサポートするさまざまなプラッ"
"トフォームで利用可能です。"

#: ../../src/episodes.md:5 ../../src/setup.md:5
#: 1361ff6bf4924efc9ce9a85785a6b381 eb254514301c491e81f72ae19c407261
msgid "This page has moved"
msgstr "このページは移動しました"

#: ../../src/episodes.md:9 f03d7cbe6670451db0896f1b674d56c7
msgid ""
"This page is out-of-date and was kept here to preserve the links of the "
"old User Guide. Please use the new [Table of Contents](index.md#table-of-"
"contents) to browse the User Guide."
msgstr ""
"このページは古いもので、旧ユーザーガイドのリンクを保存するためにここに残されています。ユーザーガイドの閲覧には、新しい[目次](index.md"
"#table-of-contents)をご利用ください。"

#: ../../src/faq.md:1 d65ad48ac6314bf0a74c34a6766561fc
msgid "FAQ"
msgstr "よくある質問"

#: ../../src/faq.md:11 370a9659c7904ef6b5e1ae7480f82ef6
msgid "How do I create non \"`File`\" types using `evalFrom`?"
msgstr "\"`File`\" 型をつかわず `evalFrom`を使う方法"

#: ../../src/faq.md:41 8333f51e3f5945fe8963adfc6685bcb1
msgid "How do I rename an input file?"
msgstr "入力ファイルの名前を変更するにはどうしたらよいですか？"

#: ../../src/faq.md:43 f6b88d9154d049d7807afa9bb0f1ac98
msgid ""
"This example demonstrates how to change the name of an input file as part"
" of a tool description. This could be useful when you are taking files "
"produced from another step in a workflow, and don't want to work with the"
" default names that these files were given when they were created."
msgstr "この例では、ツール定義の一部として、入力ファイルの名前を変更する方法を説明します。これは、ワークフローの別のステップで作成されたファイルを使用する場合に、これらのファイルが作成されたときに与えられたデフォルトの名前を使用して作業したくない場合に便利です。"

#: ../../src/faq.md:59 833510f5896b4a6eb5875d25eca5b047
msgid "How do I rename an output file?"
msgstr "出力ファイルの名前を変更するにはどうしたらよいですか？"

#: ../../src/faq.md:61 207e2f97d1c44233ae3f109c5a6ec944
msgid ""
"This example demonstrates how to change the name of an output file from "
"the default name given to it by a tool:"
msgstr "この例では、出力ファイルの名前を、ツールから与えられたデフォルトの名前から変更する方法を示します："

#: ../../src/faq.md:83 d66acc583da24273980a52be03e79e91
msgid ""
"By modifying the `basename` field in the `outputEval` field, CWL workflow"
" engines will rename the file using the new name for subsequent steps or "
"as a workflow-level output."
msgstr ""
"`outputEval`フィールドの`basename`フィールドを変更することで、CWLワークフロー"
"エンジンは、後続のステップまたはワークフローレベルの出力として、新しい名前を"
"使用してファイル名を変更します。"

#: ../../src/faq.md:86 8641f105131b4ac1bca7e0a46756ef79
msgid "How do I reference a local script?"
msgstr "ローカルスクリプトを参照するにはどうしたらよいですか？"

#: ../../src/faq.md:88 d3e43b40d6994b32bc37067ee116418e
msgid "There are two ways to reference a local script:"
msgstr "ローカルスクリプトを参照するには、2つの方法があります："

#: ../../src/faq.md:90 64b140a321ca4087945339c523cc24dd
msgid ""
"The first method involves adding the path to a folder containing your "
"scripts to the `PATH` environment variable. This allows you to execute "
"the shell script directly (without explicitly using the `sh` or `bash` "
"commands)."
msgstr ""
"最初の方法は、スクリプトの入ったフォルダを "
"環境変数`PATH`に追加する方法です。これにより、`sh` や`bash` "
"コマンドを使用せずに、シェルスクリプトを直接実行することができます。"

#: ../../src/faq.md:93 34ebca4487a54ceab5d087105820e945
msgid "Start with adding a _shebang_ at the top of your file:"
msgstr "まず、ファイルの先頭に _shebang_ を追加します："

#: ../../src/faq.md:99 6b04a4dcdada4515b28d74aacff3537a
msgid ""
"After that, make the script executable with the command `chmod +x "
"scriptname.sh`"
msgstr "その後、`chmod +x scriptname.sh` というコマンドでスクリプトを実行可能な状態にします"

#: ../../src/faq.md:101 756ab4f7edcf42d3872bb86818e088c3
msgid ""
"Finally, modify your `PATH` to add the directory where your script is "
"located. (It is good practice to use `$HOME/bin` for storing your own "
"scripts)."
msgstr ""
"最後に、`PATH` を変更し、スクリプトが置かれているディレクトリを追加します。(`$HOME/bin` "
"を自分のスクリプトを保存するために使用するのは良い習慣です）。"

#: ../../src/faq.md:108 efb46b3a2d7c4c51b65998602bfa6f18
msgid "Now you can use `baseCommand: scriptname.sh` to run the script directly."
msgstr "これで、`baseCommand: scriptname.sh` を使って、スクリプトを直接実行できるようになりました。"

#: ../../src/faq.md:117 844938d5d2304c6cb03184b4b4b0b024
msgid ""
"When you wish to share your work later, you can place your script in a "
"software container in the Docker format."
msgstr "後で作ったものを共有したいときは、スクリプトをDockerコンテナに入れることがで"
"きます。"

#: ../../src/faq.md:119 796ce8155e32486d9651f8f13bfa3148
#, fuzzy
msgid ""
"The second method involves including an input of `type: File` in the "
"script itself:"
msgstr "2つ目の方法は、`type: File` をスクリプト自体に含める方法です："

#: ../../src/faq.md:138 ba246320fdd94a1aab4736f83718d793
#, fuzzy
msgid "How can I set `self`-based input bindings for optional inputs?"
msgstr "オプショナル入力のために `self`-形式のInput Bindings を設定します"

#: ../../src/faq.md:140 6169b7be9af7448abcb57eaf91e1cc91
msgid ""
"Currently, `cwltool` can't cope with missing optional inputs if their "
"input binding makes use of `self`. Below is an example workaround for "
"this, pending a more sophisticated fix."
msgstr ""
"現在、`cwltool` は、入力バインディングが`self` を使用している場合、オプション"
"入力が見つからない事に対処することができません。以下は、より洗練された修正を"
"待つ間の回避策の例です。"

#: ../../src/faq.md:165 6c98b7948059411b8e09cf03a552c5ab
msgid "How can I model a \"one-or-the-other\" parameter?"
msgstr "「一か八か」のパラメータをモデル化するにはどうしたらよいですか?"

#: ../../src/faq.md:167 d1424da3f43c4519a4c4735f4a720341
msgid ""
"Below is an example showing how to specify different strings to be added "
"to a command line, based on the value given to a Boolean parameter."
msgstr "以下は、Booleanパラメータの値によって、コマンドラインに追加する文字列を変える例を示しています。"

#: ../../src/faq.md:188 5c9980839f404ba6aef92ef23034500f
#, fuzzy
msgid ""
"How do I connect a solo value to an input that expects an array of that "
"type?"
msgstr "ある型の配列を期待する入力に１つの値を与える"

#: ../../src/faq.md:190 2525baf16c1f4725b096f33fd99009cf
#, fuzzy
msgid ""
"Add a "
"[`MultipleInputFeatureRequirement`](https://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement)"
" along with [`linkMerge: "
"merge_nested`](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput):"
msgstr ""
"[`MultipleInputFeatureRequirement`](https://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement)"
" と [`linkMerge: "
"merge_nested`](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)を一緒に使います"

#: ../../src/faq.md:194 a00d5d96b15048a79ae099d22d63bb42
msgid "merge_nested"
msgstr "merge_nested"

#: ../../src/faq.md:196 3a92c6cc5c2b40ffa0d692d03bad5c87
#, fuzzy
msgid ""
"The input must be an array consisting of exactly one entry for each input"
" link. If \"merge_nested\" is specified with a single link, the value "
"from the link must be wrapped in a single-item list."
msgstr "入力は、各入力リンクに対して正確に1つのエントリで構成される配列でなければなりません。\"merge_nested\"が1つのリンクで指定された場合、リンクからの値は1つのアイテムリストでラップされなければなりません。"

#: ../../src/faq.md:199 3af16c07e3f148ddb8849c94a3864158
#, fuzzy
msgid "Which means \"create a list with exactly these sources as elements\"."
msgstr "つまり、\"まさにこれらのソースを要素とするリストを作成する\" ということです"

#: ../../src/faq.md:201 0ea3de393d2f42aeb82658c85a19ec45
#, fuzzy
msgid ""
"Or in other words: if the destination is of type `File[]` (an array of "
"`File`s) and the source is a single `File` then add "
"`MultipleInputFeatureRequirement` to the Workflow level `requirements` "
"and add `linkMerge: merge_nested` under the appropriate `in` entry of the"
" destination step."
msgstr ""
"`File[]` (`File`の配列) で、ソースが単一の`File` "
"の場合、`MultipleInputFeatureRequirement` をワークフローレベルの`requirements` "
"に追加し、`linkMerge: merge_nested` を目的ステップのエントリの該当`in`に追加します。"

#: ../../src/faq.md:229 2f1bbb611c9c4f80b7ae0566432f2f35
msgid "How do make an input optional? 💯"
msgstr "入力パラメータをオプショナルにするにはどうしたらよいですか? 💯"

#: ../../src/faq.md:231 08a226efe5d141e68215ac77725033db
msgid ""
"To make an input parameter optional, add a question mark to the type "
"declaration."
msgstr "入力パラメータをオプションにするには、型宣言に疑問符を付けます。"

#: ../../src/faq.md:247 06e70a855a8f455ca0536eead77073c2
msgid "<a name=\"enuminputs\"></a>"
msgstr "<a name=\"enuminputs\"></a>"

#: ../../src/faq.md:248 7fda8eeb6a7f4689993ed0118c77f023
msgid ""
"How do I specify an input that must come from a list of predefined values"
" (i.e. How do I use enum inputs) ?"
msgstr "どうやってあらかじめ定義された値のリストから入力を指定できますか(つまり、入力"
"でenumを使うにはどうしたらよいですか)?"

#: ../../src/faq.md:250 b1934a82553b4da3b7f981e576245dd8
#, fuzzy
msgid ""
"For command line flags that require a specific input as the argument an "
"enum type can be declared in CWL. **Specifying null here is known as long"
" form style. It does the same thing as the question mark on the other "
"inputs.**"
msgstr "引数として特定の入力を必要とするコマンドラインフラグについては、CWLで列挙型を宣言することで実現できます。**ここでnullを指定することは、ロングフォーム・スタイルとして知られています。他の入力のクエスチョンマークと同じ働きをします。**"

#: ../../src/faq.md:267 17fc34fad2094f5ea60e963dabd632b8
msgid "<a name=\"recordinputs\"></a>"
msgstr "<a name=\"recordinputs\"></a>"

#: ../../src/faq.md:268 4d7acfbeba5b4e9cb31f08ef4b280447
msgid ""
"How do I describe dependent or exclusive input parameters(e.g. How do I "
"use record inputs)?"
msgstr "依存的または排他的な入力パラメータはどのように記述すればよいですか（例えば、"
"レコード入力をどのように使用すればよいですか）？"

#: ../../src/faq.md:270 949ce95c082f4a05891a55fee25d4873
#, fuzzy
msgid ""
"For commandline flags that are either **mutually exclusive** or "
"**dependent** a special record type can be defined. You can also specify "
"null here to create optional inputs."
msgstr ""
"**相互排他的** または**依存的** "
"のいずれかのコマンドラインフラグについては、特別なレコードタイプを定義することができます。また、ここにnullを指定することで、オプションの入力を作成することができます。"

#: ../../src/faq.md:322 6fd3c469d11d4d52b9fbb7a3d443a8db
#, fuzzy
msgid "How do I set mutually exclusive parameters?"
msgstr "相互に排他的なパラメータを設定する"

#: ../../src/faq.md:324 a0687ce5c1f940538abc977cad83138f
#, fuzzy
msgid ""
"To properly set fields in a record input type, you need to pass a "
"dictionary to the input to properly set the parameters. This is done by "
"using inline JavaScript and returning the dictionary with the key of the "
"field you want to set. The source field is set to indicate the input from"
" the workflow to be used as the value."
msgstr ""
"レコード入力タイプのフィールドを適切に設定するには、入力に辞書を渡してパラメ"
"ータを適切に設定する必要があります。これは、インラインJavaScriptを使用し、設"
"定したいフィールドのキーを持つ辞書を返すことで実現します。ソースフィールドに"
"は、値として使用するワークフローからの入力を示すものが設定されます。"

#: ../../src/faq.md:342 12869ce2cdab4c858f3232c6158514f1
msgid "How can I set Booleans?"
msgstr "ブール値を設定するにはどうしたらよいでしょうか？"

#: ../../src/faq.md:344 8dcb88744e5840029de0e1bbf1c4b967
msgid "These can be set by using the default field"
msgstr "デフォルトフィールドを使って、これらを設定します"

#: ../../src/faq.md:349 972b7a5551bb43e6b9fa30e0cb713ff7
msgid "What should I do when concatenating strings in inputs?"
msgstr "入力された文字列を連結するにはどうしたら良いでしょうか？"

#: ../../src/faq.md:351 68f74afc21d846dd9070d45dec0cc1d8
msgid "The valueFrom field must be used instead of default."
msgstr "defaultフィールドの代わりにvalueFromフィールドを使用する必要があります。"

#: ../../src/faq.md:359 53b633c6f8644106beb95ae567eb0708
msgid ""
"I get `cwltool` errors due to filenames with space characters inside. "
"What should I do?"
msgstr "`cwltool` ファイル名の中に空白文字があるために起こるエラーにはどのように対処"
"したらよいでしょうか？"

#: ../../src/faq.md:361 7101bb5cb69e4faca4e60eabb4eb258e
msgid "`cwltool` does not allow some characters in filenames by default."
msgstr "`cwltool` は、デフォルトではファイル名に一部の文字を許可していません。"

#: ../../src/faq.md:363 0eaf834b0ca847cca6736794895f5f81
msgid ""
"For example, the filename `a space is here.txt` includes 3 space "
"characters."
msgstr "例えば、`a space is here.txt` というファイル名には、3つの空白文字が含まれています。"

#: ../../src/faq.md:371 7dabd8aab7a5423b842433616640bac0
msgid ""
"If you can not avoid these dangerous characters, then pass `--relax-path-"
"checks` to `cwltool`."
msgstr "これらの危険な文字を避けられない場合は、`--relax-path-checks` を`cwltool` に渡してください。"

#: ../../src/faq.md:373 b7ec33f38ce74ceb890f4379e4c41054
msgid ""
"What should I do when I get CWL Parameter Reference error due to hyphen "
"in an input identifier?"
msgstr "入力パラメータ名の中のハイフンがあるため、CWLパラメータリファレンスエラーが起"
"こりました。どのようしたらよいでしょうか？"

#: ../../src/faq.md:375 e39b65947b294b20a444f18d780246f4
msgid "If `cwltool --validate` returns valid"
msgstr "`cwltool --validate` の結果に問題ない場合"

#: ../../src/faq.md:384 dcd42c65681b438bb541fb38ddebb536
msgid "But executing it causes an error like:"
msgstr "しかし、実行すると以下のようなエラーが発生します："

#: ../../src/faq.md:396 2b96665acac449758b852bbe7600e007
msgid "The file is here"
msgstr "ファイルはこちらです"

#: ../../src/faq.md:410 f59751d2f0014e59af7879a748062cec
msgid "Problem caused by `-` (hyphen character)."
msgstr "`-` (ハイフン文字、引き算の記号)が原因で発生した問題です。"

#: ../../src/faq.md:423 7780f461ca4c478b92fca893c0b0894a
msgid "To fix this error, change `-` (hyphen) to `_` (underscore):"
msgstr "このエラーを修正するには、`-` (ハイフン) を`_` (アンダースコア) "
"に変更してください:"

#: ../../src/faq.md:436 88df56dfff854fc68fb6ad3835a846e4
msgid ""
"If it is not possible to change the input identifier, then you can use an"
" alternative CWL Parameter Reference syntax:"
msgstr "入力識別子を変更することができない場合は、別のCWLパラメータリファレンス構文を使用することができます："

#: ../../src/faq.md:442 fc407a9e8d8c4b699d9cd14b369343b5
msgid "How do I use CWL and cwltool with Singularity?"
msgstr "SingularityをCWLとcwltoolで使うにはどうしたらよいでしょうか？"

#: ../../src/faq.md:445 239f5f81cef042b08fb8015c36b3ecad
msgid ""
"The CWL standards are built around (optional) Docker format containers. "
"The reference runner and several other CWL implementations support "
"running those Docker format containers using the Singularity engine. "
"Directly specifying a Singularity format container is not part of the CWL"
" standards."
msgstr ""
"CWL標準は、（オプションの）Docker形式のコンテナを中心に構築されています。リフ"
"ァレンスランナーや他のいくつかのCWL実装は、Singularityエンジンを使用してそれ"
"らのDockerフォーマットコンテナを実行することをサポートしています。Singularity"
"フォーマットコンテナを直接指定することは、CWL標準ではありません。"

#: ../../src/faq.md:450 61641314d82b43e982e54c64c73232c5
msgid "How do I debug the JavaScript in my CWL tool?"
msgstr "CWLツールのJavaScriptをデバッグするには?"

#: ../../src/faq.md:452 5556d3c323664edea55cfb777f4efb3b
#, fuzzy
msgid ""
"You can use the <code>--js-console</code> option of <code>cwltool</code>,"
" or you can try creating a JavaScript or TypeScript project for your "
"code, and load it using <code>expressionLib</code>, e.g.: <a "
"href=\"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8\"> "
"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8</a></dd>"
msgstr ""
"<code>cwltool</code> の <code>--js-console</code> "
"オプションを使用するか、または、あなたのコードのためのJavaScript または TypeScript "
"プロジェクトを作成し、<code>expressionLib</code> を使用して読み込んでみてください（例：<a "
"href=\"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8\"> "
"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8</a>"

#: ../../src/index.md:1 1c9fb72b83c9467a9672943fb47ffe32
msgid "Common Workflow Language User Guide"
msgstr "Common Workflow Language ユーザーガイド"

#: ../../src/index.md:3 aaa44578e27345e682ab44686b4da159
msgid ""
"This guide will introduce you to writing workflows using the [Common "
"Workflow Language](https://www.commonwl.org/) (CWL) open standards. This "
"guide describes the latest specification {{ cwl_version }}."
msgstr ""
"本ガイドは、オープンスタンダードである [Common Workflow Language](https://www.commonwl.org/)"
" (CWL) を使用したワークフローの書き方を紹介するものです。本ガイドは、最新仕様{{ cwl_version }}を解説しています。"

#: ../../src/index.md:7 0adfc2adb0c74372b25d197dd3a73b8b
msgid "Contributions and Feedback are Welcome!"
msgstr "ご意見、ご感想、貢献をお待ちしております!"

#: ../../src/index.md:9 96c8dca812f1415db7c5c006b0c0e022
msgid ""
"If you find that something is missing from this guide, or if you would "
"like to provide other feedback, file an Issue on the [project repository "
"for this guide][repo]. You can also suggest changes directly in a Pull "
"Request by clicking the \"Edit this page\" button at the right sidebar of"
" each page."
msgstr ""
"このガイドに足りないものがある場合、またはその他のフィードバックを提供したい場合は、[このユーザーガイドのプロジェクトリポジトリ][repo]にIssueを作成してください。また、各ページの右サイドバーにある「このページを編集する」ボタンをクリックすると、Pull"
" Requestで直接変更を提案することができます。"

#: ../../src/index.md:16 35c50bb5c3a345b4a4ae66b2df065376
msgid "Navigating the User Guide"
msgstr "ユーザーガイドの使い方"

#: ../../src/index.md:18 9431edcf4e344fb89b6a251e627279d2
msgid ""
"If you are a beginner user get started with the "
"[Introduction](/introduction/index.md) section. For advanced users the "
"subsections of the [Topics](/topics/index.md) have detailed information "
"about the most common topics for CWL."
msgstr ""
"初心者の方は、[はじめに](/introduction/index."
"md)のセクションから始めてください。上級者向けには、[Topics](/topics/index."
"md)のサブセクションに、CWLで最も一般的なトピックに関する詳細情報があります。"

#: ../../src/index.md:23 61cf57e61a9f46e5a1bff6368c5ad5e3
msgid ""
"The Table of Contents is displayed at the top menu and also on the left "
"sidebar. It also appears further down this page but with links to "
"subsections. The right sidebar contains links to the sections of each "
"page, and the Search form is on the left sidebar."
msgstr "目次は、トップメニューと左サイドバーに表示されています。また、このページのさらに下にも表示されますが、サブセクションへのリンクがあります。右サイドバーには各ページのセクションへのリンクがあり、左サイドバーには「検索フォーム」があります。"

#: ../../src/index.md:28 94381840d8a848c4a02fa97bfe83566d
msgid "Table of Contents"
msgstr "目次"

#: ../../src/introduction/basic-concepts.md:1 c1271d88e203454688a22e61ee88f02a
msgid "Basic Concepts"
msgstr "基本コンセプト"

#: ../../src/introduction/basic-concepts.md:3 dd462818cc9a4205b38866d0c5137ece
msgid ""
"This section describes the basic concepts for users to get started on "
"working with Common Workflow Language (CWL) workflows. Readers are "
"expected to be familiar with workflow managers, YAML, and comfortable "
"with following instructions for the command-line. The other sections of "
"the user guide cover the same concepts, but in more detail. If you are "
"already familiar with CWL or you are looking for more advanced content, "
"you may want to skip this section."
msgstr ""
"このセクションでは、Common Workflow Language（CWL）ワークフローの使用を開始す"
"るための基本的な概念について説明します。読者は、ワークフローマネージャー、"
"YAML に精通し、コマンドラインの指示に従うことに慣れていることが期待されます。"
"このユーザーガイドの他のセクションは、同じ概念をカバーしていますが、より詳細"
"に説明されています。すでにCWLに精通している場合、またはより高度なコンテンツを"
"探している場合は、このセクションをスキップすることができます。"

#: ../../src/introduction/basic-concepts.md:10 7a56d394fb244431aefce7ebbb834ecf
msgid "The CWL Specification"
msgstr "CWLの仕様"

#: ../../src/introduction/basic-concepts.md:21 35800ed2c56d489190d3702d9ad20fd7
msgid ""
"The CWL specification is a document written and maintained by the CWL "
"community. The specification has different versions. The version covered "
"in this user guide is the {{ cwl_version }}."
msgstr ""
"CWL仕様は、CWLコミュニティによって書かれ、維持されている文書です。この仕様には異なるバージョンが存在します。このユーザーガイドで扱うバージョンは{{"
" cwl_version }}です。"

#: ../../src/introduction/basic-concepts.md:25 3ab6dd6b2f694afeb08f3984a74f3efb
msgid ""
"The specification version can have up to three numbers separated by `.`s "
"(dots). The first number is the major release, used for backward-"
"incompatible changes like the removal of deprecated features. The second "
"number is the minor release, used for new features or smaller changes "
"that are backward-compatible. The last number is used for bug fixes, like"
" typos and other corrections to the specification."
msgstr ""
"仕様のバージョンは、`.`s（ドット）で区切られた最大3つの数字を持つことができま"
"す。最初の番号はメジャーリリースで、非推奨機能の削除など、後方互換性のない変"
"更に使用されます。2番目の番号はマイナーリリースで、新機能や後方互換性のある小"
"さな変更に使用されます。最後の番号は、仕様の誤字やその他の修正など、バグフィ"
"ックスに使用される番号です。"

#: ../../src/introduction/basic-concepts.md:33 72ae1fb763a34c41b1b06adcbe1522c3
msgid ""
"The model used for the specification version is called Semantic "
"Versioning. See the end of this section to [learn more](#learn-more) "
"about it."
msgstr ""
"仕様のバージョンアップに使われるモデルは、セマンティックバージョニングです。"
"それについて[もっと知りたい](#learn-"
"more)方は、このセクションの最後をご覧ください。"

#: ../../src/introduction/basic-concepts.md:37 5aa7d3ee6cb048d888f1e1f49d0e08be
msgid "Implementations"
msgstr "実装"

#: ../../src/introduction/basic-concepts.md:39 c87e6daefda74579a39924777b2e6809
msgid ""
"An implementation of the CWL specification is any software written "
"following what is defined in a version of the specification document. "
"However, implementations may not implement every aspect of the "
"specification. CWL implementations are licensed under both Open Source "
"and commercial licenses."
msgstr ""
"CWL仕様の実装とは、あるバージョンの仕様書で定義された内容に従って書かれたソフ"
"トウェアのことです。ただし、実装は仕様にあるすべてを実装するわけではありませ"
"ん。CWLの実装は、オープンソース・ライセンスと商用ライセンスの両方でライセンス"
"されています。"

#: ../../src/introduction/basic-concepts.md:44 c995e699ae2949219af252f9d802a43d
msgid ""
"CWL is well suited for describing large-scale workflows in cluster, cloud"
" and high performance computing environments where tasks are scheduled in"
" parallel across many nodes."
msgstr ""
"CWLは、多くのノードでタスクが並列にスケジューリングされるクラスタ、クラウド、"
"ハイパフォーマンスコンピューティング環境における大規模なワークフローを記述す"
"るのに適しています。"

#: ../../src/introduction/basic-concepts.md:51 09171f48a3d841b2acb6d803b2340c8e
msgid "CWL specification, implementations, and other tools."
msgstr "CWL仕様、実装、その他ツール。"

#: ../../src/introduction/basic-concepts.md:105
#: 1c1647a3496c4251a3193f94ee4e78c8
msgid "Processes and Requirements"
msgstr "Processes 及び Requirements"

#: ../../src/introduction/basic-concepts.md:107
#: 854633336f4d4fc394e62c53ce022c6b
msgid ""
"A process is a computing unit that takes inputs and produces outputs. The"
" behavior of a process can be affected by the inputs, requirements, and "
"hints. There are four types of processes defined in the CWL specification"
" {{ cwl_version }}:"
msgstr ""
"Processとは、入力を受けて出力を生成する計算のユニットです。Processの動作は、i"
"nputs、requirements、hintsに影響されることがあります。CWL仕様{{ cwl_version "
"}}では、4種類のProcessが定義されています："

#: ../../src/introduction/basic-concepts.md:112
#: 142a847f11d7462f8bf77bfe789410ca
msgid "A command-line tool."
msgstr "コマンドラインツール。"

#: ../../src/introduction/basic-concepts.md:113
#: 7c7567fa690043f9b4b89bdf8ca60cad
msgid "An expression tool."
msgstr "Expression ツール。"

#: ../../src/introduction/basic-concepts.md:114
#: 7afcf087d3ea49dabf1a641a2bb71b35
msgid "An operation."
msgstr "Operation。"

#: ../../src/introduction/basic-concepts.md:115
#: 6399939602334819a20b92b957352a8a
msgid "A workflow."
msgstr "ワークフロー。"

#: ../../src/introduction/basic-concepts.md:118
#: 8c55b15cebf142899045f229ccc86b1e
msgid "The processing units available in the CWL objects model."
msgstr "CWLオブジェクトモデルで使用可能な処理単位です。"

#: ../../src/introduction/basic-concepts.md:119
#: ec54c0e67e894bfba2d0fbb0f87ffdf4
msgid ""
"A command-line tool is a wrapper for a command-line utility like `echo`, "
"`ls`, and `tar`. A command-line tool can be called from a workflow."
msgstr ""
"コマンドラインツールは、`echo` 、`ls` 、`tar` "
"のようなコマンドラインユーティリティのラッパーです。コマンドラインツールは、ワークフローから呼び出せます。"

#: ../../src/introduction/basic-concepts.md:122
#: c88ad26efa794cbeb6f0690aa0cad5ea
msgid ""
"An expression tool is a wrapper for a JavaScript expression. It can be "
"used to simplify workflows and command-line tools, moving common parts of"
" a workflow execution into reusable JavaScript code that takes inputs and"
" produces outputs like a command-line tool."
msgstr ""
"ExpressionToolは、JavaScriptの式のラッパーです。WorkflowやCommandLineToolの簡"
"略化に使用でき、ワークフロー実行の共通部分を、CommandLineToolのように入力を受"
"けて出力を生成する再利用可能なJavaScriptコードに移動させることができます。"

#: ../../src/introduction/basic-concepts.md:127
#: 946825a7ea2c450eb3e41b5548670fb7
msgid ""
"Operation is an abstract process that also takes inputs, produces "
"outputs, and can be used in a workflow. But it is a special operation not"
" so commonly used. It is discussed in the [Operations "
"section](../topics/operations.md) of this user guide."
msgstr ""
"Operationは、入力を受け、出力を出す抽象的なプロセスでもあり、ワークフローで使"
"用することができます。しかし、あまり一般的に使われていない特別な処理です。こ"
"のユーザーガイドの[Operation編](../topics/operations.md)で説明します。"

#: ../../src/introduction/basic-concepts.md:131
#: 44aac23f302c4178accf7e431cfbb96c
msgid ""
"The workflow is a process that contains steps. Steps can be other "
"workflows (nested workflows), command-line tools, or expression tools. "
"The inputs of a workflow can be passed to any of its steps, while the "
"outputs produced by its steps can be used in the final output of the "
"workflow."
msgstr ""
"Workflowは、ステップを含むプロセスです。ステップには、他のWorkflow（ネストさ"
"れたWorkflow）、CommandLineTool、ExpressionToolを使用することができます。Work"
"flowの入力は、そのステップのいずれかに渡すことができ、ステップによって生成さ"
"れた出力は、Workflowの最終出力に使用することができます。"

#: ../../src/introduction/basic-concepts.md:137
#: 5afdb7aaf0bf4c1abf4c22cdbdd58be9
msgid ""
"The CWL specification allows for implementations to provide extra "
"functionality and specify prerequisites to workflows through "
"*requirements*. There are many requirements defined in the CWL "
"specification, for instance:"
msgstr ""
"CWL 仕様では、*requirements* "
"を通じて、実装が追加機能を提供し、ワークフローの前提条件を指定することができます。CWL仕様には、例えば、以下のような多くの要件が定義されています："

#: ../../src/introduction/basic-concepts.md:141
#: 07c5789c59224ed78a3ecd03cfe872e9
msgid ""
"[`InlineJavascriptWorkflow`](https://w3id.org/cwl/Workflow.html#InlineJavascriptRequirement)"
" - enables JavaScript in expressions."
msgstr ""
"[`InlineJavascriptWorkflow`](https://w3id.org/cwl/Workflow."
"html#InlineJavascriptRequirement) - でJavaScriptを有効にします。"

#: ../../src/introduction/basic-concepts.md:142
#: 6f9854ae1b884ad39f88d2f39d66cb98
msgid ""
"[`SubworkflowFeatureRequirement`](https://w3id.org/cwl/Workflow.html#SubworkflowFeatureRequirement)"
" - enables nested workflows."
msgstr ""
"[`SubworkflowFeatureRequirement`](https://w3id.org/cwl/Workflow."
"html#SubworkflowFeatureRequirement) - ネストしたワークフローを有効にします。"

#: ../../src/introduction/basic-concepts.md:143
#: 23fef6de073f4da18118e4d0512670fe
msgid ""
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/Workflow.html#InitialWorkDirRequirement)"
" - controls staging files in the input directory."
msgstr ""
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/Workflow."
"html#InitialWorkDirRequirement) - "
"入力ディレクトリのステージングファイルを制御します。"

#: ../../src/introduction/basic-concepts.md:145
#: fb3762f91177401ea624d1e716d67ae6
msgid ""
"Some CWL runners may provide requirements that are not in the "
"specification. For example, GPU requirements are supported in `cwltool` "
"through the `cwltool:CUDARequirement` requirement, but it is not part of "
"the {{ cwl_version }} specification and may not be supported by other CWL"
" runners."
msgstr ""
"いくつかのCWLランナーは、仕様にないrequirementsを提供することがあります。例え"
"ば、GPUに関するrequirementsは`cwltool` で`cwltool:CUDARequirement` "
"を通してサポートされていますが、{{ cwl_version }}仕様の一部ではないので、他の"
"CWLランナーではサポートされていないかもしれません。"

#: ../../src/introduction/basic-concepts.md:151
#: b6a5cd431c324078a9a4e1513a14ee28
msgid ""
"Hints are similar to requirements, but while requirements list features "
"that are required, hints list optional features. Requirements are "
"explained in detail in the [Requirements](../topics/requirements-and-"
"hints.md) section."
msgstr ""
"HintsはRequirementsと似ていますが、Requirementsが必須機能を列挙するのに対し、"
"Hintsはオプションの機能を列挙します。Requirementsについては、[Requirements](."
"./topics/requirements-and-hints.md) セクションで詳しく説明しています。"

#: ../../src/introduction/basic-concepts.md:155
#: 88d7bad84dd341d2abb33673b8b8f250
msgid "FAIR Workflows"
msgstr "FAIRワークフロー"

#: ../../src/introduction/basic-concepts.md:157
#: bcbf5d76cf5f47b2a9691b7d2d8ef891
msgid ""
"The FAIR principles have laid a foundation for sharing and publishing "
"digital assets, and in particular, data. The FAIR principles emphasize "
"machine accessibility and that all digital assets should be Findable, "
"Accessible, Interoperable, and Reusable. Workflows encode the methods by "
"which the scientific process is conducted and via which data are created."
" It is thus important that workflows both support the creation of FAIR "
"data and themselves adhere to the FAIR principles. — [FAIR Computational "
"Workflows](https://workflows.community/groups/fair/), Workflows Community"
" Initiative."
msgstr ""

#: ../../src/introduction/basic-concepts.md:167
#: 4ea1d3bf04dc42f0bc6735a45b9e0dc0
msgid ""
"CWL has roots in \"make\" and many similar tools that determine order of "
"execution, based on dependencies between tasks. However, unlike \"make\","
" CWL tasks are isolated, and you must be explicit about your inputs and "
"outputs."
msgstr ""
"CWLのルーツは、タスク間の依存関係に基づき、実行順序を決定する \"make\" "
"や多くの類似ツールにあります。しかし、\"make\" "
"とは異なり、CWLのタスクは分離されており、入力と出力を明示する必要があります。"

#: ../../src/introduction/basic-concepts.md:171
#: c0f53138bf084939a54b0a576b44199f
msgid ""
"The benefit of explicitness and isolation are flexibility, portability, "
"and scalability; tools and workflows described with CWL can transparently"
" leverage technologies such as Docker and be used with CWL "
"implementations from different vendors."
msgstr ""
"CWLで定義されたツールやワークフローは、Dockerなどの技術を透過的に活用し、異な"
"るベンダーのCWL実装と組み合わせて使用することができるためです。"

#: ../../src/introduction/basic-concepts.md:176
#: 91d6eb4984a6410ba99616b6617ba9af
msgid "`cwltool` also uses the PROV-O standard ontology for data provenance."
msgstr "`cwltool` はまた、データプロベナンスのためのPROV-O標準オントロジーを使用しています。"

#: ../../src/introduction/basic-concepts.md:178
#: ../../src/introduction/prerequisites.md:183
#: ../../src/introduction/quick-start.md:94 0d7e607b00b9485aa2e3c5fb0a931bc6
#: 161697ed3e864155bb89d8be794fc139 b4a7563eabf547c3bf7eab2567a27b51
msgid "Learn More"
msgstr "さらなる学習"

#: ../../src/introduction/basic-concepts.md:180
#: 7221a89559944627b4c3db37f468f72c
msgid "Semantic Versioning - <https://semver.org/>"
msgstr "セマンティック・バージョニング -<https://semver.org/>"

#: ../../src/introduction/basic-concepts.md:181
#: bccf086fc9514f76b60dc161e3a09da3
msgid ""
"The CWL Specification page in the CWL website: "
"<https://www.commonwl.org/specification/>"
msgstr "CWLサイト内の「CWL仕様」ページ：<https://www.commonwl.org/specification/>"

#: ../../src/introduction/basic-concepts.md:182
#: a5b37924c7d04ab984ff2542847afc4a
msgid ""
"The Command Line Tool Description Standard: "
"<[https://www.commonwl.org/v1.2/CommandLineTool.html](https://w3id.org/cwl/CommandLineTool.html)>"
msgstr ""
"<[https://www.commonwl.org/v1.2/CommandLineTool.html](https://w3id.org/cwl/"
"CommandLineTool.html)>から"

#: ../../src/introduction/basic-concepts.md:183
#: 44af015fa36644b99f07338d241d29c1
msgid ""
"The current CWL specification on GitHub: {{ '<https://github.com/common-"
"workflow-language/cwl-{}>'.format(cwl_version_text) }}"
msgstr ""
"GitHubにある現在のCWL仕様：{{ '<https://github.com/common-workflow-"
"language/cwl-{}>'.format(cwl_version_text) }}"

#: ../../src/introduction/basic-concepts.md:184
#: bffca993172048a4b7ab7c62637662e2
msgid ""
"The list of Implementations in the CWL website: "
"<https://www.commonwl.org/implementations/>"
msgstr "CWLサイト内の実装のリスト：<https://www.commonwl.org/implementations/>"

#: ../../src/introduction/basic-concepts.md:185
#: 84c61946406347c8b138772909110d54
msgid "PROV-O: The PROV Ontology - <https://www.w3.org/TR/prov-o/>"
msgstr "PROV-O: PROVオントロジー -<https://www.w3.org/TR/prov-o/>"

#: ../../src/introduction/basic-concepts.md:186
#: eb0b6a62e06143eabc7b92acff9643ea
msgid ""
"CWL Operations are covered in the [Operations](../topics/operations.md) "
"section of this user guide."
msgstr "CWLのOperationsについては、本ユーザーガイドの[Operations](../topics/operations.md)セクションで説明します。"

#: ../../src/introduction/index.md:1 48532f7701c54166859098e521a43db0
msgid "Introduction"
msgstr "はじめに"

#: ../../src/introduction/index.md:3 08db628a949b4513b824ee334e70a7df
msgid ""
"This section will guide you through a short introduction to CWL, the "
"prerequisites for following this user guide, and some basic concepts that"
" are useful to know before reading the rest of the user guide."
msgstr ""
"このセクションでは、CWLの簡単な紹介、このユーザーガイドに従うための前提条件、"
"そしてユーザーガイドの他の部分を読む前に知っておくと便利な基本概念について案"
"内します。"

#: ../../src/introduction/prerequisites.md:1 d3f5749a76c14fdf8052f5f683d11b9e
msgid "Prerequisites"
msgstr "前提条件"

#: ../../src/introduction/prerequisites.md:6 ab9e21b3e99641d096ba70012b4eb035
#, fuzzy
msgid ""
"The software and configurations listed in this section are prerequisites "
"for following this user guide. The CWL standards are implemented by many "
"different workflow runners and platforms. This list of requirements "
"focuses on the CWL reference runner, `cwltool`. You can use another CWL-"
"compatible runner or workflow system, but the results and interface may "
"look different (though the exact workflow outputs should be identical)."
msgstr ""
"このセクションに記載されているソフトウェアと構成は、このユーザーガイドに従う"
"ための前提条件となるものです。CWL標準は、多くの異なるワークフローランナー(訳"
"注:ワークフローを実行するためのソフトウェア)やプラットフォームによって実装さ"
"れています。この要件のリストは、CWL参照ランナー、`cwltool` に焦点を当てていま"
"す。他のCWL互換ランナーやワークフローシステムを使用することもできますが、結果"
"やインターフェイスは異なるかもしれません（ただし、正確なワークフロー出力は同"
"一でなければなりません）。"

#: ../../src/introduction/prerequisites.md:12 8ed426ebcb744839915e7c414d69b1e9
msgid "CWL Implementations"
msgstr "CWL実装"

#: ../../src/introduction/prerequisites.md:14 ff74d48407464c4b9d451fa419137144
msgid ""
"There are many implementations of the CWL standards. Some are complete "
"CWL runners, while others could be plug-ins or extensions to workflow "
"engines. We have a better explanation in the [Implementations](basic-"
"concepts.md#implementations) section."
msgstr ""
"CWL標準規格の実装は数多く存在します。あるものは完全なCWL実装であり、他のもの"
"はワークフローエンジンのプラグインや拡を含むことがあります。[実装](basic-"
"concepts.md#implementations)のセクションでより詳しい説明をしています。"

#: ../../src/introduction/prerequisites.md:19 eb98aa9c71d746a69e9610996ffc5b47
msgid "Operating System"
msgstr "オペレーティングシステム"

#: ../../src/introduction/prerequisites.md:21 209a0018e7da48f09b27dc507ba14d24
msgid ""
"We recommend using an up-to-date operating system. You can choose any of "
"the following options for your operating system:"
msgstr "最新のオペレーティングシステムを使用することをお勧めします。OSは、以下のいずれかをお選びいただけます："

#: ../../src/introduction/prerequisites.md:24 8baf869537ea478791356320280df928
msgid "Linux"
msgstr "Linux"

#: ../../src/introduction/prerequisites.md:25 248e9760ce60442eb10ab7247d6af23b
msgid "macOS"
msgstr "macOS"

#: ../../src/introduction/prerequisites.md:26 d89306bbadf44b6bba8959f1f68cc2f0
msgid "Windows"
msgstr "Windows"

#: ../../src/introduction/prerequisites.md:29 aeeb990abbbd42cca122c342054be29c
msgid ""
"If you are using Windows, you will have to install the Windows Subsystem "
"for Linux 2 as documented in the [`cwltool` documentation for Microsoft "
"Windows users](https://github.com/common-workflow-"
"language/cwltool/blob/main/README.rst#ms-windows-users). Your operating "
"system also needs internet access and a recent version of Python (3.6+)."
msgstr ""
"Windowsを使用している場合は、[Microsoft Windows ユーザのための`cwltool` "
"文書](https://github.com/common-workflow-language/cwltool/blob/main/README."
"rst#ms-windows-users)に記載されているように、Windows Subsystem for Linux 2を"
"インストールする必要があります。インターネットアクセスとPythonの最新バージョ"
"ン(3.6+)も必要です。"

#: ../../src/introduction/prerequisites.md:34 21d1f29fb15745c480194eae6acdd031
msgid "CWL Runner"
msgstr "CWL Runner"

#: ../../src/introduction/prerequisites.md:39 89f0bf6ff8544a6d87114085be8e0bb6
msgid ""
"The first thing you will need for running CWL workflows is a CWL runner. "
"`cwltool` is a Python Open Source project maintained by the CWL "
"community. It is also the CWL reference runner, which means it must "
"support everything in the current CWL specification, {{ cwl_version }}."
msgstr ""
"CWL ワークフローを実行するために最初に必要なものは、CWL runnerです。`cwltool`"
" は、CWL コミュニティによって維持されている Python "
"オープンソース・プロジェクトです。これはCWL reference runner(訳注: "
"CWLの参照実装)でもあり、`cwltool`は現在のCWL仕様{{ cwl_version "
"}}のすべてをサポートしなければならないことを意味します。"

#: ../../src/introduction/prerequisites.md:44 068f09d4d66547448693f7b9dadef497
msgid ""
"`cwltool` can be installed with `pip`, `apt`, or `conda`. We recommend "
"using a virtual environment like `venv` or `conda`."
msgstr ""
"`cwltool` は `pip`、`apt` または `conda` でインストールできます。`venv` や "
"`conda` のような仮想環境を使用することを推奨します。"

#: ../../src/introduction/prerequisites.md:48 1edf8b8438334ae29dc406dbfd711228
msgid ""
"Visit the `cwltool` "
"[documentation](https://cwltool.readthedocs.io/en/latest/#install) for "
"details on installing `cwltool`."
msgstr ""
"`cwltool` を`apt` と`conda` "
"とともにインストールする他の方法については、`cwltool` "
"[ドキュメント](https://github.com/common-workflow-language/cwltool#install) "
"を参照してください。"

#: ../../src/introduction/prerequisites.md:52 5e300141ce43435f9437507374987213
msgid "Let's use a simple CWL tool description `true.cwl` with `cwltool`."
msgstr "簡単なCWLツール定義`true.cwl` で`cwltool` を使ってみましょう。"

#: ../../src/introduction/prerequisites.md:54 282ac7ba2a2346feac2456bcda0f214a
msgid "`true.cwl`"
msgstr "`true.cwl`"

#: ../../src/introduction/prerequisites.md:60 0b36f94f479a4bce9bd9be9983894421
msgid ""
"The `cwltool` command has an option to validate CWL tool and workflow "
"descriptions. This option will parse the CWL document, look for syntax "
"errors, and verify that the workflow descriptions are compliant with the "
"CWL standards. However, these actions will be performed without running "
"the document. To validate CWL workflows (or even a standalone command "
"line tool description like the above) pass the `--validate` option to the"
" `cwltool` command:"
msgstr ""
"`cwltool` コマンドには、CWL "
"ツールおよびワークフロー定義を検証するオプションがあります。このオプションは、CWL文書を解析し、構文エラーを探し、ワークフロー記述がCWL標準に準拠しているかどうかを検証します。ただし、これらの操作は、ドキュメントを実行せずに行われます。CWLワークフロー（または上記のようなスタンドアロンコマンドラインツールの記述も）を検証するには、`cwltool`"
" コマンドに`--validate` オプションを渡します："

#: ../../src/introduction/prerequisites.md:66 5fce122794e34892b430ca4bdba5ba50
msgid "Validating `true.cwl` with `cwltool`."
msgstr "`cwltool` を使って `true.cwl` を検証します。"

#: ../../src/introduction/prerequisites.md:71 73f074f47d1449dcb40ff960a84851fd
msgid "You can run the CWL tool description by omitting the `--validate` option:"
msgstr "`--validate` オプションを省略することで、CWLツール定義を実行することができます："

#: ../../src/introduction/prerequisites.md:73 2dd5a67870ca41b48e17c468ba15888b
msgid "Running `true.cwl` with `cwltool`."
msgstr "`cwltool` を使って `true.cwl` を実行します。"

#: ../../src/introduction/prerequisites.md:78 d2dc809318be49cc996d892e93ad84ac
msgid "Generic ``cwl-runner`` alias"
msgstr "一般的な ``cwl-runner`` エイリアス"

#: ../../src/introduction/prerequisites.md:80 9809c2e262924ef286b0bd62e0b00995
msgid ""
"`cwl-runner` is an implementation-agnostic alias for any CWL compliant "
"runner. This simply means that the `cwl-runner` alias command can be "
"invoked independently, and is not reliant on a particular CWL runner "
"program name. Users can invoke `cwl-runner` instead of invoking a CWL "
"runner like `cwltool` directly. The `cwl-runner` is installed by a system"
" administrator or user to point to the preferred CWL implementation. This"
" is convenient for environments with multiple CWL runners."
msgstr ""
"`cwl-runner` は、CWL準拠のランナーに対する、実装にとらわれないエイリアスです。これは、`cwl-runner` "
"エイリアスコマンドを独立して呼び出すことができ、特定のCWLランナープログラム名に依存しないことを意味します。ユーザーは、`cwltool` "
"のようなCWLランナーを直接呼び出す代わりに、`cwl-runner` を呼び出すことができます。`cwl-runner` "
"は、システム管理者またはユーザーによってインストールされ、好みのCWL実装を指し示す。これは、複数のCWLランナーがある環境では便利です。"

#: ../../src/introduction/prerequisites.md:88 6dd6aa836099469381fb564d63b84f3d
msgid ""
"The CWL community publishes a Python package with the name `cwlref-"
"runner` that installs an alias for `cwltool` under the name `cwl-runner`."
msgstr ""
"CWLコミュニティは、`cwlref-runner` "
"という名前のPythonパッケージを公開しており、`cwltool` のエイリアスを`cwl-"
"runner` という名前でインストールします"

#: ../../src/introduction/prerequisites.md:91 cc1a9b95508e44a1bf08ae75d990c301
msgid "Installing `cwl-runner` alias for cwltool with `pip`."
msgstr "cwltool のエイリアス `cwl-runner` を `pip` でインストールします。"

#: ../../src/introduction/prerequisites.md:98 8f8c80f705d94d4899b250bbf9c54562
msgid ""
"Now you can validate and run your workflow with the `cwl-runner` "
"executable, which will invoke `cwltool`. You should have the same results"
" and output as in the previous section."
msgstr ""
"これで `cwl-runner` 実行ファイルを用いてワークフローを検証・実行し、`cwltool` "
"を呼び出すことができるようになりました。前のセクションと同じ結果と出力が得られるはずです。"

#: ../../src/introduction/prerequisites.md:102 176e4214d18149f3ba0bda692bcf760f
msgid "Validating `true.cwl` with `cwl-runner`."
msgstr "検証`true.cwl` with`cwl-runner`."

#: ../../src/introduction/prerequisites.md:107 4890bf20bc3842d3a7421b555bcda94a
msgid "Running `true.cwl` with `cwl-runner`."
msgstr "`true.cwl` を `cwl-runner` で実行します。"

#: ../../src/introduction/prerequisites.md:112 2475a83cf6ed4389bb680fa37e8fe69c
msgid ""
"Another way to execute `cwl-runner` is by invoking the file directly. For"
" that, the first thing you need to do is copy `true.cwl` workflow into a "
"new file: `true_shebang.cwl`, and include a special first line, a "
"*shebang*:"
msgstr ""
"`cwl-runner` を実行するもう一つの方法は、ファイルを直接起動することです。そのためには、まず`true.cwl` "
"ワークフローを新しいファイル`true_shebang.cwl` にコピーし、特別な最初の行、*shebang* を含める必要があります："

#: ../../src/introduction/prerequisites.md:116 24da787aa76c4480838a93ba0533898d
msgid "`true_shebang.cwl`"
msgstr "`true_shebang.cwl`"

#: ../../src/introduction/prerequisites.md:122 4f3cb8d1f9ce4e3d852e81aa4e0f60be
msgid "Now you can make the file `true_shebang.cwl` executable with `chmod u+x`."
msgstr "`chmod u+x` を実行することで、 `true_shebang.cwl` を実行可能なファイルにすることができます。"

#: ../../src/introduction/prerequisites.md:124 27693d62faa045d9b03143d9bd2afcdf
msgid "Making `true.cwl` executable."
msgstr "`true.cwl` 実行可能なものにする。"

#: ../../src/introduction/prerequisites.md:131 703531514abe4fd48015c472005dbffa
msgid ""
"And finally, you can execute it directly in the command-line. On "
"execution, the program specified in the shebang (`cwl-runner`) will be "
"used to execute the rest of the file."
msgstr ""
"そして最後に、コマンドラインで直接実行することができます。実行時には、shebangで指定されたプログラム(`cwl-"
"runner`)が、ファイルの残りの部分を実行するために使用されます。"

#: ../../src/introduction/prerequisites.md:135 abba2e14c4e54252bb75983274663a7a
msgid "Running `true_shebang.cwl` with a shebang."
msgstr "`true_shebang.cwl` をシェバングで実行する。"

#: ../../src/introduction/prerequisites.md:141 11fea992c00940d29eb29ccf4b9370e9
msgid ""
"The *shebang* is the two-character sequence `#!` at the beginning of a "
"script. When the script is executable, the operating system will execute "
"the script using the executable specified after the shebang. It is "
"considered a good practice to use `/usr/bin/env [executable]` rather than"
" using a hard-coded location, since `/usr/bin/env [executable]` looks for"
" the `[executable]` program in the system `PATH`,"
msgstr ""
"*shebang* (訳注：発音、シバン、シェバン)は、スクリプトの冒頭の2文字列`#!` の"
"ことです。スクリプトが実行可能な場合、オペレーティングシステムは、shebangの後"
"に指定された実行可能ファイルを使用してスクリプトを実行します。`/usr/bin/env "
"<executable>` は` <executable>` プログラムを設定されている環境変数`PATH` "
"の中で探すので、ハードコードされた場所を使うよりも`/usr/bin/env <executable>`"
" を使うことが良い習慣と考えられています"

#: ../../src/introduction/prerequisites.md:148 854736eef2ac4b63b187a4cea9660ae4
msgid "Text Editor"
msgstr "テキストエディタ"

#: ../../src/introduction/prerequisites.md:150 480fbb7a743046068c114fff5b396a9f
msgid ""
"You can use any text editor with CWL, but for syntax highlighting we "
"recommend an editor with YAML support. Popular editors are Visual Studio "
"Code, Sublime, WebStorm, vim/neovim, and Emacs."
msgstr ""
"CWLではどんなテキストエディタでも使えますが、シンタックスハイライトのために、YAMLをサポートするエディタをお勧めします。人気のあるエディタは、Visual"
" Studio Code、Sublime、WebStorm、vim/neovim、そしてEmacsです。"

#: ../../src/introduction/prerequisites.md:154 28da3eea8fd245d1936013d021c25164
msgid ""
"There are extensions for Visual Studio Code and WebStorm that provide "
"integration with CWL, and features such as customized syntax highlighting"
" and better auto-complete:"
msgstr ""
"Visual Studio "
"CodeとWebStormには、CWLとの統合を実現する拡張機能があり、カスタマイズされたシンタックスハイライトやより優れた自動補完などの機能が用意されています："

#: ../../src/introduction/prerequisites.md:158 73c08e11e90d4c7f952307a1cdaa360b
msgid ""
"Visual Studio Code with the Benten (CWL) plugin - "
"<https://github.com/rabix/benten#install-vs-code-extension>"
msgstr ""
"Benten(弁天)（CWL）プラグインを使ったVisual Studio Code -<https://github.com/"
"rabix/benten#install-vs-code-extension>"

#: ../../src/introduction/prerequisites.md:159 a5b788252a924338963f0ed198fc22ca
msgid ""
"cwl-plugin for IntelliJ - <https://plugins.jetbrains.com/plugin/10040"
"-cwl-plugin>"
msgstr ""
"IntelliJ 用 cwl-plugin -<https://plugins.jetbrains.com/plugin/10040-cwl-"
"plugin>"

#: ../../src/introduction/prerequisites.md:161 ee705b919acd461a8d9622821da246b6
msgid ""
"The CWL community also maintains a list of editors and viewers: "
"<https://www.commonwl.org/tools/#editors>"
msgstr "CWLコミュニティでは、エディターやビューアーのリストも管理しています：<https://www.commonwl.org/tools/#editors>"

#: ../../src/introduction/prerequisites.md:164 7724b63db3cc45139379898d047c0f83
msgid "Docker"
msgstr "Docker"

#: ../../src/introduction/prerequisites.md:168 eff13997c1ce43d1ad2d7a4d927394fe
msgid ""
"`cwltool` uses Docker to run tools, workflows, and workflow steps that "
"specify a software container. Follow the instructions in the Docker "
"documentation to install it for your operating system: "
"<https://docs.docker.com/>."
msgstr ""
"`cwltool` は、ツール、ワークフロー、およびワークフロー "
"ステップで指定されたソフトウェアコンテナをDockerを使用して実行します。Docker "
"ドキュメントの指示に従って、お使いのオペレーティングシステム用にインストール"
"してください：<https://docs.docker.com/>."

#: ../../src/introduction/prerequisites.md:172 2872503638624b7e904ae407375ac165
msgid ""
"You do not need to know how to write and build Docker containers. In the "
"rest of the user guide, we will use existing Docker images for running "
"examples, and to clarify the differences between the execution models "
"with and without containers."
msgstr ""
"Dockerコンテナの書き方や構築方法を知っておく必要はありません。このユーザーガ"
"イドの残りの部分では、実行例として既存のDockerイメージを使用し、コンテナのあ"
"る実行モデルとない実行モデルの違いを明確にすることにします。"

#: ../../src/introduction/prerequisites.md:178 52ddcc9bc1554d809371fc0a503c40bc
msgid ""
"`cwltool` supports running containers with Docker, Podman, udocker, and "
"Singularity. You can also use alternative container registries for "
"pulling images."
msgstr ""
"`cwltool` は、Docker、Podman、udocker、Singularityによるコンテナの実行をサポ"
"ートしています。また、コンテナイメージを取得するために代替のコンテナレジスト"
"リを使用することもできます。"

#: ../../src/introduction/prerequisites.md:185 f3bbfa17f31a459386461951de157dd2
msgid ""
"The [Implementations](basic-concepts.md#implementations) topic in the "
"next section, Basic Concepts."
msgstr "次項の「基本コンセプト」の[実装](basic-concepts.md#implementations)のトピックを参照してください。"

#: ../../src/introduction/prerequisites.md:186 e22b9e7c56104e018e6d2f3d547c01ea
msgid "The Python `venv` module: <https://docs.python.org/3/library/venv.html>"
msgstr "Python`venv` モジュール:<https://docs.python.org/3/library/venv.html>"

#: ../../src/introduction/quick-start.md:1 9ca367e3ca754a0fa88dab64724b95b6
msgid "Quick Start"
msgstr "クイックスタート"

#: ../../src/introduction/quick-start.md:3 733db5702c774f32b8c91d13f74f3720
msgid ""
"This section will show you a brief overview of what CWL is, and where you"
" can learn more about it. No previous knowledge of CWL is required, but "
"you must be comfortable following instructions for the command-line."
msgstr ""
"このセクションでは、CWLとは何か、またCWLについてもっと詳しく知ることができる"
"場所について、簡単に紹介します。CWLに関する予備知識は必要ありませんが、コマン"
"ドラインを使用することに慣れていると良いです。"

#: ../../src/introduction/quick-start.md:7 0b164074dd0849c3b2c8d2f78ea99e95
msgid "“Hello World”"
msgstr "\"Hello World\""

#: ../../src/introduction/quick-start.md:12 6485f96f638548fbb7addc57f6cde92b
msgid ""
"CWL documents are written in [YAML](../topics/index.md) (and/or JSON). "
"The example below shows a simple CWL “Hello World” workflow annotated "
"with comments. Note that comments start with `#`:"
msgstr ""
"CWLドキュメントは[YAML](../topics/index.md)(および/またはJSON)で書かれています。以下の例は、コメントで注釈されたシンプルなCWL"
" \"Hello World\" ワークフローを示しています。コメントは`#` で始まることに注意してください："

#: ../../src/introduction/quick-start.md:16 5e06f9c4754347b8bac88d24c21e0f67
msgid "`hello_world.cwl`"
msgstr "`hello_world.cwl`"

#: ../../src/introduction/quick-start.md:22 6a13fb9112ab41acb60dc65b3656f63e
msgid ""
"The example above is just a wrapper for the `echo` command-line tool. "
"Running the workflow above with the default input values will produce the"
" same result as the command-line `echo \"Hello World\"`."
msgstr ""
"上記の例は、`echo` のCommandLineToolのラッパーに過ぎません。デフォルトの入力"
"値で上記のワークフローを実行すると、コマンドラインと同じ結果が得られます`"
"echo \"Hello World\"`."

#: ../../src/introduction/quick-start.md:27 7b2ae93353184faea0ae4f4acdfc3350
msgid ""
"In CWL, there is a distinction between a command-line tool and a "
"workflow. But for the sake of simplicity, we are using the term "
"“workflow” here. You will learn more about this in the [basic concepts"
"](basic-concepts.md) section."
msgstr ""
"CWLでは、CommandLineToolとWorkflowは区別されています。しかし、ここでは簡略化"
"のため、「ワークフロー」という用語を使用しています。これについては、[基本概念"
"](basic-concepts.md)のセクションで詳しく説明します。"

#: ../../src/introduction/quick-start.md:32 1ed30b04073d47a9893774746479fb5d
msgid "Installing a CWL Runner"
msgstr "CWL Runnerのインストール"

#: ../../src/introduction/quick-start.md:34 73a42cd9e0e54296985088b7221a8a93
msgid ""
"`cwltool` is an implementation of the CWL specification. It is also the "
"CWL *Reference Runner* for the specification, and it is compliant with "
"the latest version of the specification: {{ cwl_version }}. You can "
"install `cwltool` using `pip`:"
msgstr ""
"`cwltool` は、CWL仕様の実装の１つです。また、同仕様のCWL*Reference Runner* "
"でもあり、同仕様の最新バージョンに準拠しています：{{cwl_version "
"}}に準拠しています。`cwltool` は、`pip` を使ってインストールできます："

#: ../../src/introduction/quick-start.md:39 57aea587ade24610be62f5d993b0b755
msgid "Installing `cwltool` with `pip`."
msgstr "`cwltool` を`pip` でインストールします。"

#: ../../src/introduction/quick-start.md:47 51183fc986014edbb026a53f222e6c2e
msgid ""
"If installing the cwltool using the pip command doesn't work for you, the"
" [prerequisites](prerequisites.md) section contains other ways to install"
" `cwltool` and a more detailed list of software and libraries used for "
"following the rest of this user guide."
msgstr ""
"pipコマンドを使用してcwltoolをインストールしてもうまくいかない場合は、[前提条件](prerequisites.md)セクションに、`cwltool`"
" をインストールする他の方法と、このユーザーガイドの残りの部分を追うために使用するソフトウェアとライブラリのより詳細なリストがあります。"

#: ../../src/introduction/quick-start.md:51 a7582c3ae37a462a8ae1e72b3f321534
msgid "Running \"Hello World\""
msgstr "\"Hello World\"を実行する"

#: ../../src/introduction/quick-start.md:53 0595e96912dc40e5a09f2ced2d2b7bcd
msgid ""
"The usage of the `cwltool` command-line executable is basically `cwltool "
"[OPTIONS] [CWL_DOCUMENT] [INPUTS_OBJECT]`. You can run the "
"`hello_world.cwl` workflow without specifying any option:"
msgstr ""
"基本的に `cwltool` の使い方は、`cwltool [OPTIONS] [CWL_DOCUMENT] "
"[INPUTS_OBJECT]`です。`hello_world.cwl` "
"Workflowは、オプションを指定せずに実行することができます："

#: ../../src/introduction/quick-start.md:57 5b393c69816549b084516dda4d4274f5
msgid "Running `hello_world.cwl` with `cwltool`."
msgstr "`hello_world.cwl` を `cwltool` で実行します。"

#: ../../src/introduction/quick-start.md:62 4306d8ad802f45c18487d932d04492fa
msgid ""
"Or you can override the default value of the input parameter `message`, "
"similar to how you would change the argument of the `echo` base command:"
msgstr "また、`echo` base コマンドの引数を変更するのと同様に、入力パラメータ`message` のデフォルト値を上書きすることもできます："

#: ../../src/introduction/quick-start.md:65 8339ec411ad04c70ab8d795eb154fc38
msgid "Running `hello_world.cwl` with `cwltool` passing an input parameter."
msgstr "`hello_world.cwl` を`cwltool` で入力パラメータを渡して実行する。"

#: ../../src/introduction/quick-start.md:70 3ecca6985e754951aee00c93effe9517
msgid ""
"Another way of passing values to your workflow input parameters is via an"
" *Inputs Object*. This is a file containing the input fields with their "
"corresponding values. The Inputs Objects file can be written in JSON or "
"YAML. For example:"
msgstr ""
"ワークフロー入力パラメータに値を渡すもう一つの方法は、*Inputs Object* "
"を介する方法です。これは、入力フィールドとその対応する値を含むファイルです。Inputs Objects ファイルは、JSON または YAML "
"で記述することができます。例えば、以下のようになります："

#: ../../src/introduction/quick-start.md:74 d05e8e016b1d40c28c4b6091103fe920
msgid "`hello_world-job.json`"
msgstr "`hello_world-job.json`"

#: ../../src/introduction/quick-start.md:80 c5983ba6c86f4b749522c11cb3843911
msgid ""
"You can use this Inputs Object file now to execute the “Hello World” "
"workflow:"
msgstr "このInputs Objectファイルを使用して、「Hello World」ワークフローを実行することができるようになりました："

#: ../../src/introduction/quick-start.md:82 4065124edf3a4678a37c82e3070595cb
msgid "Passing an Inputs Object file to `cwltool`."
msgstr "`cwltool` に Inputs Object ファイルをします。"

#: ../../src/introduction/quick-start.md:88 52b1602b5c8d48db88d0b16f788e7703
msgid ""
"We used a similar file name for the workflow and for the Inputs Object "
"files. The *-job.json* suffix is very common in Inputs Object files, but "
"it is not a requirement. You can choose any name for your workflows and "
"Inputs Object files."
msgstr ""
"ワークフローとInputs "
"Objectファイルには、同様のファイル名を使用しました。*-job.json* "
"という接尾辞は、Inputs Object "
"ファイルでは非常に一般的ですが必須ではありません。ワークフローとInputs "
"Objectファイルには、任意の名前を付けることができます。"

#: ../../src/introduction/quick-start.md:96 3b06faf5f3194bd8a96118d9f050f61e
msgid "Continue reading the next sections of this User Guide!"
msgstr "このユーザーガイドの次のセクションを読み進めてください！"

#: ../../src/introduction/quick-start.md:97 669b8ac154e74181830a430b1dc7684b
msgid "[List of CWL Implementations](https://www.commonwl.org/implementations)."
msgstr "[CWL 実装一覧](https://www.commonwl.org/implementations)。"

#: ../../src/introduction/quick-start.md:98 1c888f1b771d49b3a257ed534b5afa0a
msgid ""
"The [`common-workflow-language` organization](https://github.com/common-"
"workflow-language) at GitHub."
msgstr ""
"GitHubの[`common-workflow-language` organization](https://github.com"
"/common-workflow-language)です。"

#: ../../src/introduction/quick-start.md:99 dbce82b7a930493486a585ecb8891121
msgid ""
"[Common Workflow Language at "
"Wikipedia](https://en.wikipedia.org/wiki/Common_Workflow_Language)."
msgstr ""
"[Wikipedia上のCommon Workflow "
"Language](https://en.wikipedia.org/wiki/Common_Workflow_Language)。"

#: ../../src/introduction/quick-start.md:100 dc714ffd4278421b9f2417f41627722c
msgid ""
"[YAML.org](http://yaml.org/) and [YAML at "
"Wikipedia](https://en.wikipedia.org/wiki/YAML)."
msgstr ""
"[YAML.org](http://yaml.org/) と "
"[WikipediaにあるYAML](https://en.wikipedia.org/wiki/YAML) です。"

#: ../../src/introduction/quick-start.md:101 2bf7b924182f4f2bab88edef5ef85baa
msgid ""
"The {{'[CWL Specification "
"VERSION](https://www.commonwl.org/VERSION)'.replace('VERSION', "
"cwl_version_text) }}."
msgstr ""
"{{'[CWL 仕様 VERSION](https://www.commonwl.org/VERSION)'.replace('VERSION', "
"cwl_version_text) }} のことです。"

#: ../../src/introduction/quick-start.md:102 936a7dfab11a4f2c82c0b59964e3ea28
msgid ""
"[Workflow management system at "
"Wikipedia](https://en.wikipedia.org/wiki/Workflow_management_system)."
msgstr "[Wikipediaの項目としてのワークフロー管理システム](https://en.wikipedia.org/wiki/Workflow_management_system)。"

#: ../../src/setup.md:9 24ea9c5144664d9599d7aca767b4730a
msgid ""
"This page is out-of-date and was kept here to preserve the links of the "
"old User Guide. The information on this page has been migrated to the "
"[FAQ](/faq.md) section of the new user guide."
msgstr ""
"このページは古いもので、旧ユーザーガイドのリンクを保存するためにここに残され"
"ていました。このページの情報は、新しいユーザーガイドの [FAQ](/faq.md) "
"セクションに移行されました。"

#: ../../src/topics/additional-arguments-and-parameters.md:1
#: 3843684b039a40dea163de951ca56738
msgid "Additional Arguments and Parameters"
msgstr "追加の引数とパラメータ"

#: ../../src/topics/additional-arguments-and-parameters.md:3
#: a6fd1842b938435aa2a3c889019eec71
msgid ""
"Sometimes tools require additional command line options that don't "
"correspond exactly to input parameters."
msgstr "ツールには、入力パラメータに正確に対応しない追加のコマンドラインオプションが"
"必要な場合があります。"

#: ../../src/topics/additional-arguments-and-parameters.md:6
#: dfed0747ed544547afd364086d828c9b
msgid ""
"In this example, we will wrap the Java compiler to compile a java source "
"file to a class file.  By default, \"javac\" will create the class files "
"in the same directory as the source file.  However, CWL input files (and "
"the directories in which they appear) may be read-only, so we need to "
"instruct \"javac\" to write the class file to the designated output "
"directory instead."
msgstr ""
"この例では、Javaコンパイラを使用して、javaソースファイルをclassファイルにコン"
"パイルするようにラップします。  デフォルトでは、\"javac "
"\"はjavaファイルと同じディレクトリにclassファイルを作成します。  しかし、CWL"
"の入力ファイル（およびそのディレクトリ）は読み取り専用である場合があるので、"
"代わりに指定された出力ディレクトリにclassファイルを書き込むように「javac」に"
"指示する必要があります。"

#: ../../src/topics/additional-arguments-and-parameters.md:13
#: e690b567eae34f3f8dbdd7760e51449a
msgid "`arguments.cwl`"
msgstr "`arguments.cwl`"

#: ../../src/topics/additional-arguments-and-parameters.md:19
#: ../../src/topics/staging-input-files.md:15 4cee519b108143be89a0e47a75d7d649
#: 79585673fd654bab9ba7c1927d7e153b
msgid "`arguments-job.yml`"
msgstr "`arguments-job.yml`"

#: ../../src/topics/additional-arguments-and-parameters.md:24
#: ef070ebe5f7245489b05660fb6d7c178
msgid "Next, create a sample Java file to use with the command-line tool."
msgstr "次に、CommandLineToolで使用するサンプルJavaファイルを作成します。"

#: ../../src/topics/additional-arguments-and-parameters.md:30
#: 4ae43e3e841442039e4bb8c740096c56
msgid ""
"And now invoke `cwltool` providing the tool description and the input "
"object on the command line:"
msgstr "そして、コマンドラインでツール定義と入力オブジェクトを渡して`cwltool` を起動します："

#: ../../src/topics/additional-arguments-and-parameters.md:36
#: 8497291577914eb3a172c1ffb736d95d
msgid ""
"Here we use the `arguments` field to add an additional argument to the "
"command line that isn't tied to a specific input parameter."
msgstr "ここでは、`arguments` フィールドを使用して、特定の入力パラメータに結びつかない追加の引数をコマンドラインに追加しています。"

#: ../../src/topics/additional-arguments-and-parameters.md:43
#: dc9fa5f2cbb147b1853c4042c54010f3
msgid ""
"This example references a runtime parameter.  Runtime parameters provide "
"information about the hardware or software environment when the tool is "
"actually executed.  The `$(runtime.outdir)` parameter is the path to the "
"designated output directory.  Other parameters include "
"`$(runtime.tmpdir)`, `$(runtime.ram)`, `$(runtime.cores)`, "
"`$(runtime.outdirSize)`, and `$(runtime.tmpdirSize)`.  See the [Runtime "
"Environment][runtime] section of the CWL specification for details."
msgstr ""
"この例では、runtimeパラメータを参照しています。  runtimeパラメータは、ツール"
"が実際に実行されたときのハードウェアまたはソフトウェア環境に関する情報を提供"
"します。  ` $(runtime.outdir)` "
"パラメータは、指定された出力ディレクトリへのパスです。  その他、`$(runtime."
"tmpdir)`,`$(runtime.ram)`,`$(runtime.cores)`,`$(runtime."
"outdirSize)`,`$(runtime.tmpdirSize)` などがあります。  詳細はCWL仕様書の["
"Runtime Environment][runtime]の項を参照してください。"

#: ../../src/topics/best-practices.md:1 964bf8276dd04b65887448e1386e63fe
msgid "Best Practices"
msgstr "ベストプラクティス"

#: ../../src/topics/best-practices.md:3 7b59377bd56c47b8a71c18acfba4d3bb
msgid ""
"The following are a set of recommended good practices to keep in mind "
"when writing a Common Workflow Language description for a tool or "
"workflow. These guidelines are presented for consideration on a scale of "
"usefulness: although more is better, not all are required."
msgstr ""
"以下は、ツールやワークフローのCWL定義を書く際に留意すべき推奨グッドプラクティ"
"スのセットです。これらのガイドラインは、有用性の尺度で検討するために提示され"
"ています：多ければ多いほど良いが、すべてが必要なわけではありません。"

#: ../../src/topics/best-practices.md:8 2292670347cd4549bc6a51e972de0ef4
msgid ""
"No `type: string` parameters for names of input or reference "
"files/directories; use `type: File` or `type: Directory` as appropriate."
msgstr ""
"入力または参照のファイルやディレクトリの名前に `type: string` を使用しません。 `type:File` または `type: "
"Direcotry` を適宜使用します。"

#: ../../src/topics/best-practices.md:11 ae127b776eed4894af8cb680377703e0
#, fuzzy
msgid ""
"A CWL document (in conjunction with any external components like "
"`Dockerfile`s) is software code. Workflow developers should be aware that"
" the usual rules of software licensing apply to this document. For "
"example, if the workflow is shared publicly, licensing terms must be "
"clear so that a future user understands under what conditions they can "
"run the workflow, modify it and/or combine it with other workflows. For "
"this reason, please consider including a license field in the document. "
"The authors of this guide urge you to choose a pre-existing license "
"rather than trying to write your own (see the link below to learn more "
"about choosing a license), and our recommended practice is to choose a "
"license that allows for re-use by anyone, e.g. [Apache 2.0][apache-"
"license]."
msgstr ""
"CWL 定義（`Dockerfile`のような外部コンポーネントと合わせて）は、ソフトウェア"
"コードです。ワークフロー開発者は、ソフトウェアライセンスに関する通常の規則が"
"このCWL定義に適用されることを認識する必要があります。例えば、ワークフローが一"
"般に共有される場合、将来のユーザーがどのような条件でワークフローを実行、修正"
"、および/または他のワークフローと組み合わせることができるかを理解するために、"
"ライセンス条項は明確でなければなりません。このような理由から、CWL定義にライセ"
"ンスフィールドを含めることを検討してください。このガイドの著者は、独自のライ"
"センスを作成するのではなく、既存のライセンスを選択することをお勧めします（ラ"
"イセンスの選択について詳しくは、以下のリンクを参照してください）。そして、私"
"たちの推奨する実践は、誰でも再利用できるライセンスを選択することです。例えば "
"[Apache 2.0][apache-license]です。"

#: ../../src/topics/best-practices.md:20 384eb620dc31468e8c3f5f33a3436200
msgid ""
"If possible, the license should be specified with its corresponding [SPDX"
" identifier][spdx]. Construct the metadata field for the license by "
"providing a URL of the form `https://spdx.org/licenses/[SPDX-ID]` where "
"`SPDX-ID` is taken from the list of identifiers linked above. See the "
"example snippet below for guidance. For non-standard licenses without an "
"SPDX identifier, provide a URL to the license."
msgstr ""
"可能であれば、ライセンスは対応する [SPDX 識別子][spdx] "
"と共に指定されるべきです。`https://spdx.org/licenses/[SPDX-ID]` (`SPDX-ID` "
"は、上記のリンク先の識別子のリストから選択) という形式の URL を指定して、ライ"
"センスのメタデータフィールドを構築します。以下の例を参照してください。SPDX識"
"別子のない非標準ライセンスの場合は、そのライセンスへのURLを指定します。"

#: ../../src/topics/best-practices.md:26 e8259b43fa6944eda73eae381db6b97b
msgid ""
"Useful reading: \"[A Quick Guide to Software Licensing for the Scientist-"
"Programmer][sci-license]\""
msgstr "参考文献：\"[科学者・プログラマーのためのソフトウェアライセンス クイックガイド][sci-license]\""

#: ../../src/topics/best-practices.md:28 5b976a5aec7d44bda55b0a019e955416
msgid "_Example of metadata field for license with SPDX identifier:_"
msgstr "_SPDX 識別子を持つライセンスのメタデータフィールドの例：_"

#: ../../src/topics/best-practices.md:37 924b8df24deb4c82b32732f491c9a246
msgid ""
"For more examples of providing metadata within CWL descriptions, see [the"
" Metadata and Authorship section of this User Guide](../topics/metadata-"
"and-authorship.md)."
msgstr ""
"CW定義にメタデータを与える例については、 "
"[このユーザーガイドのメタデータと著者名のセクション](../topics/metadata-and-"
"authorship.md)を参照してください。"

#: ../../src/topics/best-practices.md:40 9e64a9fc89cb45cfbff0e925cc91b1be
msgid ""
"Include [attribution information][license-example] for the author(s) of "
"the CWL tool or workflow description. Use unambiguous identifiers like "
"[ORCID][orcid]."
msgstr ""
"CWLツールやワークフローの定義の著者の[帰属情報][license-"
"example]を含みます。[ORCID][orcid]のような曖昧でない識別子を使用してください。"

#: ../../src/topics/best-practices.md:44 87030aef02044b8283c76debab4772bf
msgid ""
"In tool descriptions, list dependencies using short name(s) under "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement)."
msgstr ""
"ツール定義では、[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#SoftwareRequirement)."
"の下に、短い名前を使用して依存関係をリストアップします。"

#: ../../src/topics/best-practices.md:47 6c9eaae099fa4ca4b0986b1c4146df50
msgid ""
"Include [SciCrunch][scicrunch] identifiers for dependencies in "
"`https://identifiers.org/rrid/RRID:SCR_NNNNNN` format."
msgstr ""
"`https://identifiers.org/rrid/RRID:SCR_NNNNNN` 形式で依存関係のための "
"[SciCrunch][scicrunch] 識別子を書きます。"

#: ../../src/topics/best-practices.md:50 5ae8950fd31541399c2fe59096581dbc
msgid ""
"All `input` and `output` identifiers should reflect their conceptual "
"identity. Use informative names like `unaligned_sequences`, "
"`reference_genome`, `phylogeny`, or `aligned_sequences` instead of  "
"`foo_input`, `foo_file`, `result`, `input`, `output`, and so forth."
msgstr ""
"`input` および`output` "
"の識別子はすべて、その概念的同一性を反映する必要があります。`foo_input`,`foo_file`,`result`,`input`,`output`,"
" などの代わりに`unaligned_sequences`,`reference_genome`,`phylogeny`, "
"または`aligned_sequences` などの情報量の多い名称を使ってください。"

#: ../../src/topics/best-practices.md:55 b0493895105e43849bff2026763e472a
msgid ""
"In tool descriptions, include a list of version(s) of the tool that are "
"known to work with this description under "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement)."
msgstr ""
"ツール定義では、[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#SoftwareRequirement)の下に、このツール定義で動作することが確認されている"
"ツールのバージョンのリストを書きます。"

#: ../../src/topics/best-practices.md:58 88806cb0462f4359801c1fa0ff0ebcc0
#, fuzzy
msgid ""
"`format` should be specified for all input and output `File`s. "
"Bioinformatics tools should use format identifiers from [EDAM][edam-"
"example]. See also `iana:text/plain`, `iana:text/tab-separated-values` "
"with `$namespaces: { iana: \"https://www.iana.org/assignments/media-"
"types/\" }`. [Full IANA media type list][iana-types] (also known as MIME "
"types). For non-bioinformatics tools, use or build an appropriate "
"ontology/controlled vocabulary in the same way. Please edit this page to "
"let us know about it."
msgstr ""
"`format` は、すべての入力および出力`File`に指定する必要があります。バイオイン"
"フォマティクスツールは、[EDAM][edam-"
"example]のフォーマット識別子を使用するのが良いです。`iana:text/plain`,`iana:"
"text/tab-separated-values`、`$namespaces：{ iana: \"https://www.iana.org/"
"assignments/media-types/\" }もご参照ください`.[IANA メディアタイプ一覧][iana-"
"types]（MIME タイプとしても知られています）。バイオインフォマティクス以外のツ"
"ールについては、同様に適切なオントロジー/統制語彙を使用または構築してください"
"。このページを編集して私たちに知らせてください。"

#: ../../src/topics/best-practices.md:66 b178c7296ed5491782a4180c76883c14
msgid ""
"Mark all input and output `File`s that are read from or written to in a "
"streaming compatible way (only once, no random-access), as `streamable: "
"true`."
msgstr ""
"`File`の入出力のうち、ストリーミング互換の方法（一度だけ利用されて、ランダム"
"アクセスなし、訳注標準入出力のイメージ）で読み書きされるものを、`streamable: "
"true` としてマークします。"

#: ../../src/topics/best-practices.md:69 886d15c1972243acadccff5760f842f1
msgid ""
"Each "
"[`CommandLineTool`](https://w3id.org/cwl/CommandLineTool.html#CommandLineTool)"
" description should focus on a single operation only, even if the "
"(sub)command is capable of more. Don't overcomplicate your tool "
"descriptions with options that you don't need or use."
msgstr ""
"各[`CommandLineTool`](https://w3id.org/cwl/CommandLineTool."
"html#CommandLineTool) の定義は、たとえ（サブ）コマンドがそれ以上の機能を備え"
"ていたとしても、一つの使用方法のみに焦点を当てるべきです。必要ないまたは、使"
"用しないオプションでツールの定義を複雑にし過ぎないようにしましょう。"

#: ../../src/topics/best-practices.md:73 ef5a5f9b253c4ca3916802a695fb7c6d
msgid ""
"Custom types should be defined with one external YAML per type definition"
" for re-use."
msgstr "カスタム型は、型定義ごとに1つの外部YAMLで定義すると再利用しやすくなります。"

#: ../../src/topics/best-practices.md:76 ff59f40e84004523904e3094be07cc80
msgid "Include a top-level short `label` summarising the tool/workflow."
msgstr "ツール/ワークフローを要約したトップレベルの短い`label` を含めます。"

#: ../../src/topics/best-practices.md:78 78d73fde24e24beeab541a623d9530b6
msgid ""
"If useful, include a top-level `doc` as well. This should provide a "
"longer, more detailed description than was provided in the top-level "
"`label` (see above)."
msgstr ""
"有用であれば、トップレベル`doc` も含めてください。これは、トップレベル`label` "
"（上記参照）で提供されたものより長く詳細な説明を記述します。"

#: ../../src/topics/best-practices.md:82 d92013d662b44dbf8875e06c9dfbfd79
msgid ""
"Use `type: enum` instead of `type: string` for elements with a fixed list"
" of valid values."
msgstr "有効な値のリストが決まっている要素には、`type: string` の代わりに、`type: enum` を使用してください。"

#: ../../src/topics/best-practices.md:85 c100d5192a52497fb6a890b81a388fcf
#, fuzzy
msgid ""
"Evaluate all use of JavaScript for possible elimination or replacement. "
"One common example: manipulating `File` names and paths? Consider whether"
" one of the [built in `File` properties][file-prop] like `basename`, "
"`nameroot`, `nameext`, etc., could be used instead."
msgstr ""
"JavaScriptのすべての使用について、削除または置換の可能性を評価します。よくある例：`File` "
"の名前とパスを操作する方法は？`basename`,`nameroot`,`nameext`, などの [built in`File` "
"properties][file-prop] のいずれかを代わりに使用できないか考えてみてください。"

#: ../../src/topics/best-practices.md:90 e22fbacdb2fb4202b1bd69cfc24af5cd
msgid ""
"Give the tool description to a colleague (preferably at a different "
"institution) to test and provide feedback."
msgstr "ツール定義を同僚（できれば別の機関の人）に渡し、テストしてもらい、フィードバックをもらいましょう。"

#: ../../src/topics/best-practices.md:93 0060a863362140f6bb3932cb5da1df04
msgid ""
"Complex workflows with individual components which can be abstracted "
"should utilise the [`SubworkflowFeatureRequirement`][subworkflow] to make"
" their workflow modular and allow sections of them to be easily reused."
msgstr "抽象化できる個々のコンポーネントを持つ複雑なワークフローは、ワークフローをモジュール化し、その一部を容易に再利用できるようにするために、[`SubworkflowFeatureRequirement`][subworkflow]を利用します。"

#: ../../src/topics/best-practices.md:97 93f6d6b544c24ce780184272f66bacab
#, fuzzy
msgid ""
"Software containers should be made to be conformant to the "
"[\"Recommendations for the packaging and containerizing of bioinformatics"
" software\"][containers] (also useful to other disciplines)."
msgstr ""
"ソフトウェアのコンテナは、[\"Recommendations for packaging and containerizing of "
"bioinformatics software\"][containers] に準拠するようにします（他の分野でも有用です）。"

#: ../../src/topics/command-line-tool.md:1 a378a2f7d268401abfbbbe6e5090a952
msgid "Command Line Tool"
msgstr "コマンドラインツール"

#: ../../src/topics/command-line-tool.md:3 cf0f1c00c0b34c94a8e2460a700c303e
msgid ""
"A command-line tool is a type of Process object that can be run by itself"
" or as a Workflow step. It is a wrapper for a command like `ls`, `echo`, "
"`tar`, etc. The command-line tool is defined in the `baseCommand` "
"attribute of the command-line tool CWL document."
msgstr ""
"CommandLineToolは、Processオブジェクトの一種であり、それ自体またはワークフロ"
"ーのステップとして実行することができます。`ls`,`echo`,`tar` などの実行したい"
"コマンドのラッパーです。実行したいコマンドは、CommandLineToolについてのCWL定"
"義の`baseCommand` 属性で定義されています。"

#: ../../src/topics/command-line-tool.md:8 7a180ba1f2d746a78b79be7e899cbad6
msgid ""
"A CWL command-line tool must also have `inputs` and `outputs`. The "
"following example contains a minimal example of a CWL command-line tool "
"for the `echo` Linux command, using inputs and outputs."
msgstr ""
"CWLコマンドラインツールは、`inputs` と`outputs` も持っていなければなりません。次の例は、Linuxコマンド `echo` "
"のためのCWLコマンドラインツールの最小限の例で、inputsとoutputsを使用します。"

#: ../../src/topics/command-line-tool.md:19 128bd8cd6788431da54fa07a8dc87f99
msgid "CWL command-line tool."
msgstr "CWLコマンドラインツール。"

#: ../../src/topics/command-line-tool.md:50 d742e9e59ea44ca1a1df2de85059343f
msgid "`echo.cwl`"
msgstr "`echo.cwl`"

#: ../../src/topics/command-line-tool.md:57 e3a06ebe51b64b0183673a8acc04969f
msgid ""
"The example above uses a simplified form to define inputs and outputs. "
"You will learn more about in the [Inputs](../topics/inputs.md) and in the"
" [Outputs](../topics/outputs.md) sections."
msgstr ""
"上記の例では、簡略化した形で入力と出力を定義しています。[Inputs](../topics/"
"inputs.md)と[Outputs](../topics/outputs."
"md)のセクションで、より詳しく説明する予定です。"

#: ../../src/topics/command-line-tool.md:68 2bab464d19d14562a6501373aff13905
msgid "Network Access"
msgstr "ネットワークアクセス"

#: ../../src/topics/command-line-tool.md:69 201712f3ceee4d4ea56ab96d3fef97b0
msgid ""
"This indicates whether a process requires outgoing IPv4/IPv6 network "
"access.  Starting with CWL v1.1, programs are not granted network access "
"by default, so you must include the requirement for network access in the"
" specification of your tool."
msgstr ""
"これは、プロセスが送信先としてIPv4/"
"IPv6ネットワーク・アクセスを必要とするかどうかを示します。 CWL v1.1以降、プロ"
"グラムにはデフォルトでネットワーク・アクセス権が付与されないため、ツール定義"
"にネットワーク・アクセスの要件を含める必要があります。"

#: ../../src/topics/command-line-tool.md:84 3282a357799f4a72a6b8bace206144c4
#, fuzzy
msgid ""
"CWL v1.0 command-line tools that are upgraded to v1.1 or v1.2 or v1.2 "
"will have `networkAccess: true` set automatically."
msgstr ""
"CWL v1.0のコマンドラインツールをv1.1またはv1."
"2にアップグレードすると、自動的に`networkAccess: "
"true`が追加されネットワークアクセスを取得します。"

#: ../../src/topics/creating-files-at-runtime.md:1
#: 17c5b4ee43cc4a979676ad27e473d046
msgid "Creating Files at Runtime"
msgstr "実行時にファイルを作成する"

#: ../../src/topics/creating-files-at-runtime.md:3
#: cd0dff10471c4ad2b84e3a0e4d7767ea
#, fuzzy
msgid ""
"Sometimes you need to create a file on the fly from input parameters, "
"such as tools that expect to read their input configuration from a file "
"rather than the command line parameters, or need a small wrapper shell "
"script."
msgstr "コマンドラインパラメーターではなく、ファイルから入力設定を読み込むことを期待するツールや、小さなラッパーシェルスクリプトが必要な場合など、入力パラメーターからその場でファイルを作成する必要があることがあります。"

#: ../../src/topics/creating-files-at-runtime.md:7
#: bf4aea0a22334a1ca75cc20e937e6581
#, fuzzy
msgid ""
"To generate such files, we can use the "
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/CommandLineTool.html#InitialWorkDirRequirement)."
msgstr "[`InitialWorkDirRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)から"

#: ../../src/topics/creating-files-at-runtime.md:9
#: 008f768d56b8465bb4e8f4fde15853a7
msgid "`createfile.cwl`"
msgstr "`createfile.cwl`"

#: ../../src/topics/creating-files-at-runtime.md:15
#: 252f8e897b0942a8be098481890005f3
msgid ""
"Any [expressions](../topics/expressions.md) like `$(inputs.message)` are "
"expanded by the CWL engine before creating the file. Here, insert the "
"value at the input `message`."
msgstr ""
"`$(inputs.message)` のような [Expressions](../topics/expressions.md)は、ファ"
"イルを作成する前にCWL実行エンジンによって展開されます。ここでは、入力パラメー"
"タ`message` に値を挿入します。"

#: ../../src/topics/creating-files-at-runtime.md:20
#: aca24b72687c4d4d84bf9de8b71413f7
#, fuzzy
msgid ""
"The _CWL expressions_ are independent of any _shell variables_ used later"
" during command line tool invocation. That means that any genuine need "
"for the character `$` must be **escaped** with `\\`. For instance, "
"`\\${PREFIX}` above is expanded to `${PREFIX}` in the generated file to "
"be evaluated by the shell script instead of the CWL engine."
msgstr ""
"_CWL expressions_ は、コマンドラインツール起動時に使用される_shell variables_ とは無関係です。つまり、`$` "
"という文字が本当に必要な場合は、** ` \\` で** をエスケープする必要があります。例えば，上記の`\\${PREFIX}` "
"は，CWLエンジンの代わりにシェルスクリプトで評価されるように，生成されたファイルでは`${PREFIX}` に展開されます．"

#: ../../src/topics/creating-files-at-runtime.md:27
#: 750b3232e8754448bc2b5913539495b8
msgid ""
"To test the above CWL tool, use this job to provide the input value "
"`message`:"
msgstr "上記のCWLツールをテストするために、このジョブを使用して、入力値`message` を与えます："

#: ../../src/topics/creating-files-at-runtime.md:29
#: ../../src/topics/environment-variables.md:13 ../../src/topics/outputs.md:81
#: 687c8a84bade43269f3cd767d32f9f47 81da7a18fe8d4659abc883cf43009f1f
#: d5d67eae63304ebb9b242133feacb0d1
msgid "`echo-job.yml`"
msgstr "`echo-job.yml`"

#: ../../src/topics/creating-files-at-runtime.md:35
#: c4f964450d014734877fb3c968353a74
msgid ""
"Before we run this, let us look at each step in a little more detail. The"
" base command `baseCommand: [\"sh\", \"example.sh\"]` will execute the "
"command `sh example.sh`. This will run the file we create in the shell."
msgstr ""
"これを実行する前に、各ステップをもう少し詳しく見てみましょう。ベースコマンド`baseCommand: [\"sh\", "
"\"example.sh\"]` は、`sh example.sh` というコマンドを実行します。これで、作成したファイルがシェルで実行されます。"

#: ../../src/topics/creating-files-at-runtime.md:40
#: 9aeea5a6a4244bc7a1626e0cb7351068
#, fuzzy
msgid ""
"`InitialWorkDirRequirement` requires a `listing`. As the `listing` is a "
"YAML array, we need a `-` on the first line of each element of the array,"
" in this case we have just one element. `entryname:` can have any value, "
"but it must match what was specified in the `baseCommand`. The final part"
" is `entry:`, this is followed by `|-` which is YAML quoting syntax, and "
"means that you are using a multiline string (without it, we would need to"
" write the whole script on one line)."
msgstr ""
"`InitialWorkDirRequirement` は`listing` を必要とします。`listing` は YAML "
"配列なので、配列の各要素の最初の行に`-` が必要です。この場合、要素は 1 "
"つだけです。`entryname:` は任意の値を指定できますが、`baseCommand` "
"で指定したものと一致していなければなりません。最後の部分は`entry:` "
"で、この後に`|-` が続きます。これは YAML の引用構文で、"
"複数行の文字列を使用していることを意味します (これがなければ、"
"スクリプト全体を 1 行で記述する必要があります)."

#: ../../src/topics/creating-files-at-runtime.md:51
#: 867239e9ad3d4187a2703662a0ca3976
msgid ""
"See the [YAML Guide](../topics/yaml-guide.md#maps) for more about the "
"formatting."
msgstr "フォーマットについては、[YAMLガイド](../topics/yaml-guide.md#maps)を参照してください。"

#: ../../src/topics/creating-files-at-runtime.md:54
#: ../../src/topics/environment-variables.md:18
#: ../../src/topics/file-formats.md:52
#: ../../src/topics/staging-input-files.md:20 ../../src/topics/workflows.md:198
#: 0d7151b9f0194197bd686fe6c9c47afd 78bb40eeeda24d7b923162daa45d51a7
#: 7b341a317347482ca86fc56119c3686f 7c637fa62cab4d0dbe670a3b72737cc9
#: cfb4605a01dd4475aabcc086a4e65957
msgid ""
"Now invoke `cwltool` with the tool description and the input object on "
"the command line:"
msgstr "ここで、コマンドラインにツール定義と入力オブジェクトを指定して、`cwltool` を起動します："

#: ../../src/topics/custom-types.md:1 252a3a17b1ec4d5a9a82ebbf6c2f314c
msgid "Custom Types"
msgstr "カスタムタイプ"

#: ../../src/topics/custom-types.md:3 e0275ddda8f84207a58d10c17ca99a45
msgid ""
"Sometimes you may want to write your own custom types for use and reuse "
"in CWL descriptions. Use of such custom types can reduce redundancy "
"between multiple descriptions that all use the same type, and also allow "
"for additional customisation/configuration of a tool/analysis without the"
" need to fiddle with the CWL description directly."
msgstr ""
"CWL定義で使用・再利用するために、独自のカスタム型を書きたい場合があります。こ"
"のようなカスタムタイプを使用することで、同じタイプを使用する複数の記述の間の"
"冗長性を減らし、また、CWL定義を直接いじらずに、ツールや分析のカスタマイズや設"
"定を追加できるようになります。"

#: ../../src/topics/custom-types.md:9 8367e38e5e7c4a298d1d87b9001aaddc
msgid ""
"The example below is a CWL description of the [biom convert format][biom]"
" tool for converting a standard biom table file to hdf5 format."
msgstr "以下の例は、標準的なbiomテーブルファイルをhdf5形式に変換する[biom convert format][biom] ツールのCWL定義です。"

#: ../../src/topics/custom-types.md:12 18b802f45ce0454ab7aa2a21812863c6
msgid "`custom-types.cwl`"
msgstr "`custom-types.cwl`"

#: ../../src/topics/custom-types.md:18 66d1953f5dd54d448bddd0f30c330402
msgid "`custom-types.yml`"
msgstr "`custom-types.yml`"

#: ../../src/topics/custom-types.md:24 56b8912a1ea84f28adeb8beaf92ab563
msgid ""
"___Note:___ To follow the example below, you need to [download the "
"example input file](https://github.com/common-workflow-"
"language/user_guide/blob/main/src/_includes/cwl/custom-"
"types/rich_sparse_otu_table.biom), *rich_sparse_otu_table.biom* e.g. via "
"`wget`:"
msgstr ""
"___注意:___ 以下の例に行うには、`wget`などで*rich_sparse_otu_table."
"biom*という[入力ファイルをダウンロード](https://github.com/"
"common-workflow-language/user_guide/blob/main/src/_includes/cwl/custom-types/"
"rich_sparse_otu_table.biom)する必要があります："

#: ../../src/topics/custom-types.md:30 a48539920c4944898918bc90b2d4e3c9
msgid ""
"On line 29, in `inputs:table_type`, a list of allowable table options to "
"be used in the table conversion are imported as a custom object:"
msgstr ""
"29行目の`inputs:table_type` "
"で、テーブル変換で使用できるテーブルオプションのリストがカスタムオブジェクトとしてインポートされます："

#: ../../src/topics/custom-types.md:46 c791096f537141e8bd7cc941d711d108
#, fuzzy
msgid ""
"The reference to a custom type is a combination of the name of the file "
"in which the object is defined (`biom-convert-table.yaml`) and the name "
"of the object within that file (`table_type`) that defines the custom "
"type. In this case the `symbols` array from the imported `biom-convert-"
"table.yaml` file define the allowable table options. For example, in "
"`custom-types.yml`, we pass `OTU table` as an `input` that tells the tool"
" to create an OTU table in hdf5 format."
msgstr ""
"カスタムタイプの参照は、そのオブジェクトが定義されているファイル名（`biom-"
"convert-table.yaml` "
"）と、カスタムタイプを定義するそのファイル内のオブジェクト名（`table_type` "
"）を組み合わせたものです。この場合、インポートされた`biom-convert-table.yaml`"
" ファイルからの`symbols` "
"配列が、許容されるテーブルオプションを定義します。例えば、`custom-types.yml` "
"では、`OTU table` を`input` として渡し、hdf5 形式の OTU table "
"を作成するようツールに指示しています。"

#: ../../src/topics/custom-types.md:53 5f6bc6ed72334a74b9a4c46c29ddda46
msgid "The contents of the YAML file describing the custom type are given below:"
msgstr "カスタムタイプを記述するYAMLファイルの内容を以下に示します："

#: ../../src/topics/custom-types.md:55 3b55419088e8446994703220bd8e8480
msgid "`biom-convert-table.yaml`"
msgstr "`biom-convert-table.yaml`"

#: ../../src/topics/custom-types.md:61 fe6f4ce5e7344af0abea9d5c03e32ecd
msgid ""
"In order for the custom type to be used in the CWL description, it must "
"be imported. Imports are described in "
"`requirements:SchemaDefRequirement`, as below in the example `custom-"
"types.cwl` description:"
msgstr ""
"カスタム型をCWL定義で使用するためには、インポートする必要があります。インポートについては、`requirements:SchemaDefRequirement`"
" で定義されており、例として`custom-types.cwl` の定義にあるように、インポートされます："

#: ../../src/topics/custom-types.md:76 dce43b138ba24b22bfa9fa5692a17009
msgid ""
"Note also that the author of this CWL description has also included "
"[`ResourceRequirement`](https://w3id.org/cwl/CommandLineTool.html#ResourceRequirement)s,"
" specifying the minimum amount of RAM and number of cores required for "
"the tool to run successfully, as well as details of the version of the "
"software that the description was written for and other useful metadata. "
"These features are discussed further in other chapters of this user "
"guide."
msgstr ""
"また、この CWL 定義には、[`ResourceRequirement`](https://w3id.org/cwl/"
"CommandLineTool."
"html#ResourceRequirement)も含まれていることに注意してください。これは、"
"ツールが正常に動作するために必要な最小限の RAM の量とコアの数、さらにその定義"
"に書かれたソフトウェアのバージョンの詳細やその他の有用なメタデータを指定する"
"ものです。これらの機能については、このユーザーガイドの他の章で詳しく説明しま"
"す。"

#: ../../src/topics/environment-variables.md:1 19737f89f2994815969fa4a88346f49a
msgid "Environment Variables"
msgstr "環境変数"

#: ../../src/topics/environment-variables.md:3 ad965f75aa0c41cda8b82c46af49774d
msgid ""
"Tools run in a restricted environment and do not inherit most environment"
" variables from the parent process.  You can set environment variables "
"for the tool using `EnvVarRequirement`."
msgstr ""
"ツールは制限された環境で実行されるため、親プロセスからほとんどの環境変数を引き継ぎません。  "
"ツールの環境変数は、`EnvVarRequirement` を使って設定できます。"

#: ../../src/topics/environment-variables.md:7 38b276f9b0114a0bb87734f0a07a736f
msgid "`env.cwl`"
msgstr "`env.cwl`"

#: ../../src/topics/expression-tool.md:1 9f33532119dc47ffb6ade20fb1d950bd
msgid "Expression Tool"
msgstr "Expression Tool"

#: ../../src/topics/expression-tool.md:3 b267056eae704737af5aaada3ea7e6e2
msgid ""
"An expression tool is a type of Process that can be run by itself or as a"
" Workflow step. It executes a pure JavaScript expression. It is meant to "
"be used as a way to isolate complex JavaScript expressions that need to "
"operate on input data and produce some result as output."
msgstr ""
"ExpressionToolは、それ自体またはワークフローのステップとして実行することがで"
"きるProcessの一種です。純粋な JavaScript 式を実行します。入力データを操作し、"
"出力として結果を生成する必要がある複雑な JavaScript "
"式を分離する方法として使用されることを意図しています。"

#: ../../src/topics/expression-tool.md:8 7e930144163e4d6e9f0bcaa764497ccf
msgid ""
"Similar to the command-line tool it requires `inputs` and `outputs`. But "
"instead of `baseCommand`, it requires an "
"[`expression`](https://w3id.org/cwl/CommandLineTool.html#Expressions_(Optional))"
" attribute."
msgstr ""
"CommandLinetToolと同様に、`inputs` と`outputs` "
"が必要です。しかし、`baseCommand` の代わりに、[`expression`](https://w3id."
"org/cwl/CommandLineTool.html#Expressions_(Optional)) 属性を必要とします。"

#: ../../src/topics/expression-tool.md:17 f172488c19a94d688036197117d30b38
msgid "CWL expression tool."
msgstr "CWL expression tool."

#: ../../src/topics/expression-tool.md:48 ef978c951f1a4b7d9280d31367e5bae7
msgid "`uppercase.cwl`"
msgstr "`uppercase.cwl`"

#: ../../src/topics/expression-tool.md:67 0b63da31bc274b3cad798b07149592ab
msgid ""
"We had to use an "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement)"
" as our expression contains a JavaScript call in `.toUpperCase()`. This "
"means to tools using the expression tool that JavaScript is a "
"requirement."
msgstr ""
"この式には`.toUpperCase()` で JavaScript の呼び出しが含まれているため、 "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#InlineJavascriptRequirement) を使用する必要があります。これは、Expressio"
"nToolを使用するツールにとって、JavaScriptが必要であることを意味します。"

#: ../../src/topics/expressions.md:1 b0e567a985f748538552bdb486a47998
msgid "Expressions"
msgstr "Expressions"

#: ../../src/topics/expressions.md:3 24d05cbbab8e460e99f2edc97ab0dcec
msgid ""
"If you need to manipulate input parameters, include the requirement "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement)"
" and then anywhere a parameter reference is legal you can provide a "
"fragment of Javascript that will be evaluated by the CWL runner."
msgstr ""
"入力パラメータを操作する必要がある場合は、[`InlineJavascriptRequirement`](htt"
"ps://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement) "
"を含めると、パラメータ参照が合法な場所であれば、CWL "
"runnerによって評価されるJavascriptを使用できます。"

#: ../../src/topics/expressions.md:9 3d48d1a8f7f74bc1886e41653cb53a22
#, fuzzy
msgid ""
"JavaScript expressions should only be used when absolutely necessary. "
"When manipulating file names, extensions, paths etc, consider whether one"
" of the [built in `File` properties][file-prop] like `basename`, "
"`nameroot`, `nameext`, etc, could be used instead. See the [list of best "
"practices](best-practices.md)."
msgstr ""
"JavaScript "
"の式は、絶対に必要な場合のみ使用するようにしてください。ファイル名、拡張子、パスなどを操作する場合は、`basename`,`nameroot`,`nameext`,"
" などの [`File` のビルトインプロパティ][file-prop] "
"のいずれかを代わりに使用できるかどうかを検討してください。[ベストプラクティスのリスト](best-practices.md)を参照してください。"

#: ../../src/topics/expressions.md:16 7d444aacd418466bbe588fa964b45179
msgid "`expression.cwl`"
msgstr "`expression.cwl`"

#: ../../src/topics/expressions.md:22 72a0558a83964796a8c1a0eb55fd78e8
msgid ""
"As this tool does not require any `inputs` we can run it with an (almost)"
" empty job file:"
msgstr "このツールは`inputs` "
"を必要としないので、（ほとんど）空のジョブファイルで実行することができます："

#: ../../src/topics/expressions.md:25 d679fd1363b24c81979c68e7342159cf
msgid "`empty.yml`"
msgstr "`empty.yml`"

#: ../../src/topics/expressions.md:31 d2ee4fcece744b6681f29322b5305111
msgid ""
"`empty.yml` contains a description of an empty JSON object. JSON objects "
"descriptions are contained inside curly brackets `{}`, so an empty object"
" is represented simply by a set of empty brackets."
msgstr ""
"`empty.yml` には、空のJSONオブジェクトの記述があります。JSONオブジェクトの記述は、中括弧`{}` "
"の中に含まれるので、空のオブジェクトは、単に空の括弧のセットで表されます。"

#: ../../src/topics/expressions.md:35 624e4a270e374b1699b780df508b9184
msgid "We can then run `expression.cwl`:"
msgstr "次に、`expression.cwl` を実行することができます："

#: ../../src/topics/expressions.md:37 c252eac9a35e46aab08bd07bc1cdb57d
msgid "Running `expression.cwl`"
msgstr "`expression.cwl` を実行する"

#: ../../src/topics/expressions.md:47 f6f64d57a50742b19b801c14806ee18a
msgid ""
"Note that requirements can be provided with the map syntax, as in the "
"example above:"
msgstr "なお、上の例のように、map構文で requirements を指定することも可能です："

#: ../../src/topics/expressions.md:54 052e24e2ad044cc28f04d7f39be871d6
msgid ""
"Or as an array, with each entry (in this case, only `class: "
"InlineJavascriptRequirement`) marked by a `-`. The same syntax is used to"
" describe the additional command line arguments."
msgstr ""
"または配列として、各エントリ（この場合、`class: InlineJavascriptRequirement` "
"だけです）に`-` "
"を付けます。同じ構文で、追加のコマンドライン引数を定義します。"

#: ../../src/topics/expressions.md:62 84b31c076d4b4826aae35e8c23fe6a25
msgid "Where are JavaScript expressions allowed?"
msgstr "JavaScriptはどこで使えますか？"

#: ../../src/topics/expressions.md:64 8c3b402c40f64880a4bd42c47b910254
#, fuzzy
msgid ""
"Just like [parameter references](parameter-references.md), you can use "
"JavaScript Expressions only in certain fields.  These are:"
msgstr ""
"[パラメータ参照](parameter-references.md)と同様に、JavaScript 式は特定のフィールドにのみ使用できます。  "
"以下はその例です："

#: ../../src/topics/expressions.md:66 9bf5ca0e769147c6a9705bc40bd1febc
msgid ""
"From "
"[`CommandLineTool`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"
msgstr ""
"[`CommandLineTool`](https://www.commonwl.org/v1.0/CommandLineTool."
"html#CommandLineTool)から"

#: ../../src/topics/expressions.md:67
#: ../../src/topics/parameter-references.md:64 7ab0dbd54c1441539673fa12ef96b89e
#: e76c6ece0c594fefa86b190879c5acaa
msgid "`arguments`"
msgstr "`arguments`"

#: ../../src/topics/expressions.md:68 ../../src/topics/expressions.md:76
#: ../../src/topics/expressions.md:89
#: ../../src/topics/parameter-references.md:65
#: ../../src/topics/parameter-references.md:73
#: ../../src/topics/parameter-references.md:86 0209558b1013471eb708698537edaf06
#: 4458393fdb0e451f9806e91122ea2534 594a163e08f04aa5a04a44a303a1c643
#: a6fddc160afc4ef09717f69de72c11ce a9ec99ddcb344bcbbe5c1f59af0bcff2
#: af2cdb5f66ac4fd5b8f91258f005cc62
msgid "`valueFrom`"
msgstr "`valueFrom`"

#: ../../src/topics/expressions.md:69
#: ../../src/topics/parameter-references.md:66 afb175f182354cb19e23b1cad241437e
#: f9a6718845e24f46b76fcc8ab26eec7a
msgid "`stdin`"
msgstr "`stdin`"

#: ../../src/topics/expressions.md:70
#: ../../src/topics/parameter-references.md:67 3bce21dcc2da439daca80c4fcdf4c343
#: 7f5ce097ca0442a6a200599342a6e24b
msgid "`stdout`"
msgstr "`stdout`"

#: ../../src/topics/expressions.md:71
#: ../../src/topics/parameter-references.md:68 3397e8816f6a4d4b9af728c175f04917
#: 7b14686e16eb4f488659b22d67ec3bfa
msgid "`stderr`"
msgstr "`stderr`"

#: ../../src/topics/expressions.md:72 7a2d74aa018f4cab8c68e8775d83dd01
msgid ""
"From "
"[CommandInputParameter](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"
msgstr ""
"[CommandInputParameter](https://www.commonwl.org/v1.0/CommandLineTool."
"html#CommandInputParameter)から"

#: ../../src/topics/expressions.md:73 ../../src/topics/expressions.md:78
#: ../../src/topics/expressions.md:85 ../../src/topics/expressions.md:93
#: ../../src/topics/parameter-references.md:70
#: ../../src/topics/parameter-references.md:75
#: ../../src/topics/parameter-references.md:82
#: ../../src/topics/parameter-references.md:90 24f27702d0684bc98e3232103510232e
#: 26a8dff7b80c4e059f1e20eef9da6203 476aa37af5214bcf963c7aab1f859273
#: 4b0a0cd934bd41b4b55c034b91392bc7 5182e2165e44429287b4d924c2f896a4
#: 7de500d3be6b4c3e8f274fd6a092109f 953d824a494947a3ab0ca2988717ee01
#: b301751f90af4700bbada5e5b166be35
msgid "`format`"
msgstr "`format`"

#: ../../src/topics/expressions.md:74 ../../src/topics/expressions.md:79
#: ../../src/topics/expressions.md:86 ../../src/topics/expressions.md:94
#: ../../src/topics/parameter-references.md:71
#: ../../src/topics/parameter-references.md:76
#: ../../src/topics/parameter-references.md:83
#: ../../src/topics/parameter-references.md:91 2c2b8db396b04ace8aa396c0a5a4858f
#: 33a9b77ce15b4910962a7f08bd2f47a3 57cba0191de3470bbe112ed2a0d3f252
#: 6efe998094b3469eae61cfff551b1eb1 776de1ecfafc41ada7e916addd7229fd
#: 8595d62eb0274b3a8a7f0adf058b51d3 988966a2d4844e73961b0358aff8f6e1
#: faa7d521fec240748407d03ffdb93aa0
msgid "`secondaryFiles`"
msgstr "`secondaryFiles`"

#: ../../src/topics/expressions.md:75 d737a9e9bf1c45d695bf584bc3241d9a
msgid ""
"From "
"[`inputBinding`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"
msgstr "[`inputBinding`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)から"

#: ../../src/topics/expressions.md:77 0e2052e16f6a41b8983dc64b4b3a7586
msgid ""
"From "
"[CommandOutputParamater](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)"
msgstr "[CommandOutputParamater](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)から"

#: ../../src/topics/expressions.md:80 dff31dd961d540e3b8cd1247e978d60e
msgid ""
"From "
"[CommandOutputBinding](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)"
msgstr "[CommandOutputBinding](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)から"

#: ../../src/topics/expressions.md:81
#: ../../src/topics/parameter-references.md:78 249aba7c38ce49379b9d35e7ad81a0bf
#: 5a354eb4883948e0a2b5c96b5ae12da7
msgid "`glob`"
msgstr "`glob`"

#: ../../src/topics/expressions.md:82
#: ../../src/topics/parameter-references.md:79 2325a310f2bc4d09b53b32c54efae2df
#: 9e477e2cfab24861b517fe2fb52962f4
msgid "`outputEval`"
msgstr "`outputEval`"

#: ../../src/topics/expressions.md:83
#: ../../src/topics/parameter-references.md:80 9448462d104b4be5904623c85a9e16b7
#: bf11a7a72147445c9b8e44b541e09f36
msgid "From [`Workflow`](https://w3id.org/cwl/Workflow.html)"
msgstr "[`Workflow`](https://w3id.org/cwl/Workflow.html)から"

#: ../../src/topics/expressions.md:84 0d54a777a33d4f17a2f3390384a3c0c5
msgid ""
"From "
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[WorkflowOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#WorkflowOutputParameter)"
msgstr ""
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter) "
"と [WorkflowOutputParameter](https://www.commonwl.org/v1.0/Workflow."
"html#WorkflowOutputParameter)から"

#: ../../src/topics/expressions.md:87
#: ../../src/topics/parameter-references.md:84 7918d0661be746faaddf25ad49172f30
#: b8439dbaa949427097e25ccb48fe15ee
msgid "From `steps`"
msgstr "`steps`から"

#: ../../src/topics/expressions.md:88 7b37eb600c9b4847a58a7e5077bef4c3
msgid ""
"From "
"[WorkflowStepInput](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
msgstr ""
"[WorkflowStepInput](https://www.commonwl.org/v1.0/Workflow."
"html#WorkflowStepInput)から"

#: ../../src/topics/expressions.md:90
#: ../../src/topics/parameter-references.md:87 368ef005c2ca4b8599f76242f7178375
#: ab1ba7626eae483a8b614ee4cd5bab6f
msgid ""
"From "
"[ExpressionTool](https://www.commonwl.org/v1.0/Workflow.html#ExpressionTool)"
msgstr ""
"[ExpressionTool](https://www.commonwl.org/v1.0/Workflow."
"html#ExpressionTool)から"

#: ../../src/topics/expressions.md:91
#: ../../src/topics/parameter-references.md:88 595b9ddcee734d6595c1b4b2d169dcb8
#: 80b55c77a4384644acfc9472c3cedee0
msgid "`expression`"
msgstr "`expression`"

#: ../../src/topics/expressions.md:92 fd504478a6c641e0a72321fa80ad1c9c
msgid ""
"From "
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[ExpressionToolOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)"
msgstr ""
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" と "
"[ExpressionToolOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)から"

#: ../../src/topics/expressions.md:95 32b1a39cca1a4402af9bdc0abc4d70c8
msgid ""
"From "
"[`ResourceRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement)"
msgstr ""
"[`ResourceRequirement`](https://www.commonwl.org/v1.0/CommandLineTool."
"html#ResourceRequirement)から"

#: ../../src/topics/expressions.md:96
#: ../../src/topics/parameter-references.md:93 2518d499801e4bcf82e9e4666280504d
#: 98a511d138e9497c923963c2ca5f0a0b
msgid "`coresMin`"
msgstr "`coresMin`"

#: ../../src/topics/expressions.md:97
#: ../../src/topics/parameter-references.md:94 57a055b125f742dc8842b798b034161b
#: e84bc5505a6549ae9aacde8cb9225403
msgid "`coresMax`"
msgstr "`coresMax`"

#: ../../src/topics/expressions.md:98
#: ../../src/topics/parameter-references.md:95 98cd455e080f43749090270e7a61cb42
#: e698ea756fe94e99837312fb30c9f9bf
msgid "`ramMin`"
msgstr "`ramMin`"

#: ../../src/topics/expressions.md:99
#: ../../src/topics/parameter-references.md:96 8dfae10004a641fdb95c456c90a48d94
#: bef90c153d4f4397b1f69f9beb38f7e6
msgid "`ramMax`"
msgstr "`ramMax`"

#: ../../src/topics/expressions.md:100
#: ../../src/topics/parameter-references.md:97 47fddc711ce44086a7811bdfbd9167dd
#: e2bdf4fe676346cbb4443ee54fb7419b
msgid "`tmpdirMin`"
msgstr "`tmpdirMin`"

#: ../../src/topics/expressions.md:101
#: ../../src/topics/parameter-references.md:98 7d143ba98f1f4dfcbe08b70389d43092
#: 8f1665baca2e4e3b96026b50d132709a
msgid "`tmpdirMax`"
msgstr "`tmpdirMax`"

#: ../../src/topics/expressions.md:102
#: ../../src/topics/parameter-references.md:99 79bea45c2a484eda92c8578130b0b982
#: d169949866a24e31947dffcb94620c5f
msgid "`outdirMin`"
msgstr "`outdirMin`"

#: ../../src/topics/expressions.md:103
#: ../../src/topics/parameter-references.md:100
#: 8d2e01f2aa314f1cb1231f2e08f89ce5 d5417397b1e242ef9878ac77d2f65005
msgid "`outdirMax`"
msgstr "`outdirMax`"

#: ../../src/topics/expressions.md:104 08a66b2ab271494d810ff5834ca5c1bc
msgid ""
"From "
"[`InitialWorkDirRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"
msgstr "[`InitialWorkDirRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)から"

#: ../../src/topics/expressions.md:105
#: ../../src/topics/parameter-references.md:102
#: 21e9582891cf4b87a7ee4693663040fa 51bc6d1ccef14729a0d5e63b56d73d20
msgid "`listing`"
msgstr "`listing`"

#: ../../src/topics/expressions.md:106 7d8755f05d6541439f72ec9d6806d3fc
msgid "in [Dirent](https://www.commonwl.org/v1.0/CommandLineTool.html#Dirent)"
msgstr "[Dirent](https://www.commonwl.org/v1.0/CommandLineTool.html#Dirent)に"

#: ../../src/topics/expressions.md:107
#: ../../src/topics/parameter-references.md:104
#: 29c2424fc7dc43e68c9bfee179167bb3 30f25141bcce4670882e4a5bbe4fc3e2
msgid "`entry`"
msgstr "`entry`"

#: ../../src/topics/expressions.md:108
#: ../../src/topics/parameter-references.md:105
#: 02cfd4f1c3014e1eaa598a329dc5a95d d76fb015595e4194a7e15d714baaaf98
msgid "`entryname`"
msgstr "`entryname`"

#: ../../src/topics/expressions.md:109
#: ../../src/topics/parameter-references.md:106
#: 408f69a2df1343a78f93ff2ac0a994ea d37c78309e8b427f835af4fbd367e643
msgid "From `EnvVarRequirement`"
msgstr "`EnvVarRequirement`から"

#: ../../src/topics/expressions.md:110 53752bdff0974e39b2a86e8f2d96455f
msgid ""
"From "
"[EnvironmentDef](https://www.commonwl.org/v1.0/CommandLineTool.html#EnvironmentDef)"
msgstr ""
"[EnvironmentDef](https://www.commonwl.org/v1.0/CommandLineTool."
"html#EnvironmentDef)から"

#: ../../src/topics/expressions.md:111
#: ../../src/topics/parameter-references.md:108
#: 242a12ec757947db894195c9aefba818 7b26b9972f7141bf950b3bb024b0e369
msgid "`envValue`"
msgstr "`envValue`"

#: ../../src/topics/expressions.md:116 93d6c90b49d8424f9283c384062ce333
msgid "Using External Libraries and Inline JavaScript Code with `expressionLib`"
msgstr "`expressionLib` による外部ライブラリの利用とインラインJavaScriptコードの利用"

#: ../../src/topics/expressions.md:118 ea6cbaa5dae647538c0bd9a4d5cad3f9
msgid ""
"The requirement "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement)"
" supports an `expressionLib` attribute that allows users to load external"
" JavaScript files, or to provide inline JavaScript code."
msgstr ""
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#InlineJavascriptRequirement)は、`expressionLib` 属性をサポートし、"
"ユーザーが外部 JavaScript ファイルを読み込んだり、インライン JavaScript "
"コードを提供したりできるようにします。"

#: ../../src/topics/expressions.md:122 484dc17440524cfda4dc486a7c5d5f63
msgid ""
"Entries added to the `expressionLib` attribute are parsed with the "
"JavaScript engine of a CWL runner. This can be used to include external "
"files or to create JavaScript functions that can be called in other parts"
" of the CWL document."
msgstr ""
"`expressionLib` "
"属性に追加されたエントリーは、CWLランナーのJavaScriptエンジンで解析されます。これは、外部ファイルをインクルードしたり、CWL定義の他の部分で呼び出すことができるJavaScript関数を作成するために使用することができます。"

#: ../../src/topics/expressions.md:128 5b2336cae1ef4cae8ed187d3f33cff25
msgid ""
"The CWL standards (versions 1.0 through 1.2) "
"[states](https://www.commonwl.org/v1.0/CommandLineTool.html#Expressions)"
"  that the only version of JavaScript valid in CWL expressions is "
"[ECMAScript 5.1](https://262.ecma-international.org/5.1/). This means "
"that any code that you include or write in your CWL Document must be "
"compliant with ECMAScript 5.1."
msgstr ""
"CWL標準（バージョン1.0から1.2）は、CWL定義で有効なJavaScriptのバージョンは[ECMAScript "
"5.1](https://262.ecma-"
"international.org/5.1/)のみであると[明記しています](https://www.commonwl.org/v1.0/CommandLineTool.html#Expressions)。これは、CWLドキュメントに含める、または書くコードは、ECMAScript"
" 5.1に準拠していなければならないことを意味します。"

#: ../../src/topics/expressions.md:135 32eca3a47efc4685bf7be706e123adbe
msgid ""
"For example, we can use `InlineJavascriptRequirement` and write a "
"JavaScript function inline in `expressionLib`. That function can then be "
"used in other parts of the CWL document:"
msgstr ""
"例えば、`InlineJavascriptRequirement` を使って、`expressionLib` に JavaScript "
"関数をインラインで記述することができます。その関数は、CWL定義の他の部分で使用することができます："

#: ../../src/topics/expressions.md:139 6839a02fb82d45c29ae518f2b00cb9d5
msgid "`hello-world-expressionlib-inline.cwl`"
msgstr "`hello-world-expressionlib-inline.cwl`"

#: ../../src/topics/expressions.md:146 5b5e59fa1688499ea4560ee6f8023227
msgid ""
"Running this CWL workflow will invoke the JavaScript function and result "
"in the `echo` command printing the input message with capital initial "
"letters:"
msgstr "このCWLワークフローを実行すると、JavaScript関数が起動し、`echo` "
"コマンドが入力メッセージの頭文字を大文字にして表示します："

#: ../../src/topics/expressions.md:149 a1e57c6833c848d3974cf448493ab924
#, fuzzy
msgid "Running `hello-world-expressionlib-inline.cwl`."
msgstr "`hello-world-expressionlib-inline.cwl` 実行しています。"

#: ../../src/topics/expressions.md:155 1a4dfef06b5c4402bdb7e7dbd79eeb5d
msgid ""
"Let's move the `capitalizeWords` function to an external file, `custom-"
"functions.js`, and import it in our CWL document:"
msgstr "`capitalizeWords` 関数を外部ファイル`custom-functions.js` に移動し、CWL 定義でインポートしてみましょう："

#: ../../src/topics/expressions.md:158 71ac99c65d15451cbbf58d1e81934010
msgid "`custom-functions.js`"
msgstr "`custom-functions.js`"

#: ../../src/topics/expressions.md:164 60918e53189243d3872e61c7a4de20fc
msgid "`hello-world-expressionlib-external.cwl`"
msgstr "`hello-world-expressionlib-external.cwl`"

#: ../../src/topics/expressions.md:171 ad2a74bd983b47869dc78b2eb7b6fce1
msgid ""
"The `custom-functions.js` file is included in the CWL document with the "
"`$include: custom-functions.js` statement. That makes the functions and "
"variables available to be used in other parts of the CWL document."
msgstr ""
"`custom-functions.js` ファイルは、`$include: custom-functions.js` という記述"
"でCWL定義に含まれます。これにより、関数と変数がCWL定義の他の部分で使用できる"
"ようになります。"

#: ../../src/topics/expressions.md:175 82c02dd2446b4de9a4c4b87736107b30
msgid "Running `hello-world-expressionlib-external.cwl`."
msgstr "`hello-world-expressionlib-external.cwl`実行しています。"

#: ../../src/topics/expressions.md:181 6fa7ebeffc7b44c6a12cd84897d186a1
msgid ""
"Finally, note that you can have both inline and external JavaScript code "
"in your CWL document. In this final example we have added another entry "
"to the `expressionLib` attribute with the new function "
"`createHelloWorldMessage`, that calls the `capitalizeWords` function from"
" the external file `custom-functions.js`."
msgstr ""
"最後に、CWL定義にはインラインと外部JavaScriptコードの両方が存在できることに注意してください。この最後の例では、`expressionLib`"
" 属性に、新しい関数`createHelloWorldMessage` を追加しました。この関数は、外部ファイル`custom-"
"functions.js` から`capitalizeWords` 関数を呼び出しています。"

#: ../../src/topics/expressions.md:186 d34f3e688d2d49b6bfcda4c962895d8c
msgid "`hello-world-expressionlib.cwl`"
msgstr "`hello-world-expressionlib.cwl`"

#: ../../src/topics/expressions.md:193 9e2774fc35b14832a0f92b7afaafd537
msgid "Running `hello-world-expressionlib.cwl`."
msgstr "`hello-world-expressionlib.cwl`を実行する。"

#: ../../src/topics/expressions.md:200 8b797cfb232f4e5da51f6c21e9a8e7e3
msgid ""
"The `$include` statement can be used to include a file from the local "
"disk or from a remote location. It works with both relative and absolute "
"paths. Read the [text about "
"`$include`](https://www.commonwl.org/v1.0/SchemaSalad.html#Include) from "
"the CWL specification to learn more about it."
msgstr ""
"`$include` ステートメントを使用すると、ローカルディスクまたはリモートロケーシ"
"ョンからファイルをインクルードすることができます。相対パスと絶対パスの両方で"
"動作します。CWL仕様の[`$include`について](https://www.commonwl.org/v1.0/"
"SchemaSalad.html#Include)を読むと、より詳しく知ることができます。"

#: ../../src/topics/file-formats.md:1 ac906f26116c45d882e1afa42ae38e34
msgid "File Formats"
msgstr "ファイルフォーマット"

#: ../../src/topics/file-formats.md:3 d99dab4f2f264c68b839b59b80d570e0
msgid ""
"Tools and workflows can take "
"[`File`](https://w3id.org/cwl/CommandLineTool.html#File) types as input "
"and produce them as output. We also recommend indicating the format for "
"[`File`](https://w3id.org/cwl/CommandLineTool.html#File) types. This "
"helps document for others how to use your tool while allowing you to do "
"some simple type-checking when creating parameter files."
msgstr ""
"ToolsやWorkflowsは、[`File`](https://w3id.org/cwl/CommandLineTool.html#File) "
"型を入力として受け取り、出力として生成することができます。また、[`File`](http"
"s://w3id.org/cwl/CommandLineTool.html#File) タイプのフォーマットを示すことを"
"お勧めします。これにより、ツールの使用方法を他の人に示すことができ、また、パ"
"ラメータファイルを作成する際に簡単な型チェックを行うことができるようになりま"
"す。"

#: ../../src/topics/file-formats.md:8 23ba3dd26f5543119e2c152105b58e98
msgid ""
"For file formats, we recommend referencing existing ontologies (like EDAM"
" in our example), reference a local ontology for your institution, or do "
"not add a file format initially for quick development before sharing your"
" tool with others. You can browse existing [IANA file format "
"listings][IANA] and [EDAM file format listings][EDAM] on their websites."
msgstr ""
"ファイルフォーマットについては、既存のオントロジーを参照すること（例ではEDAM"
"）、所属機関のローカルオントロジーを参照すること、またはツールを他者と共有す"
"る前に迅速に開発するために最初はファイルフォーマットを追加しないことを推奨し"
"ています。既存の[IANAファイルフォーマット一覧][IANA]と[EDAMファイルフォーマッ"
"ト一覧][EDAM]は、それぞれのウェブサイトで参照することができます。"

#: ../../src/topics/file-formats.md:14 81c441846fc249c58607bacf97095eb8
msgid ""
"In the next tutorial, we explain  the `$namespaces` and `$schemas` "
"section of the document in greater detail, so don't worry about these for"
" now."
msgstr "次のチュートリアルで、`$namespaces` と`$schemas` の部分をより詳しく説明しますので、今は気にしないでください。"

#: ../../src/topics/file-formats.md:17 c04841dbf4be4cf8a22cceca8b08bd14
msgid ""
"Note that for added value `cwltool` can do some basic reasoning based on "
"file formats and warn you if there seem to be some obvious mismatches."
msgstr "なお、さらなる利点として`cwltool` は、ファイル形式に基づく基本的な推論を行い"
"、明らかな不一致があるようであれば警告を発します。"

#: ../../src/topics/file-formats.md:20 c5f6f6e4c23e4bf19dee69acb8ebed8e
msgid "`metadata_example.cwl`"
msgstr "`metadata_example.cwl`"

#: ../../src/topics/file-formats.md:26
#: ../../src/topics/metadata-and-authorship.md:22
#: 20e97d58596a4a959ad76ec6128ac414 4e070ae9110d437bbf008b0c60a00cd5
msgid "The equivalent of this CWL description in command line format is:"
msgstr "このCWL定義に相当するものをコマンドライン形式にすると:"

#: ../../src/topics/file-formats.md:32 632e441919094610b97afc17e9c5e625
msgid "Sample Parameter Files"
msgstr "サンプルパラメーターファイル"

#: ../../src/topics/file-formats.md:34 afd8633db1904897aa3e499354b1c376
#, fuzzy
msgid ""
"Below is an example of a parameter file for the example above. We "
"encourage checking in working examples of parameter files for your tool. "
"This allows others to quickly work with your tool, starting from a "
"\"known good\" parameterization."
msgstr "以下は、上記の例のパラメータファイルの例です。あなたのツールのパラメータファイルの実例をチェックすることをお勧めします。これにより、他の人が「既知の良い」パラメータ化から始めて、あなたのツールで素早く作業することができます。"

#: ../../src/topics/file-formats.md:39 bb69d6963c174191bf527335c3f665b7
msgid "`sample.yml`"
msgstr "`sample.yml`"

#: ../../src/topics/file-formats.md:45 ddb4f6f81c7d462b974e98c88dd3f558
#, fuzzy
msgid ""
"___Note:___ To follow the example below, you need to download the example"
" input file, *file-formats.bam*. The file is available from "
"<https://github.com/common-workflow-"
"language/user_guide/raw/main/src/_includes/cwl/file-formats/file-"
"formats.bam>  and can be downloaded e.g. via `wget`:"
msgstr ""
"___注：___ 以下の例に実行するには、例の入力ファイル、*file-formats.bam* "
"をダウンロードする必要があります。このファイルは<https://github.com/common-workflow-"
"language/user_guide/raw/main/src/_includes/cwl/file-formats/file-"
"formats.bam> から入手可能で、`wget` などでダウンロードすることができます："

#: ../../src/topics/index.md:1 2995cd4fb85c423dba021611dac4a137
msgid "Topics"
msgstr "トピックス"

#: ../../src/topics/inputs.md:1 3bac021fe7614d74ae701fb3c3765b93
msgid "Inputs"
msgstr "Inputs"

#: ../../src/topics/inputs.md:3 8bb3ee0cd0fc4d85ba007431fc541973
msgid "Essential Input Parameters"
msgstr "必須入力パラメータ"

#: ../../src/topics/inputs.md:5 17365707f58242369dd6aa73fc8d7242
#, fuzzy
msgid ""
"The `inputs` of a tool is a list of input parameters that control how to "
"run the tool.  Each parameter has an `id` for the name of parameter, and "
"`type` describing what types of values are valid for that parameter."
msgstr ""
"ツールの`inputs` は、ツールの実行に関わる入力パラメーターのリストです。  各パラメーターには、パラメーター名を示す`id` "
"と、そのパラメーターに有効な値の種類を示す`type` があります。"

#: ../../src/topics/inputs.md:9 521cb5dead5d4e9ab5ff037fb4b683cb
msgid ""
"Available primitive types are *string*, *boolean*, *int*, *long*, "
"*float*, *double*, and *null*; complex types are *array* and *record*; in"
" addition there are special types *File*, *Directory* and *Any*."
msgstr ""
"利用可能なプリミティブ型は*string*,*int*,*long*,*float*,*double*, *null*; "
"複合型は*array*と*record*; さらに特殊型*File*,*Directory* ,*Any* があります。"

#: ../../src/topics/inputs.md:13 fbdf2c1bed3e41d7a41ec6b14d134a98
msgid ""
"The following example demonstrates some input parameters with different "
"types and appearing on the command line in different ways."
msgstr "次の例では、異なる型の入力パラメーターが、異なる方法でコマンドライン上に表示されることを示します。"

#: ../../src/topics/inputs.md:16 008f79cdf0074c73948bf50deb0a8a47
msgid "First, create a file called `inp.cwl`, containing the following:"
msgstr "まず、以下の内容を含む`inp.cwl` というファイルを作成します："

#: ../../src/topics/inputs.md:18 94cd3f10e94f4735bd3ae7dc168e5deb
msgid "`inp.cwl`"
msgstr "`inp.cwl`"

#: ../../src/topics/inputs.md:24 b339be370e8742b69400c8040ad7d15b
msgid "Create a file called `inp-job.yml`:"
msgstr "`inp-job.yml` というファイルを作成します："

#: ../../src/topics/inputs.md:26 78974fb2475947ccb8b8c55e34df5fa6
msgid "`inp-job.yml`"
msgstr "`inp-job.yml`"

#: ../../src/topics/inputs.md:33 9cc4a60d01f945aa9b4c43afcf20098b
msgid ""
"You can use `cwltool` to create a template input object. That saves you "
"from having to type all the input parameters in an input object file:"
msgstr ""
"`cwltool` を使って、テンプレートとなる入力オブジェクトを作成することができま"
"す。これにより、入力オブジェクトファイルにすべての入力パラメータを入力する手"
"間を省くことができます："

#: ../../src/topics/inputs.md:40 5ac6da11d56446de97c251a37d997671
msgid ""
"You can redirect the output to a file, i.e. `cwltool --make-template "
"inp.cwl > inp-job.yml`, and then modify the default values with your "
"desired input values."
msgstr ""
"`cwltool --make-template inp.cwl > inp-job.yml` のように、出力をファイルにリ"
"ダイレクトします。その後デフォルト値を希望の入力値で修正することができます。"

#: ../../src/topics/inputs.md:44 6a3edb0d259d4d7c900dd9811f978d4e
msgid ""
"Notice that \"example_file\", as a `File` type, must be provided as an "
"object with the fields `class: File` and `path`."
msgstr ""
"\"example_file\" は `File` 型として、フィールド `class： File` と `path` "
"フィールドを持つオブジェクトとして提供されなければなりません。"

#: ../../src/topics/inputs.md:47 f1d76be7ba0b48f4b605581d0a9a5c72
msgid ""
"Next, create a whale.txt using [touch] by typing `touch whale.txt` on the"
" command line."
msgstr "次に、コマンドラインで`touch whale.txt` と入力し、[touch]をコマンドを使用して whale.txt を作成します。"

#: ../../src/topics/inputs.md:53 8cabfa0cbcfd4a5aa30d1aabd412136d
msgid ""
"Now invoke `cwltool` with the tool description and the input object on "
"the command line, using the command `cwltool inp.cwl inp-job.yml`. The "
"following boxed text describes these two commands and the expected output"
" from the command line:"
msgstr ""
"次に、`cwltool inp.cwl inp-job.yml` "
"というコマンドを使い、コマンドラインにツール定義と入力オブジェクトを指定して`cwltool` "
"を起動します。次のボックステキストは、これら2つのコマンドと、コマンドラインから期待される出力について説明しています："

#: ../../src/topics/inputs.md:64 5c78d7824ef34636ae2ed68d524d79e8
msgid ""
"The CWL reference runner (cwltool) and other runners create temporary "
"directories with symbolic (\"soft\") links to your input files to ensure "
"that the tools aren't accidentally accessing files that were not "
"explicitly specified"
msgstr ""
"CWLリファレンスランナー（cwltool）と他のランナーは、ツールが明示的に指定され"
"ていないファイルに誤ってアクセスしないように、入力ファイルへの（\"ソフト\""
"）シンボリックリンクを持つ一時ディレクトリを作成します"

#: ../../src/topics/inputs.md:70 5bdf77c45346445d8f93353c1e73f768
#, fuzzy
msgid ""
"The field "
"[`inputBinding`](https://w3id.org/cwl/CommandLineTool.html#Input_binding)"
" is optional and indicates whether and how the input parameter should "
"appear on the tool's command line.  If `inputBinding` is missing, the "
"parameter does not appear on the command line.  Let's look at each "
"example in detail."
msgstr ""
"フィールド[`inputBinding`](https://w3id.org/cwl/CommandLineTool.html#Input_bi"
"nding)はオプションであり、入力パラメータをツールのコマンドラインに表示するか"
"どうか、またどのように表示するかを指定します。`inputBinding`がない場合、パラ"
"メータはコマンドラインに表示されません。 それぞれの例を詳しく見てみましょう。"

#: ../../src/topics/inputs.md:83 d783fe52e86f4feda33ea0eecb622603
msgid ""
"Boolean types are treated as a flag.  If the input parameter "
"\"example_flag\" is \"true\", then `prefix` will be added to the command "
"line.  If false, no flag is added."
msgstr ""
"ブール型はフラグとして扱われます。  入力パラメータ \"example_flag \"が \"true "
"\"の場合、コマンドラインに`prefix` が追加されます。  falseの場合、フラグは付加されません。"

#: ../../src/topics/inputs.md:95 f99fb9a6d0374ef78503815d4db9006d
msgid ""
"String types appear on the command line as literal values.  The `prefix` "
"is optional, if provided, it appears as a separate argument on the "
"command line before the parameter .  In the example above, this is "
"rendered as `--example-string hello`."
msgstr ""
"文字列型は、コマンドライン上ではリテラル値として与えられます。  ` prefix` "
"はオプションです。与えられた場合、コマンドライン上のパラメータの前に別の引数として与えられます。  上の例では、`--example-string"
" hello` と与えられます。"

#: ../../src/topics/inputs.md:109 b106eed01c1744a792368f91f547e553
#, fuzzy
msgid ""
"Integer (and floating point) types appear on the command line with "
"decimal text representation.  When the option `separate` is false (the "
"default value is true), the prefix and value are combined into a single "
"argument.  In the example above, this is rendered as `-i42`."
msgstr ""
"整数型（および浮動小数点型）はコマンドラインに10進数のテキスト表現で表示され"
"ます。 `separate`オプションがfalseの場合（デフォルト値はtrue）、prefixと値は1"
"つの引数にまとめられます。 上の例では `-i42` として表示されます。"

#: ../../src/topics/inputs.md:124 1c70336741a842a5b16b687642d1d9b4
#, fuzzy
msgid ""
"File types appear on the command line as the path to the file.  When the "
"parameter type ends with a question mark `?` it indicates that the "
"parameter is optional.  In the example above, this is rendered as "
"`--file=/tmp/random/path/whale.txt`.  However, if the \"example_file\" "
"parameter were not provided in the input, nothing would appear on the "
"command line."
msgstr ""
"ファイル型は、コマンドライン上にファイルへのパスとして表示されます。  パラメ"
"ータの型の末尾にクエスチョンマーク`?`がある場合、これは、パラメータがオプショ"
"ンであることを表します。  上記の例では、`--file=/tmp/random/path/whale.txt` "
"と表示されます。  ただし、入力パラメータに \"example_file\" "
"パラメータを指定しなかった場合、コマンドラインには何も表示されません。"

#: ../../src/topics/inputs.md:131 9294c07c672b414f9c3895ed70b9b4ee
msgid ""
"Input files are read-only.  If you wish to update an input file, you must"
" [first copy it to the output directory](staging-input-files.md)."
msgstr ""
"入力ファイルは読み取り専用です。  入力ファイルを更新したい場合は、[まず出力ディレクトリにコピーする](staging-input-"
"files.md)必要があります。"

#: ../../src/topics/inputs.md:134 a07137c36e63495f836c483fd472904f
msgid ""
"The value of `position` is used to determine where parameter should "
"appear on the command line.  Positions are relative to one another, not "
"absolute.  As a result, positions do not have to be sequential, three "
"parameters with positions 1, 3, 5 will result in the same command line as"
" 1, 2, 3.  More than one parameter can have the same position (ties are "
"broken using the parameter name), and the position field itself is "
"optional.  The default position is 0."
msgstr ""
"`position` の値は、パラメータがコマンドライン上のどこに表示されるかを決定する"
"ために使用されます。  "
"Positionは、絶対的なものではなく、互いに相対的なものです。  そのため、位置は"
"連続である必要はなく、1、3、5の位置にある3つのパラメータは、1、2、3と同じコマ"
"ンドラインになります。  複数のパラメータが同じ位置を持つことも可能です（パラ"
"メータ名で紐付けを行います）。また、位置フィールドは任意です。  "
"デフォルトの位置は0です。"

#: ../../src/topics/inputs.md:142 7513adabd3ae4701b17f578ac9f321d7
msgid ""
"The `baseCommand` field will always appear in the final command line "
"before the parameters."
msgstr "`baseCommand` フィールドは、常にパラメータの前の最終コマンド行に表示されます。"

#: ../../src/topics/inputs.md:146 c3c82d25a75941b0b50a4a6bb826568f
msgid "Array Inputs"
msgstr "配列入力"

#: ../../src/topics/inputs.md:148 b11a5c7a13b345939e4ae15e1e2c0786
#, fuzzy
msgid ""
"It is easy to add arrays of input parameters represented to the command "
"line. There are two ways to specify an array parameter. First is to "
"provide `type` field with `type: array` and `items` defining the valid "
"data types that may appear in the array. Alternatively, brackets `[]` may"
" be added after the type name to indicate that input parameter is array "
"of that type."
msgstr ""
"コマンドラインに表現される入力パラメータの配列を簡単に追加することができます"
"。配列パラメータを指定するには、2つの方法があります。1つ目の方法は、`type` "
"に`type: array` と`items` を指定して、配列に現れる可能性のある有効なデータ型"
"を定義する方法です。2つ目の方法は、入力パラメータがその型の配列であることを示"
"すために、型名の後に`[]` という括弧を付けることもできます。"

#: ../../src/topics/inputs.md:154 aa00bcfc6c0f4085ae52621a2f4ae8d9
msgid "`array-inputs.cwl`"
msgstr "`array-inputs.cwl`"

#: ../../src/topics/inputs.md:160 e730b2b9bace4427bdd045556963634f
msgid "`array-inputs-job.yml`"
msgstr "`array-inputs-job.yml`"

#: ../../src/topics/inputs.md:166 ../../src/topics/outputs.md:86
#: ../../src/topics/outputs.md:109 015a0f00c2b245e2b0e87735926da736
#: 390384208d7b4771888f164b587c7b9a edb3ae59c48945f29c3086b16a5265d3
#, fuzzy
msgid ""
"Now invoke `cwltool` providing the tool description and the input object "
"on the command line:"
msgstr "ここで、コマンドラインにツール定義と入力オブジェクトを指定し `cwltool` を起動します："

#: ../../src/topics/inputs.md:178 13e59751d43b49f0ac366538a14f9c84
msgid ""
"The `inputBinding` can appear either on the outer array parameter "
"definition or the inner array element definition, and these produce "
"different behavior when constructing the command line, as shown above. In"
" addition, the `itemSeparator` field, if provided, specifies that array "
"values should be concatenated into a single argument separated by the "
"item separator string."
msgstr ""
"`inputBinding` は、外側の配列パラメータ定義と内側の配列要素定義のいずれかに記"
"述することができ、上図のようにコマンドラインを構築する際に異なる挙動を示しま"
"す。また、`itemSeparator` フィールドがあれば、配列の値を項目区切り文字列で区"
"切って1つの引数に連結することを指定することができます。"

#: ../../src/topics/inputs.md:185 bb31c6784ea843ec88f185523cfa25df
msgid ""
"Note that the arrays of inputs are specified inside square brackets `[]` "
"in `array-inputs-job.yml`. Arrays can also be expressed over multiple "
"lines, where array values that are not defined with an associated key are"
" marked by a leading `-`. This will be demonstrated in the next lesson "
"and is discussed in more detail in the [YAML Guide](yaml-"
"guide.md#arrays). You can specify arrays of arrays, arrays of records, "
"and other complex types."
msgstr ""
"なお、入力の配列は大括弧の中で指定します `array-inputs-job.yml`の`[]`です.配"
"列は複数行に渡って表現することも可能で、関連するキーで定義されていない配列の"
"値は、先頭の`-` でマークされます。これは次のレッスンで実際に確認し、[YAML "
"Guide](yaml-guide.md#arrays) でより詳細に説明されています。配列の配列、レコー"
"ドの配列、その他の複雑な型を指定することができます。"

#: ../../src/topics/inputs.md:191 53817379078548b2aeb6195cae9cbab7
msgid "Inclusive and Exclusive Inputs"
msgstr "包括的入力と排他的入力"

#: ../../src/topics/inputs.md:193 e163c0cfe9694a85b2e42682f42970a5
msgid ""
"Sometimes an underlying tool has several arguments that must be provided "
"together (they are dependent) or several arguments that cannot be "
"provided together (they are exclusive).  You can use records and type "
"unions to group parameters together to describe these two conditions."
msgstr ""
"基本的なツールには、一緒に提供しなければならない複数の引数（依存関係あり）や"
"、一緒に提供できない複数の引数（排他関係あり）があることがあります。  record"
"とユニオン型を使ってパラメータをグループ化し、この2つの条件を定義することがで"
"きます。"

#: ../../src/topics/inputs.md:198 84e1ab25511c49d1baabb1f80f247b49
msgid "`record.cwl`"
msgstr "`record.cwl`"

#: ../../src/topics/inputs.md:204 3d5dfc8ee47b458db638a9eed84b4938
msgid "`record-job1.yml`"
msgstr "`record-job1.yml`"

#: ../../src/topics/inputs.md:215 ecfb1d911a84400ba3db12fd0adf9279
msgid ""
"In the first example, you can't provide `itemA` without also providing "
"`itemB`."
msgstr "最初の例では、`itemB` も与えずに、`itemA` を与えることはできません。"

#: ../../src/topics/inputs.md:217 24ba804374b4471d8e925d80670f9dff
msgid "`record-job2.yml`"
msgstr "`record-job2.yml`"

#: ../../src/topics/inputs.md:233 436707d9c7634732ad1e60d8294bd4ba
msgid ""
"In the second example, `itemC` and `itemD` are exclusive, so only the "
"first matching item (`itemC`) is added to the command line and remaining "
"item (`itemD`) is ignored."
msgstr ""
"2番目の例では、`itemC` と`itemD` が排他的であるため、最初に一致した項目 (`itemC`) "
"のみがコマンドラインに追加され、残りの項目 (`itemD`) は無視されます。"

#: ../../src/topics/inputs.md:236 01b168c5faf94ead8d836dfe39e4c592
msgid "`record-job3.yml`"
msgstr "`record-job3.yml`"

#: ../../src/topics/inputs.md:252 e6d81d6549984689bae4533c6d01bd5b
msgid ""
"In the third example, only `itemD` is provided, so it appears on the "
"command line."
msgstr "3番目の例では、`itemD` のみが提供されているので、コマンドラインに表示されます。"

#: ../../src/topics/inputs.md:255 ffddeeda8f04408ba73f7a59a4618da5
msgid "Exclusive Input Parameters with Expressions"
msgstr "式で入力パラメータを排他的に指定する"

#: ../../src/topics/inputs.md:257 cf22f21ec44c483986979316544a7c3b
msgid ""
"If you use exclusive input parameters and reference them in expressions, "
"you need to be aware that the `inputs` JavaScript object will contain one"
" of the possible, mutually-exclusive input values. Because the types of "
"these exclusive values may differ, you may need to check which type is in"
" use when you reference the properties of the `input` object."
msgstr ""
"排他的入力パラメータを式と組み合わせて使用する場合、JavaScript "
"オブジェクトの`inputs` に排他的入力値のいずれかが含まれることを意識する必要が"
"あります。つまり、**or** のブーリアン演算子を使用して、`inputs`にどの値が存在"
"するかをチェックする必要がある場合があります。"

#: ../../src/topics/inputs.md:263 0fecb128b19b44d796b6c1b6de4f7166
msgid ""
"Let's use an example that contains an exclusive `file_format` input "
"parameter that accepts `null` (i.e. no value provided), or any value from"
" an enum."
msgstr ""
"`file_format` 入力パラメータに、`null` (つまり、値がない)、または enum "
"の任意の値を受け入れる排他的なものを含む例を使ってみましょう。"

#: ../../src/topics/inputs.md:266 7f1941698a6046e9b9e8a53736af949a
msgid "`exclusive-parameter-expressions.cwl`"
msgstr "`exclusive-parameter-expressions.cwl`"

#: ../../src/topics/inputs.md:272 60b585142f06489d9f48090b664b6d32
msgid ""
"Note how the JavaScript expression uses the value of the exclusive input "
"parameter without taking into consideration a `null` value. If you "
"provide a valid value, such as `fasta` (one of the possible values of the"
" enum), your command should execute successfully:"
msgstr ""
"JavaScriptの式では、`null` の値を考慮せずに、排他的入力パラメータの値を使用し"
"ていることに注意してください。`fasta`（enumの値の1つ）のような有効な値を指定"
"すると、コマンドは正常に実行されるはずです："

#: ../../src/topics/inputs.md:281 11fdeb057d674f118830f431ff019c15
#, fuzzy
msgid ""
"However, if you do not provide any input value, then `file_format` will "
"be evaluated to `null`, which does not match the expected type for the "
"output field (a `string`), resulting in failure when running your "
"workflow."
msgstr ""
"しかし、入力値を提供しない場合、`file_format` は、`null` "
"の値として評価されます。これは、出力フィールドが期待する型（`string` ）と一致しないため、ワークフロー実行時に失敗することになります。"

#: ../../src/topics/inputs.md:290 8594cca9d93b4280b6cfee64c8a7c578
#, fuzzy
msgid ""
"To correct it, you should explicitly handle the possibility of a `null` "
"value. For example, the expression could be changed to "
"`$(inputs.file_format || 'auto')`, to have a default value `\"auto\"` if "
"none was provided in the command line or job input file."
msgstr ""
"これを修正するには、排他的パラメータ、または`null` を許可するパラメータを使用する場合、JavaScript 式で or "
"演算子を使用することを忘れてはなりません。たとえば、式を`$(inputs.file_format || 'auto')` "
"に変更すると、コマンドラインやジョブ入力ファイルで何も指定されていない場合にデフォルト値を持つようになります。"

#: ../../src/topics/inputs.md:295 b5055c77f85e43609fe3e9b9839778e3
msgid ""
"Here, the boolean “or” operator `||` in JavaScript is used for its "
"_short-circuiting_ property. If `inputs.file_format` is “true” in a "
"boolean context (e.g. a valid non-empty string from the enum), the "
"evaluation of the expression stops at the first operand of `||`; it "
"“short-circuits”. If however `inputs.file_format` is `null`, the whole "
"expression’s value becomes that of the second operand, which is why a "
"reasonable default can be provided there."
msgstr ""
"ここでは、JavaScriptのブール値 \"or\"、 \"演算子 `||` は、その_short-"
"circuiting_プロパティに使用されます。`inputs.file_format`がブール値の \"true"
"\"である場合（例えば、列挙された有効な空でない文字列）、式の評価は "
"`||`の最初のオペランドで停止します。しかし、 `inputs.file_format`が`null`の場"
"合、式全体の値は2番目のオペランドの値になります。これにより合理的なデフォルト"
"値を提供します。"

#: ../../src/topics/metadata-and-authorship.md:1
#: 723c2232310c4276aeac2bd6728d2912
msgid "Metadata and Authorship"
msgstr "メタデータと著者"

#: ../../src/topics/metadata-and-authorship.md:3
#: 4d81aac1830045229e5c60c7959074d8
msgid ""
"Implementation extensions not required for correct execution (for "
"example, fields related to GUI presentation) and metadata about the tool "
"or workflow itself (for example, authorship for use in citations) may be "
"provided as additional fields on any object. Such extensions fields (e.g."
" `format: edam:format_2572`) can use a namespace prefix listed in the "
"`$namespaces` section of the document (e.g. edam: "
"http://edamontology.org/) as described in the [Schema Salad specification"
"][schema-salad]. Once you add the namespace prefix, you can access it "
"anywhere in the document as shown below. Otherwise, one must use full "
"URLs: `format: http://edamontology.org/format_2572`."
msgstr ""
"正しい実行に必須でない実装拡張（例えば、GUI表示に関するフィールド）およびツー"
"ルまたはワークフロー自体に関するメタデータ（例えば、引用で使用するための著者"
"名）は、任意のオブジェクトの追加フィールドとして提供できます。このような拡張"
"フィールド（例：`format: edam:format_2572` ）は、[Schema Salad仕様][schema-"
"salad]で説明されているように、文書の`$namespaces` セクション（例： edam: "
"http://edamontology.org/ ）に記載されている名前空間プレフィックスを使用できま"
"す。一度名前空間プレフィックスを追加すれば、以下のように定義内のどこにでもア"
"クセスできるようになります。それ以外の場合は、完全なURLを使用しなければなりま"
"せん。`format: http://edamontology.org/format_2572`."

#: ../../src/topics/metadata-and-authorship.md:13
#: 368f8993ae9d401488081d74ae5acd49
msgid ""
"For all developers, we recommend the following minimal metadata for your "
"tool and workflows. This example includes metadata allowing others to "
"cite your tool."
msgstr "すべての開発者に対し、ツールおよびワークフローに関する以下の最小限のメタデータを推奨します。この例では、他の人があなたのツールを引用するためのメタデータを含んでいます。"

#: ../../src/topics/metadata-and-authorship.md:16
#: c80f2b180ca74afb8a1fc18f8686304b
msgid "`metadata_example2.cwl`"
msgstr "`metadata_example2.cwl`"

#: ../../src/topics/metadata-and-authorship.md:28
#: 37b07ea9b7124842b8ba3040f70308e9
#, fuzzy
msgid "Extended Example"
msgstr "拡張された例"

#: ../../src/topics/metadata-and-authorship.md:30
#: 1cd5989ade6741aabe625c13bed3c8ed
#, fuzzy
msgid ""
"For those that are highly motivated, it is also possible to annotate your"
" tool with a much larger amount of metadata. This example includes EDAM "
"ontology tags as keywords (allowing the grouping of related tools), hints"
" at hardware requirements in order to use the tool, and a few more "
"metadata fields."
msgstr "高いモチベーションを持つ人であれば、ツールにもっと多くのメタデータを付与することも可能です。この例では、EDAMオントロジーのタグをキーワードとして含み（関連するツールのグループ化が可能）、ツールを使用するために必要なハードウェアのヒントや、さらにいくつかのメタデータフィールドがあります。"

#: ../../src/topics/metadata-and-authorship.md:35
#: ae7369ba14404d23b72d1ef30dcd4153
msgid "`metadata_example3.cwl`"
msgstr "`metadata_example3.cwl`"

#: ../../src/topics/operations.md:1 a79974b2f4534fcd8c7a04401e8a5556
msgid "Operations"
msgstr "Operations"

#: ../../src/topics/operations.md:3 b6507c8e1625476b97708423acb4fd0e
msgid ""
"An Operation is a type of CWL process, just like a workflow, a command-"
"line tool, or an expression tool. It is a step of a workflow that "
"specifies inputs and outputs, but it does not provide enough information "
"to be executed."
msgstr ""
"Operationは、Workflow、CommandLineTool、ExpressionToolと同様に、CWL Processの"
"一種です。Workflowのステップで、入力と出力を指定しますが、実行するのに十分な"
"情報を提供しません。"

#: ../../src/topics/operations.md:7 047b09455db64524a71c47ab5192039f
msgid ""
"You can create operations to visualize a workflow during development, "
"before you are ready to submit the workflow to a CWL runner:"
msgstr "CWLランナーにワークフローを送信する前に、開発中のワークフローを可視化することができます："

#: ../../src/topics/operations.md:10 e9b2b97f3059460b867577a49934a338
msgid "`operations.cwl`"
msgstr "`operations.cwl`"

#: ../../src/topics/operations.md:16 d21e9444182d4e27bae934db4573ae99
msgid ""
"The `uppercase` step of the workflow is an operation. It can appear where"
" a command line tool or an expression is expected. You can also plot it "
"with the CWL Viewer or `cwltool`:"
msgstr ""
"ワークフローの`uppercase` ステップは Operation "
"です。CommandLineToolやExpressionToolのように使用することができます。また、"
"CWL Viewerや`cwltool` を使って可視化することもできます："

#: ../../src/topics/operations.md:24 61e4ae6ed18e41708270eb358cd55277
msgid ""
"The output of the command above can be rendered with a Graphviz renderer."
" The following image is rendered with the Sphinx `{graphviz}` directive "
"(this user guide is built with Sphinx):"
msgstr ""
"上記のコマンドの出力は、Graphvizを使ってレンダリングすることができます。以下"
"の画像は、SphinxのGraphvizディレクティブでレンダリングしたものです（このユー"
"ザーガイドはSphinxで構築されています）："

#: ../../src/topics/operations.md:56 c07e3ff02ac14ffb89bcbd1b30f3f3fd
msgid ""
"The operation file will fail to run with `cwltool` because `cwltool` "
"lacks the necessary information to execute it:"
msgstr ""
"operation ファイルを `cwltool` で実行しようとすると、`cwltool` "
"が実行に必要な情報を持っていないため、失敗します："

#: ../../src/topics/operations.md:59 e184470550e645f6b9ce658af7e65ecf
msgid "`cwltool` does not know how to run operations"
msgstr "`cwltool` は、どうやってoperationsを実行するかを知りません"

#: ../../src/topics/operations.md:67 3b90445d3428444cafd7d5c0e5884980
#, fuzzy
msgid ""
"CWL runners may come up with ways to bind operations to concrete steps. A"
" CWL runner could, for instance, use abstract operations with ID's that "
"correspond to steps executed by a different workflow engine."
msgstr ""
"CWL runnerは、operations "
"を具体的なステップにバインドする見出すかもしれません。例えば、CWL runnerは、"
"ワークフローエンジンで実行される異なるステップに対応するIDを持つ抽象的な "
"operation を使用することができます。"

#: ../../src/topics/outputs.md:1 35e7bad6fdc04bcf9bbfbb2d8d42cfa5
msgid "Outputs"
msgstr "Outputs"

#: ../../src/topics/outputs.md:3 6d912d40359c4d33a4f08abca83c00be
msgid "Returning Output Files"
msgstr "出力ファイルの回収"

#: ../../src/topics/outputs.md:5 a6bd3f9e23de488394958fe7b59a61e0
msgid ""
"The `outputs` of a tool is a list of output parameters that should be "
"returned after running the tool.  Each parameter has an `id` for the name"
" of parameter, and `type` describing what types of values are valid for "
"that parameter."
msgstr ""
"ツールの`outputs` "
"は、ツールの実行後に返されるべき出力パラメータのリストです。  "
"各パラメーターには、パラメーター名を示す`id` "
"と、そのパラメーターに有効な値の型を示す`type` があります。"

#: ../../src/topics/outputs.md:10 a229d8d983344e51a231edb5f667d84b
#, fuzzy
msgid ""
"When a tool runs under CWL, the starting working directory is the "
"designated output directory.  The underlying tool or script must record "
"its results in the form of files created in the output directory.  The "
"output parameters returned by the CWL tool are either the output files "
"themselves, or the result of examining the content of those files."
msgstr ""
"CWLでツールを実行する場合、開始時の作業ディレクトリは指定された出力ディレクトリになります。  "
"基礎となるツールやスクリプトは、出力ディレクトリに作成されるファイルの形でその結果を記録しなければなりません。  "
"CWLツールによって返される出力パラメータは、出力ファイルそのものであるか、またはそれらのファイルの内容を調べることによって得られるものです。"

#: ../../src/topics/outputs.md:16 9845e517f7d848e5b59a97880ca6999f
msgid ""
"The following example demonstrates how to return a file that has been "
"extracted from a tar file."
msgstr "次の例は、tarファイルから抽出されたファイルを返す方法を示しています。"

#: ../../src/topics/outputs.md:19 0bf1ad2c43174e57a3ba8dd86f7c96b2
msgid "Passing mandatory arguments to the `baseCommand`"
msgstr "`baseCommand` に必須引数を渡します。"

#: ../../src/topics/outputs.md:21 553d535b023e4d69a888fe5b24bb8c5b
msgid ""
"In previous examples, the `baseCommand` was just a string, with any "
"arguments passed as CWL inputs. Instead of a single string, we can use an"
" _array of strings_ as the value of `baseCommand`. The first element of "
"the array is the command to run, and any subsequent elements are "
"mandatory command line arguments"
msgstr ""
"これまでの例では、`baseCommand` "
"は単なる文字列で、引数はCWL入力として渡していました。単一の文字列の代わりに、"
"_文字列の配列_ を使用することができます。 配列の最初の要素は実行するコマンド"
"で、それ以降の要素は必須のコマンドライン引数です"

#: ../../src/topics/outputs.md:28 9b65071222c94951bed12ac53e964ee3
msgid "`tar.cwl`"
msgstr "`tar.cwl`"

#: ../../src/topics/outputs.md:34 759ab0847b97479fb4a15e4b7d4e6565
msgid "`tar-job.yml`"
msgstr "`tar-job.yml`"

#: ../../src/topics/outputs.md:40 f9752ec303ab419c8db8adef3fa2466f
msgid "Next, create a tar file for the example."
msgstr "次に、サンプルとなるtarファイルを作成します。"

#: ../../src/topics/outputs.md:47 4f96576528684f28a72b805f777769e6
msgid ""
"And now invoke `cwltool` with the tool description and the input object "
"on the command line:"
msgstr "そして、今度はコマンドラインにツール定義と入力オブジェクトを指定して`cwltool` を呼び出します："

#: ../../src/topics/outputs.md:53 707803bec0cb42919905c7c321bd9d30
msgid ""
"The field "
"[`outputBinding`](https://w3id.org/cwl/CommandLineTool.html#CommandOutputBinding)"
" describes how to set the value of each output parameter."
msgstr ""
"[`outputBinding`](https://w3id.org/cwl/CommandLineTool."
"html#CommandOutputBinding) "
"フィールドには、各出力パラメータの値の設定方法が記述されています。"

#: ../../src/topics/outputs.md:64 cbaec50871e04718883c8c91ff475d20
msgid ""
"The "
"[`glob`](https://w3id.org/cwl/CommandLineTool.html#CommandOutputBinding) "
"field consists of the pattern to match file names in the output "
"directory. This can simply be the file's exact name. But if you don't "
"know the name of the file in advance, you can use a wildcard pattern like"
" `glob: '*.txt'`."
msgstr ""
"[`glob`](https://w3id.org/cwl/CommandLineTool.html#CommandOutputBinding) フィ"
"ールドは、出力ディレクトリ内のファイル名で構成されます。前もって出力ファイル"
"名が分からない場合は、`glob: '*.txt'` "
"のようにワイルドカードパターンを使用することができます。"

#: ../../src/topics/outputs.md:69 8a6e9173198241429effd911c3a7c4d7
msgid "Capturing Standard Output"
msgstr "標準出力をキャプチャする"

#: ../../src/topics/outputs.md:71 a7c4fdaeda3e411fbeb802c5fa529ce9
#, fuzzy
msgid ""
"To capture a tool's standard output stream, add the "
"[`stdout`](https://w3id.org/cwl/CommandLineTool.html#stdout) field with "
"the name of the file where the output stream should go.  Then add `type: "
"stdout` on the corresponding output parameter."
msgstr ""
"ツールの標準出力をキャプチャするには、[`stdout`](https://w3id.org/cwl/"
"CommandLineTool.html#stdout) "
"フィールドに、標準出力を保存したいファイル名を追加します。   "
"次に、対応する出力パラメータに`type: stdout` を追加します。"

#: ../../src/topics/outputs.md:75 cf2ef8dc7fda49308c09efe4f4ef5d7b
msgid "`stdout.cwl`"
msgstr "`stdout.cwl`"

#: ../../src/topics/outputs.md:93 cbe236266dd148aaa96355e490a87cbe
msgid "Array Outputs"
msgstr "出力の配列"

#: ../../src/topics/outputs.md:95 77f86a7b94924a08b6ea2660218fe3c5
msgid ""
"You can also capture multiple output files into an array of files using "
"`glob`."
msgstr "また、`glob` を使って、複数の出力ファイルを配列に取り込むことができます。"

#: ../../src/topics/outputs.md:97 b34e30481fbd489d95fb7f8d5b5ab50c
msgid "`array-outputs.cwl`"
msgstr "`array-outputs.cwl`"

#: ../../src/topics/outputs.md:103 3aab0e0c9a78430f9caaa29a93303b56
msgid "`array-outputs-job.yml`"
msgstr "`array-outputs-job.yml`"

#: ../../src/topics/outputs.md:116 9a14271c3180429988aaa14869f783a0
#, fuzzy
msgid ""
"As described in the [YAML Guide](yaml-guide.md#arrays), the array of "
"expected outputs is specified in `array-outputs-job.yml` with each entry "
"marked by a leading `-`. This format can also be used in CWL descriptions"
" to mark entries in arrays, as demonstrated in several of the upcoming "
"sections."
msgstr ""
"[YAML Guide](yaml-guide.md#arrays) で説明されているように、期待される出力の配列は`array-outputs-"
"job.yml` で指定され、それぞれのエントリーは先頭の`-` "
"でマークされています。このフォーマットは、CWL定義で配列のエントリーをマークするために使用することもでき、今後のいくつかのセクションでデモがあります。"

#: ../../src/topics/parameter-references.md:1 c8a6ea340e6a43398e97b68e03a8bb3b
msgid "Parameter References"
msgstr "パラメータリファレンス"

#: ../../src/topics/parameter-references.md:3 f5c0592ca28c46c2a89943f4f6f69a27
msgid ""
"In a previous example, we extracted a file using the \"tar\" program. "
"However, that example was very limited because it assumed that the file "
"we were interested in was called \"hello.txt\", and this was written into"
" the `.cwl` file. This is not the best way to do this, as the "
"\"hello.txt\" filename may vary or be dependent on the input file(s) "
"used.  To avoid this we can specify the name of the file we want in the "
"job parameters file (`.yml`). In this example, you will see how to "
"reference the value of input parameters dynamically from other fields, "
"which will allow us to then specify the name of the file to extract."
msgstr ""
"前の例では、\"tar \"プログラムを使用してファイルを抽出しました"
"。しかし、その例は非常に限定的なものでした。というのも、"
"私たちが興味を持っているファイルは\"hello.txt\"と呼ばれ、これが`.cwl` ファイ"
"ルに直接書き込まれていると仮定していたからです。これは最良の方法ではありませ"
"ん。なぜなら、\"hello.txt \"というファイル名は"
"、使用する入力ファイルによって異なるか、または依存する可能性があるからです。"
"  これを避けるために、ジョブパラメーターファイル(`.yml`)で必要なファイル名を"
"指定することができます。この例では、入力パラメーターの値を他のフィールドから"
"動的に参照して、抽出するファイル名を指定する方法を説明します。"

#: ../../src/topics/parameter-references.md:13 50db8add9b1942d986e581b8d21c2ee4
msgid "`tar-param.cwl`"
msgstr "`tar-param.cwl`"

#: ../../src/topics/parameter-references.md:19 d01ad5fd9fea462cab0d4d776824b4e1
msgid "`tar-param-job.yml`"
msgstr "`tar-param-job.yml`"

#: ../../src/topics/parameter-references.md:25 9b1e2f1a23ea4fe2af97ef5108f33376
msgid ""
"Create your input files and invoke `cwltool` with the tool description "
"and the input object on the command line:"
msgstr "入力ファイル(入力オブジェクト)を作成し、コマンドラインでツール定義と入力オブ"
"ジェクトを指定して`cwltool` を呼び出します："

#: ../../src/topics/parameter-references.md:36 06926a516ae6432d96e3eaa62202cd86
#, fuzzy
msgid ""
"Certain fields permit parameter references which are enclosed in "
"`$(...)`. These are evaluated and replaced with value being referenced."
msgstr "`$(...)` で囲まれたパラメータ参照を許可するフィールドもあります。これらは評価され、参照されている値に置き換えられます。"

#: ../../src/topics/parameter-references.md:47 384fe8188f414eafbbb8d6b81bdfd779
#, fuzzy
msgid ""
"References are written using a subset of Javascript syntax.  In this "
"example, `$(inputs.extractfile)`, `$(inputs[\"extractfile\"])`, and "
"`$(inputs['extractfile'])` are equivalent."
msgstr ""
"パラメータリファレンスは、Javascriptの構文のサブセットを使用して記述します。  "
"この例では、`$(inputs.extractfile)` 、`$(inputs[\"extractfile\"])` "
"、`$(inputs['extractfile'])` は同等です。"

#: ../../src/topics/parameter-references.md:51 56ead1c8d45c43bdbcbc6f7cbb8e1e92
msgid ""
"The value of the \"inputs\" variable is the input object provided when "
"the CWL tool was invoked."
msgstr "変数 \"inputs \"の値は、CWLツールの起動時に提供された入力オブジェクトです。"

#: ../../src/topics/parameter-references.md:54 56bca89e314c4223b33d7fe63c9b771d
#, fuzzy
msgid ""
"Note that because `File` parameters are objects, to get the path to an "
"input file you must reference the path field on a file object; to "
"reference the path to the tar file in the above example you would write "
"`$(inputs.tarfile.path)`."
msgstr ""
"`File` "
"パラメータはオブジェクトであるため、入力ファイルのパスを取得するには、ファイルオブジェクトのpathフィールドを参照する必要があります。上記の例でtarファイルのパスを参照するには、`$(inputs.tarfile.path)`となります。"

#: ../../src/topics/parameter-references.md:59 1c1ab240c4114572bb4e42955baad361
msgid "Where are parameter references allowed?"
msgstr "パラメータ参照はどこで許されるのですか？"

#: ../../src/topics/parameter-references.md:61 055d3268859c46c4b7db5005608bae05
#, fuzzy
msgid "You can only use parameter references in certain fields.  These are:"
msgstr "パラメータ参照は、特定のフィールドにのみ使用することができます。  以下はその例です："

#: ../../src/topics/parameter-references.md:63 2ed66835bd9044adbfdd0b5097787f22
#, fuzzy
msgid ""
"From "
"[`CommandLineTool`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"
msgstr ""
"[`CommandLineTool`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"
" から"

#: ../../src/topics/parameter-references.md:69 f592619e4b2c497e80cd75da0548cf07
msgid ""
"From "
"[CommandInputParameter](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"
msgstr ""
"[CommandInputParameter](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"
" から"

#: ../../src/topics/parameter-references.md:72 81ea71a35020421187dc18ddd151c62f
msgid ""
"From "
"[`inputBinding`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"
msgstr ""
"[`inputBinding`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"
" から"

#: ../../src/topics/parameter-references.md:74 ea0117748adc4324901024f21eed04ac
msgid ""
"From "
"[CommandOutputParamater](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)"
msgstr ""
"[CommandOutputParamater](http://www.commonwl.org/v1.0/CommandLineTool."
"html#CommandOutputParameter) から"

#: ../../src/topics/parameter-references.md:77 3a30e73176cf4e4eb9f26770a176b9c9
msgid ""
"From "
"[CommandOutputBinding](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)"
msgstr ""
"[CommandOutputBinding](http://www.commonwl.org/v1.0/CommandLineTool."
"html#CommandOutputBinding) から"

#: ../../src/topics/parameter-references.md:81 551c199c9a6344fca9bfacfb69fc4e53
msgid ""
"From "
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[WorkflowOutputParameter](http://www.commonwl.org/v1.0/Workflow.html#WorkflowOutputParameter)"
msgstr ""
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter) "
"と [WorkflowOutputParameter](http://www.commonwl.org/v1.0/Workflow."
"html#WorkflowOutputParameter) から"

#: ../../src/topics/parameter-references.md:85 7008a1ff1af54fda827637e787e5c7dd
msgid ""
"From "
"[WorkflowStepInput](http://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
msgstr ""
"[WorkflowStepInput](http://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
" から"

#: ../../src/topics/parameter-references.md:89 45743e1b261c4195856de0c2e30ea72e
msgid ""
"From "
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[ExpressionToolOutputParameter](http://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)"
msgstr ""
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter) "
"と [ExpressionToolOutputParameter](http://www.commonwl.org/v1.0/Workflow."
"html#ExpressionToolOutputParameter) から"

#: ../../src/topics/parameter-references.md:92 0ae32d1db5f9452bbfcbbc4719b0b9f1
msgid ""
"From "
"[`ResourceRequirement`](http://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement)"
msgstr ""
"[`ResourceRequirement`](http://www.commonwl.org/v1.0/CommandLineTool."
"html#ResourceRequirement) から"

#: ../../src/topics/parameter-references.md:101
#: 7e1907ff15c74f488187531de336eccf
msgid ""
"From "
"[`InitialWorkDirRequirement`](http://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"
msgstr ""
"[`InitialWorkDirRequirement`](http://www.commonwl.org/v1.0/CommandLineTool."
"html#InitialWorkDirRequirement) から"

#: ../../src/topics/parameter-references.md:103
#: 678874668fed4f4d80a1b0990e183e2f
msgid "in [Dirent](http://www.commonwl.org/v1.0/CommandLineTool.html#Dirent)"
msgstr "[Dirent](http://www.commonwl.org/v1.0/CommandLineTool.html#Dirent) の中に"

#: ../../src/topics/parameter-references.md:107
#: e2882880886046ac88ae1c0d414366d1
msgid ""
"From "
"[EnvironmentDef](http://www.commonwl.org/v1.0/CommandLineTool.html#EnvironmentDef)"
msgstr ""
"[EnvironmentDef](http://www.commonwl.org/v1.0/CommandLineTool."
"html#EnvironmentDef) から"

#: ../../src/topics/requirements-and-hints.md:5
#: 05324169d8ae48d4a1abe3a0ac07c891
msgid "Requirements and Hints"
msgstr "Requirements と Hints"

#: ../../src/topics/specifying-software-requirements.md:1
#: 1f5b72d7ec82442ba29baa14a03f061b
msgid "Specifying Software Requirements"
msgstr "ソフトウェア要求事項の指定"

#: ../../src/topics/specifying-software-requirements.md:3
#: e708866921ea49d69d3c2a32d63ea468
#, fuzzy
msgid ""
"Often, tool descriptions will be written for a specific version of a "
"software. To make it easier for others to use your descriptions, you can "
"include a "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement)"
" field in the `hints` section. This may also help to avoid confusion "
"about which version of a tool the description was written for."
msgstr ""
"多くの場合、ツール定義はソフトウェアの特定のバージョン用に書かれます。他の人"
"があなたの説明を使いやすくするために、`hints` セクションに "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#SoftwareRequirement) フィールドを含めることができます。これは、ツール定"
"義がどのツールのどのバージョン用に書かれたかについての混乱を避けるのにも役立"
"ちます。"

#: ../../src/topics/specifying-software-requirements.md:13
#: 6f722d6fd54f485fa964076c8d08938b
msgid ""
"In this example, the software requirement being described is InterProScan"
" version 5.21-60."
msgstr "この例では、定義されるソフトウェア要件はInterProScanバージョン5.21-60です。"

#: ../../src/topics/specifying-software-requirements.md:25
#: 5c1236ec57c64079bfb7c779524b12ad
msgid ""
"Depending on your CWL runner, these hints may be used to check that the "
"required software is installed and available before the job is run. To "
"enable these checks with the reference implementation, use the "
"[dependency resolvers configuration][dependencies]."
msgstr ""
"CWLランナーによっては、これらのヒントを使用して、ジョブの実行前に必要なソフト"
"ウェアがインストールされ、利用可能であることをチェックすることができます。リ"
"ファレンス実装でこれらのチェックを有効にするには、[依存性解決のための設定][de"
"pendencies] を使用します。"

#: ../../src/topics/specifying-software-requirements.md:29
#: 1a8b8aadf1c64e87b8b670e288bc14bc
msgid ""
"As well as a version number, a unique resource identifier (URI) for the "
"tool is given in the form of an [RRID][rrid]. Resources with RRIDs can be"
" looked up in the [SciCrunch][scicrunch] registry, which provides a "
"portal for finding, tracking, and referring to scientific resources "
"consistently. If you want to specify a tool as a "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement),"
" search for the tool on SciCrunch and use the RRID that it has been "
"assigned in the registry. (Follow this [Adding a Resource Tutorial"
"][scicrunch-add-tool] to add a tool to SciCrunch). You can use this RRID "
"to refer to the tool (via [identifiers.org][identifiers]) in the `specs` "
"field of your requirement description. Other good choices, in order of "
"preference, are to include the DOI for the main tool citation and the URL"
" to the tool."
msgstr ""

#: ../../src/topics/staging-input-files.md:1 d10c792550e8498c8ee384d3093da306
msgid "Staging Input Files"
msgstr "入力ファイルのステージング"

#: ../../src/topics/staging-input-files.md:3 ac2ef1fced5f4044861761a11c35e78a
#, fuzzy
msgid ""
"Normally, input files are located in a read-only directory separate from "
"the output directory.  This causes problems if the underlying tool "
"expects to write its output files alongside the input file in the same "
"directory.  You use "
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/CommandLineTool.html#InitialWorkDirRequirement)"
" to stage input files into the output directory. In this example, we use "
"a JavaScript expression to extract the base name of the input file from "
"its leading directory path."
msgstr ""
"通常、入力ファイルは出力ディレクトリとは別の読み取り専用ディレクトリに置かれ"
"ます。 これは、ツールが同じディレクトリに入力ファイルと一緒に出力ファイルを書"
"き込むことを期待している場合に問題を引き起こします。 入力ファイルを出力ディレ"
"クトリにステージング（配置のこと）するには、[`InitialWorkDirRequirement`](htt"
"ps://w3id.org/cwl/CommandLineTool.html#InitialWorkDirRequirement)を使用します"
"。この例では、JavaScript式を使用して、先頭のディレクトリパスから入力ファイル"
"のベース名を抽出しています。"

#: ../../src/topics/staging-input-files.md:9 d8ca16f5321e486ebe8ea9f9752b3737
msgid "`linkfile.cwl`"
msgstr "`linkfile.cwl`"

#: ../../src/topics/troubleshooting.md:1 aa3eddcaa0684f86ba67aafcd57872e7
msgid "Troubleshooting"
msgstr "トラブルシューティング"

#: ../../src/topics/troubleshooting.md:3 3207f476afa04158bd26db39a16a2df5
msgid ""
"In this section you will find ways to troubleshoot when you have problems"
" executing CWL. We focus on `cwltool` here but some of these techniques "
"may apply to other CWL Runners."
msgstr ""
"このセクションでは、CWLの実行に問題がある場合にトラブルシューティングを行う方法を説明します。ここでは、`cwltool` "
"に焦点を当てますが、これらのテクニックのいくつかは他のCWLランナーにも適用されるかもしれません。"

#: ../../src/topics/troubleshooting.md:6 1d47f4ce04554cabb1ccf40a13ee42ec
msgid "Run `cwltool` with `cachedir`"
msgstr "`cwltool` を`cachedir` で実行する"

#: ../../src/topics/troubleshooting.md:8 0c25602a83e441b48b536eb49568f2b6
msgid ""
"You can use the `--cachedir` option when running a workflow to tell "
"`cwltool` to cache intermediate files (files that are not input nor "
"output files, but created while your workflow is running). By default, "
"these files are created in a temporary directory but writing them to a "
"separate directory makes accessing them easier."
msgstr ""
"ワークフロー実行時に`--cachedir` オプションを使用すると、`cwltool` に中間ファ"
"イル（入力ファイルでも出力ファイルでもないが、ワークフロー実行中に作成される"
"ファイル）をキャッシュするよう指示することができます。デフォルトでは、これら"
"のファイルは一時ディレクトリに作成されますが、別のディレクトリに書き込むこと"
"でアクセスが容易になります。"

#: ../../src/topics/troubleshooting.md:14 36ec60b80c714357a4274217274136ff
msgid ""
"In the following example `troubleshooting-wf1.cwl` we have two steps, "
"`step_a` and `step_b`. The workflow is equivalent to `echo \"Hello "
"World\" | rev`, which would print the message \"Hello World\" reversed, "
"i.e. \"dlroW olleH\". However, the second step, `step_b`, **has a typo**,"
" where instead of executing the `rev` command it tries to execute `revv`,"
" which fails."
msgstr ""
"次の例では、`troubleshooting-wf1.cwl` ` step_a` と`step_b` "
"という2つのステップを用意しています。このワークフローは、`echo \"Hello "
"World\" | rev` と同等で、\"Hello World\" というメッセージを反転して、"
"すなわち \"dlroW olleH\" "
"と表示します。しかし、2番目のステップである`step_b`,**にはタイプミス** "
"があり、`rev` コマンドを実行する代わりに`revv` "
"を実行しようとし、失敗しています。"

#: ../../src/topics/troubleshooting.md:20 6f34038054ac4f4fa0b0ad9cbc3ecdc7
msgid "`troubleshooting-wf1.cwl`"
msgstr "`troubleshooting-wf1.cwl`"

#: ../../src/topics/troubleshooting.md:27 b777877c88024c9fb06a6614029ef8d6
#, fuzzy
msgid ""
"Let's execute this workflow with `/tmp/cachedir/` as the `--cachedir` "
"value (`cwltool` will create the directory for you if it does not exist "
"already):"
msgstr ""
"`--cachedir` に `/tmp/cachedir/` を指定して、このワークフローを実行してみましょう（`cwltool` "
"は、ディレクトリがまだ存在しない場合、新規作成します）："

#: ../../src/topics/troubleshooting.md:35 8654b7f2f4464d13be4b47729e1f07e5
msgid ""
"The workflow is in the `permanentFail` status due to `step_b` failing to "
"execute the non-existent `revv` command. The `step_a` was executed "
"successfully and its output has been cached in your `cachedir` location. "
"You can inspect the intermediate files created:"
msgstr ""
"`step_b` が存在しない `revv` コマンドの実行に失敗したため、ワークフローは "
"`permanentFail` ステータスになっています。`step_a` は正常に実行され、"
"その出力は `cachedir` "
"にキャッシュされました。作成された中間ファイルを確認することができます："

#: ../../src/topics/troubleshooting.md:44 04e80f7ce14d4d73bc5d290dcf01bcdb
#, fuzzy
msgid ""
"Each workflow step has received a unique ID (the long value that looks "
"like a hash). The `${HASH}.status` files display the status of each step "
"executed by the workflow. And the `step_a` output file `stdout.txt` is "
"visible in the output of the command above."
msgstr ""
"各ワークフローのステップには、一意のID（ハッシュのような長い値）が付与されて"
"います。`${HASH}.status` ファイルは、ワークフローによって実行された各ステップ"
"のステータスを表示します。そして、`step_a` 出力ファイル`stdout.txt` "
"は、上記のコマンドの出力で確認できます。"

#: ../../src/topics/troubleshooting.md:48 719917cb0fd849f5a328671df8726189
msgid ""
"Now fix the typo so `step_b` executes `rev` (i.e. replace `revv` by `rev`"
" in the `step_b`). After fixing the typo, when you execute `cwltool` with"
" the same arguments as the previous time, note that now `cwltool` output "
"contains information about pre-cached outputs for `step_a`, and about a "
"new cache entry for the output of `step_b`. Also note that the status of "
"`step_b` is now of success."
msgstr ""
"`step_b` が`rev` を実行するように、タイプミスを修正します（すなわち、`step_b`"
" の`revv` を`rev` "
"で置き換えます）。タイプミスを修正した後、前回と同じ引数で`cwltool` "
"を実行すると、`cwltool` の出力に、`step_a` "
"の出力が事前にキャッシュされていることと、`step_b` "
"の出力の新しいキャッシュ・エントリーがあることがわかります。また、`step_b` "
"のステータスは、今度は、成功であることに注目してください。"

#: ../../src/topics/troubleshooting.md:59 2a9dbb3ad7564f5aa103349c45ee7925
msgid ""
"In this example the workflow step `step_a` was not re-evaluated as it had"
" been cached, and there was no change in its execution or output. "
"Furthermore, `cwltool` was able to recognize when it had to re-evaluate "
"`step_b` after we fixed the executable name. This technique is useful for"
" troubleshooting your CWL documents and also as a way to prevent "
"`cwltool` to re-evaluate steps unnecessarily."
msgstr ""
"この例では、ワークフローのステップ`step_a` はキャッシュされていたため再実行さ"
"れず、その実行や出力に変化はありませんでした。さらに、`cwltool` "
"は、実行したいコマンド名を修正した後、`step_b` を再実行する必要があることがわ"
"かりました。このテクニックは、CWL文書のトラブルシューティングに役立つだけでな"
"く、`cwltool` が不必要にステップを再実行するのを防ぐ方法としても有効です。"

#: ../../src/topics/using-containers.md:1 7439fe097aa4459ba1e4c0e28fc59b9a
msgid "Using Containers"
msgstr "コンテナの使用"

#: ../../src/topics/using-containers.md:3 eff5c6ac1cad44f9862585daf0a91298
msgid "Running Tools Inside Docker"
msgstr "Dockerの内部でツールを実行する"

#: ../../src/topics/using-containers.md:5 50d1a644bc8c49f78c453e4e0f3c07c8
msgid ""
"[Docker][docker] containers simplify software installation by providing a"
" complete known-good runtime for software and its dependencies.  However,"
" containers are also purposefully isolated from the host system, so in "
"order to run a tool inside a Docker container there is additional work to"
" ensure that input files are available inside the container and output "
"files can be recovered from the container.  A CWL runner can perform this"
" work automatically, allowing you to use Docker to simplify your software"
" management while avoiding the complexity of invoking and managing Docker"
" containers."
msgstr ""
"[Docker][docker]コンテナは、ソフトウェアとその依存関係のための完全な既知の良"
"いランタイムを提供することによって、ソフトウェアのインストールを簡素化します"
"。  しかし、コンテナはホストシステムから意図的に隔離されているため、Dockerコ"
"ンテナ内でツールを実行するには、入力ファイルがコンテナ内で利用可能で、出力フ"
"ァイルがコンテナから回収できることを確認するための追加作業が必要です。  CWLラ"
"ンナーはこの作業を自動的に行うことができるため、Dockerコンテナの呼び出しや管"
"理の複雑さを回避しながら、Dockerを使用してソフトウェア管理を簡素化することが"
"できます。"

#: ../../src/topics/using-containers.md:15 4b0f6cfc8a774c77bfbc99e568af2ece
msgid ""
"One of the responsibilities of the CWL runner is to adjust the paths of "
"input files to reflect the location where they appear inside the "
"container."
msgstr "CWLランナーの役割のひとつに、入力ファイルのパスをコンテナ内のでの配置位置に合"
"わせることがあります。"

#: ../../src/topics/using-containers.md:18 27c02a5d479a420eab7d14888d9fb288
msgid ""
"This example runs a simple Node.js script inside a Docker container which"
" will then print \"Hello World\" to the standard output."
msgstr "この例では、Dockerコンテナ内で簡単なNode.jsスクリプトを実行し、標準出力に「Hello World」と表示します。"

#: ../../src/topics/using-containers.md:21 1a62a93ab20b4f2ca1e13ded3a767dc5
msgid "`docker.cwl`"
msgstr "`docker.cwl`"

#: ../../src/topics/using-containers.md:27 ccc2874840c3476bb714ddf4bdbf0f3e
msgid "`docker-job.yml`"
msgstr "`docker-job.yml`"

#: ../../src/topics/using-containers.md:33 d766b66de4714a5da0cd87ed886cc32f
msgid ""
"Before we run this, let's just break it down and see what some bits do.  "
"Most of this has been explained in previous sections, the only part that "
"is really new is the "
"[`dockerRequirement`](https://w3id.org/cwl/CommandLineTool.html#DockerRequirement)"
" section."
msgstr ""
"これを実行する前に、これを分解して、いくつか細かく何をするのかを見てみましょ"
"う。  この大部分は以前のセクションで説明したもので、本当に新しいのは[`dockerR"
"equirement`](https://w3id.org/cwl/CommandLineTool.html#DockerRequirement) "
"の部分だけです。"

#: ../../src/topics/using-containers.md:44 1f02618ab6254459ae71f72844e3cc18
#, fuzzy
msgid ""
"`baseCommand: node` tells CWL that we will be running this command using "
"the Node Js runtime that is meant for Javascript files. We then need to "
"specify some `hints` for how to find the container we want.  In this case"
" we list just our requirements for the docker container in "
"`DockerRequirements`.  The `dockerPull:` parameter takes the same value "
"that you would pass to a `docker pull` command. That is, the name of the "
"container image (you can even specify the tag, which is good idea for "
"best practices when using containers for reproducible research). In this "
"case we have used a container called `node:slim`."
msgstr ""
"`baseCommand: node` は、Javascript ファイル用の Node Js "
"ランタイムを使用してこのコマンドを実行することを CWL "
"に指示します。次に、必要なコンテナを見つける方法について、`hints` "
"をいくつか指定する必要があります。  この場合、`DockerRequirements` に docker "
"コンテナに関する要件だけを列挙します。  ` dockerPull:` パラメータは、`docker "
"pull` コマンドに渡すのと同じ値を取ります。つまり、コンテナイメージの名前です"
"（タグを指定することも可能で、再現可能な研究にコンテナを使用する際のベストプ"
"ラクティスに適しています）。この場合、`node:slim` "
"というコンテナを使用しました。"

#: ../../src/topics/using-containers.md:52 54cade4978ec463bbb5c0d8c08e27adb
msgid ""
"Create a Javascript file named \"hello.js\" and invoke `cwltool` "
"providing the tool description and the input object on the command line:"
msgstr ""
"Javascriptで \"hello.js \"というファイルを作成し、`cwltool` "
"コマンドラインでツール定義と入力オブジェクトを指定して呼び出します："

#: ../../src/topics/using-containers.md:55 6541d0cd9f6c4c43b8601715cc35e585
msgid "`hello.js`"
msgstr "`hello.js`"

#: ../../src/topics/using-containers.md:69 6abf220b7fa4479394ed33447cdd070e
msgid ""
"Notice the CWL runner has constructed a Docker command line to run the "
"script."
msgstr "CWLランナーがスクリプトを実行するためにDockerコマンドラインを構築していることに注目してください。"

#: ../../src/topics/using-containers.md:72 d2dd89a5edde4f2eab4c2baf0cc78745
msgid ""
"In this example, the path to the script `hello.js` is "
"`/home/me/cwl/user_guide/hello.js` outside the container but "
"`/var/lib/cwl/job369354770_examples/hello.js` inside the container, as "
"reflected in the invocation of the `node` command."
msgstr ""
"この例では、スクリプト`hello.js` のパスは、コンテナの外側では `/home/me/cwl/user_guide/hello.js` "
"が、コンテナの内側では`/var/lib/cwl/job369354770_examples/hello.js` です。これは`node` "
"コマンドの呼び出しに反映されているためです。"

#: ../../src/topics/workflows.md:1 06281a10592d42509566c8fc51f8d4da
msgid "Workflows"
msgstr "ワークフロー"

#: ../../src/topics/workflows.md:3 325a656f9b8e4c1fa6f699cd8c447d00
msgid ""
"A workflow is a CWL processing unit that executes command-line tools, "
"expression tools, or workflows (sub-workflows) as steps. It must have "
"`inputs`, `outputs`, and `steps` defined in the CWL document."
msgstr ""
"Workflowは、CommandLineTool、ExpressionTool、またはWorkflow（サブワークフロー"
"）をステップ として実行する CWL 処理単位です。CWL定義には`inputs` 、`outputs`"
" 、`steps` を定義する必要があります。"

#: ../../src/topics/workflows.md:13 b92275181c9e480da64e660b7aca0745
msgid "CWL workflow."
msgstr "CWLワークフローです。"

#: ../../src/topics/workflows.md:41 be2540315f854b8e9a1d257bcabd78db
msgid ""
"The CWL document `echo-uppercase.cwl` defines a workflow that runs the "
"command-line tool, and the expression tool showed in the earlier "
"examples."
msgstr ""
"CWL定義`echo-uppercase.cwl` は、CommandLineTool、および先の例で示したExpressi"
"onToolを実行するワークフローを定義しています。"

#: ../../src/topics/workflows.md:51 3be900594bb743399854b95baa9ae2f9
msgid "`echo-uppercase.cwl`"
msgstr "`echo-uppercase.cwl`"

#: ../../src/topics/workflows.md:81 5133c4e062bc4e479ce1dc8abbb08107
msgid ""
"A command-line tool or expression tool can also be written directly in "
"the same CWL document as the workflow. For example, we can rewrite the "
"`echo-uppercase.cwl` workflow as a single file:"
msgstr ""
"CommandLineToolやExpressionToolは、Workflowと同じCWL定義に直接記述することも"
"可能です。例えば、`echo-uppercase.cwl` "
"ワークフローを1つのファイルとして書き換えることができます："

#: ../../src/topics/workflows.md:91 83bc2796889f4dccb713764ac1b3c3ad
msgid "`echo-uppercase-single-file.cwl`"
msgstr "`echo-uppercase-single-file.cwl`"

#: ../../src/topics/workflows.md:150 5a9a1dd6ed1f4ca6803f1d235c4fd392
#, fuzzy
msgid ""
"Having separate files helps with modularity and code organization. But it"
" can be helpful writing everything in a single file for development. "
"There are other ways to combine multiple files into a single file (e.g. "
"`cwltool --pack`) discussed further in other sections of this user guide."
msgstr ""
"ファイルを分けることは、モジュール化やコードの整理に役立ちます。しかし、開発"
"のためにすべてを1つのファイルに書いておくと便利なことがあります。複数のファイ"
"ルを1つのファイルにまとめる方法は他にもあります（例：`cwltool --pack` "
"）このユーザーガイドの他のセクションで詳しく説明します。"

#: ../../src/topics/workflows.md:160 277ed30d4b3a4156a4523e8d10e6ce60
#, fuzzy
msgid ""
"For a sub-workflows you need to enable the requirement "
"`SubworkflowFeatureRequirement`. It is covered in another section of this"
" user guide in more detail."
msgstr ""
"サブワークフローでは、Requirement、`SubworkflowFeatureRequirement` を有効にす"
"る必要があります。このユーザーガイドの別のセクションで、より詳しく説明してい"
"ます。"

#: ../../src/topics/workflows.md:165 82818ab17aa4403eb982fd81a14a5865
msgid "Writing Workflows"
msgstr "ワークフローを書く"

#: ../../src/topics/workflows.md:167 3d8b98e8d03548699fadb22198de9b20
msgid ""
"This workflow extracts a java source file from a tar file and then "
"compiles it."
msgstr "このワークフローでは、tarファイルからJavaのソースファイルを取り出し、コンパイルします。"

#: ../../src/topics/workflows.md:170 c61097c695424f7195e8205a23b6ecff
#, fuzzy
msgid "`1st-workflow.cwl`"
msgstr "`1st-workflow.cwl`"

#: ../../src/topics/workflows.md:179 ../../src/topics/workflows.md:180
#: 6660c48f51d94d4fbcc05656e154059e bd2bab6c11614fa983ca8dab1408e1d8
msgid "Visualization of 1st-workflow.cwl"
msgstr "1st-workflow.cwlの可視化"

#: ../../src/topics/workflows.md:180 f0831481a43548039fbc4fd17555af57
#, fuzzy
msgid ""
"[![Visualization of 1st-"
"workflow.cwl](https://view.commonwl.org/graph/png/github.com/common-"
"workflow-"
"language/user_guide/blob/a29e7eae0006660946fc705a310b37a21a7e1edc/_includes/cwl/21"
"-1st-workflow/1st-"
"workflow.cwl)](https://view.commonwl.org/graph/png/github.com/common-"
"workflow-"
"language/user_guide/blob/a29e7eae0006660946fc705a310b37a21a7e1edc/_includes/cwl/21"
"-1st-workflow/1st-workflow.cwl)"
msgstr ""
"[[1st-"
"workflow.cwlを可視化したもの]](https://view.commonwl.org/graph/png/github.com"
"/common-workflow-"
"language/user_guide/blob/a29e7eae0006660946fc705a310b37a21a7e1edc/_includes/cwl/21"
"-1st-workflow/1st-"
"workflow.cwl)](https://view.commonwl.org/graph/png/github.com/common-"
"workflow-"
"language/user_guide/blob/a29e7eae0006660946fc705a310b37a21a7e1edc/_includes/cwl/21"
"-1st-workflow/1st-workflow.cwl)"

#: ../../src/topics/workflows.md:183 5ff059fc8ae6471c8ea86dab7e5a93f5
msgid ""
"Use a YAML or a JSON object in a separate file to describe the input of a"
" run:"
msgstr "Runの入力データを記述するために、別ファイルのYAMLまたはJSONオブジェクトを使用します："

#: ../../src/topics/workflows.md:185 822e5d0a097b4109960d621a72a3c009
msgid "`1st-workflow-job.yml`"
msgstr "`1st-workflow-job.yml`"

#: ../../src/topics/workflows.md:191 4a4db7da861547639524083bf35ccfc0
msgid ""
"Next, create a sample Java file and add it to a tar file to use with the "
"command-line tool."
msgstr "次に、サンプルとなるJavaファイルを作成し、コマンドラインツールで使用するためにtarファイルに追加します。"

#: ../../src/topics/workflows.md:205 ed16b30eaa4747f79b6dd10a19188d8c
msgid "What's going on here?  Let's break it down:"
msgstr "どうなっているのでしょう？  分解してみましょう："

#: ../../src/topics/workflows.md:212 6428bd7bd3be4393bfe5675f8e45ff94
msgid ""
"The `cwlVersion` field indicates the version of the CWL spec used by the "
"document.  The `class` field indicates this document describes a "
"workflow."
msgstr ""
"`cwlVersion` フィールドは、この文書が使用するCWL仕様のバージョンを示します。"
"  ` class` フィールドは、この文書がワークフローを記述していることを示します。"

#: ../../src/topics/workflows.md:221 d6abec8805f649fca668292412263f78
msgid ""
"The `inputs` section describes the inputs of the workflow.  This is a "
"list of input parameters where each parameter consists of an identifier "
"and a data type.  These parameters can be used as sources for input to "
"specific workflows steps."
msgstr ""
"`inputs` セクションでは、ワークフローの入力について記述します。  これは入力パ"
"ラメータのリストであり、各パラメータは識別子とデータ型から構成されます。  こ"
"れらのパラメータは、特定のワークフロー・ステップへの入力として使用できます。"

#: ../../src/topics/workflows.md:233 22bf3e4910ef4f86a2e8f6d5a6cf0d42
msgid ""
"The `outputs` section describes the outputs of the workflow.  This is a "
"list of output parameters where each parameter consists of an identifier "
"and a data type.  The `outputSource` connects the output parameter "
"`classfile` of the `compile` step to the workflow output parameter "
"`compiled_class`."
msgstr ""
"`outputs` セクションでは、ワークフローの出力について記述します。  これは出力"
"パラメータのリストであり、各パラメータは識別子とデータ型から構成されます。  `"
" outputSource` は、`compile` ステップの出力パラメータ`classfile` "
"を、ワークフロー出力パラメータ`compiled_class` とします。"

#: ../../src/topics/workflows.md:248 e0429688fce445da8083e69323e5b020
#, fuzzy
msgid ""
"The `steps` section describes the actual steps of the workflow.  In this "
"example, the first step extracts a file from a tar file, and the second "
"step compiles the file from the first step using the java compiler. "
"Workflow steps are not necessarily run in the order they are listed, "
"instead the order is determined by the dependencies between steps (using "
"`source`).  In addition, workflow steps which do not depend on one "
"another may run in parallel."
msgstr ""
"`steps` セクションでは、ワークフローの実際のステップを説明しています。  "
"この例では、最初のステップで tar ファイルからファイルを抽出し、2 "
"番目のステップで java コンパイラを使用して最初のステップで抽出されたファイル"
"をコンパイルしています。ワークフローのステップは、必ずしもリストされた順序で"
"実行されるわけではなく、ステップ間の依存関係によって順序が決定されます（`sour"
"ce` を使用）。  また、互いに依存しないワークフロー・ステップは、並行して実行"
"されることがあります。"

#: ../../src/topics/workflows.md:256 980f5eada57c4fadbb783838ded1fa0b
#, fuzzy
msgid ""
"The first step, `untar` runs `tar-param.cwl` (described previously in "
"[Parameter References](parameter-references.md)). This tool has two input"
" parameters, `tarfile` and `extractfile` and one output parameter "
"`extracted_file`."
msgstr ""
"最初のステップである`untar` は、`tar-param.cwl` を実行します（[パラメータ参照](parameter-"
"references.md)で以前説明しました）。このツールは、2つの入力パラメータ、`tarfile` と`extractfile` "
"と1つの出力パラメータ`extracted_file` を持ちます。"

#: ../../src/topics/workflows.md:261 3532e165842f4ebb8db0c78208071555
#, fuzzy
msgid ""
"The ``in`` section of the workflow step connects these two input "
"parameters to the inputs of the workflow, `tarball` and "
"`name_of_file_to_extract` using `source`.  This means that when the "
"workflow step is executed, the values assigned to `tarball` and "
"`name_of_file_to_extract` will be used for the parameters `tarfile` and "
"`extractfile` in order to run the tool."
msgstr ""
"ワークフローステップの``in`` "
"セクションは、これらの2つの入力パラメータを、`source` "
"を使用してワークフローの入力である`tarball` および`name_of_file_to_extract` "
"に接続しています。  つまり、ワークフローステップが実行されると、`tarball` "
"と`name_of_file_to_extract` "
"に割り当てられた値が、ツールを実行するために`tarfile` と`extractfile` "
"のパラメータに使用されることになり ます。"

#: ../../src/topics/workflows.md:267 04a4db2f3da94ce29e7999039ee13fde
#, fuzzy
msgid ""
"The `out` section of the workflow step lists the output parameters that "
"are expected from the tool."
msgstr "ワークフローステップの`out` セクションには、ツールから期待される出力パラメータが記載されています。"

#: ../../src/topics/workflows.md:278 2651ee113a3d4b79b138854ebe729f48
#, fuzzy
msgid ""
"The second step `compile` depends on the results from the first step by "
"connecting the input parameter `src` to the output parameter of `untar` "
"using `untar/extracted_file`.  It runs `arguments.cwl` (described "
"previously in [Additional Arguments and Parameters](additional-arguments-"
"and-parameters.md)). The output of this step `classfile` is connected to "
"the `outputs` section for the Workflow, described above."
msgstr ""
"第2ステップ `compile` は、第1ステップの結果に依存し、入力パラメータ`src` "
"を`untar` の出力パラメータに接続し、`untar/extracted_file` を使用します。  "
"これは、`arguments.cwl` (以前に [追加の引数とパラメータ](additional-"
"arguments-and-parameters.md)で説明) "
"を実行します。このステップの出力`classfile` は、前述のワークフローの`outputs`"
" セクションに接続されています。"

#: ../../src/topics/workflows.md:285 177040bf9c0045f2878f42bcdd8cbd2d
msgid "Nested Workflows"
msgstr "ネストされたワークフロー"

#: ../../src/topics/workflows.md:287 e8adc2f7c5ac4464b0711712617b8bbe
msgid ""
"Workflows are ways to combine multiple tools to perform a larger "
"operations. We can also think of a workflow as being a tool itself; a CWL"
" workflow can be used as a step in another CWL workflow, if the workflow "
"engine supports the `SubworkflowFeatureRequirement`:"
msgstr ""
"ワークフローは、複数のツールを組み合わせてより大きな処理を実行するための方法です。ワークフローエンジンが`SubworkflowFeatureRequirement`"
" をサポートしている場合、CWL ワークフローを別の CWL ワークフローのステップとすることができます ："

#: ../../src/topics/workflows.md:297 44d281d99cd944478db98446a984c001
msgid ""
"Here's an example workflow that uses our `1st-workflow.cwl` as a nested "
"workflow:"
msgstr "`1st-workflow.cwl` をネストしたワークフローの例を紹介します："

#: ../../src/topics/workflows.md:300 d7b60ce81ea741ffa08f2c2d9d7cca69
msgid "`nestedworkflows.cwl`"
msgstr "`nestedworkflows.cwl`"

#: ../../src/topics/workflows.md:309 a5b7a1ab16e34bda8744ffadacdda3e8
msgid ""
"This two-step workflow starts with the `create-tar` step which is "
"connected to the `compile` step in orange; `compile` is another workflow,"
" diagrammed on the right. In purple we see the fixed string "
"`\"Hello.java\"` being supplied as the `name_of_file_to_extract`."
msgstr ""
"この2ステップのワークフローは、`create-tar` ステップから始まり、オレンジ色の`compile` "
"ステップに接続されています。`compile` は、右図にある別のワークフローです。紫色では、固定文字列`\"Hello.java\"` "
"が`name_of_file_to_extract` として与えられているのがわかります。"

#: ../../src/topics/workflows.md:314 8654f2d86b644609aaa5b9b73db30bda
msgid ""
"<a href=\"https://view.commonwl.org/workflows/github.com/common-workflow-"
"language/user_guide/blob/main/_includes/cwl/workflows/nestedworkflows.cwl\"><img"
" src=\"https://view.commonwl.org/graph/svg/github.com/common-workflow-"
"language/user_guide/blob/main/_includes/cwl/workflows/nestedworkflows.cwl\""
" alt=\"Visualization of nestedworkflows.cwl\" /></a> <a "
"href=\"https://view.commonwl.org/workflows/github.com/common-workflow-"
"language/user_guide/blob/main/_includes/cwl/workflows/1st-"
"workflow.cwl\"><img src=\"https://view.commonwl.org/graph/svg/github.com"
"/common-workflow-language/user_guide/blob/main/_includes/cwl/workflows"
"/1st-workflow.cwl\" alt=\"Visualization of 1st-workflow.cwl\" /></a>"
msgstr ""
"<a href=\"https://view.commonwl.org/workflows/github.com/"
"common-workflow-language/user_guide/blob/main/_includes/cwl/workflows/"
"nestedworkflows.cwl\"><img src=\"https://view.commonwl.org/graph/svg/github."
"com/common-workflow-language/user_guide/blob/main/_includes/cwl/workflows/"
"nestedworkflows.cwl\" alt=\"Visualization of nestedworkflows.cwl\" /></a> <a "
"href=\"https://view.commonwl.org/workflows/github.com/"
"common-workflow-language/user_guide/blob/main/_includes/cwl/workflows/1st-"
"workflow.cwl\"><img src=\"https://view.commonwl.org/graph/svg/github.com/"
"common-workflow-language/user_guide/blob/main/_includes/cwl/workflows/1st-"
"workflow.cwl\" alt=\"Visualization of 1st-workflow.cwl\" /></a>"

#: ../../src/topics/workflows.md:322 7ce847ab54224452b6425de2a55ec893
#, fuzzy
msgid ""
"A CWL `Workflow` can be used as a `step` just like a `CommandLineTool`, "
"its CWL file is included with `run`. The workflow inputs (`tarball` and "
"`name_of_file_to_extract`) and outputs (`compiled_class`) then can be "
"mapped to become the step's input/outputs."
msgstr ""
"CWL`Workflow` は、`CommandLineTool` を`step` として使用することができ、その CWL ファイルは`run` "
"に記述されます。ワークフローの入力（`tarball` および`name_of_file_to_extract` "
"）と出力（`compiled_class` ）は、ステップの入力/出力になるようにマッピングすることができます。"

#: ../../src/topics/workflows.md:336 d621821d2c1b403cb7415b381dd883f6
#, fuzzy
msgid ""
"Our `1st-workflow.cwl` was parameterized with workflow inputs, so when "
"running it we had to provide a job file to denote the tar file and "
"`*.java` filename. This is generally best-practice, as it means it can be"
" reused in multiple parent workflows, or even in multiple steps within "
"the same workflow."
msgstr ""
"`1st-workflow.cwl` はワークフロー入力でパラメータ化されているため、"
"実行時には tar ファイルと`*.java` ファイル名を示すジョブファイルを提供する必"
"要がありました。これは、複数の親ワークフローや、同じワークフロー内の複数のス"
"テップで再利用できることを意味するため、一般的にベストプラクティスです。"

#: ../../src/topics/workflows.md:341 358c612f175241f7bf148a04d75e00c9
#, fuzzy
msgid ""
"Here we use `default:` to hard-code `\"Hello.java\"` as the "
"`name_of_file_to_extract` input, however our workflow also requires a tar"
" file at `tarball`, which we will prepare in the `create-tar` step. At "
"this point it is probably a good idea to refactor `1st-workflow.cwl` to "
"have more specific input/output names, as those also appear in its usage "
"as a tool."
msgstr ""
"ここでは、`default:` を使って、`\"Hello.java\"` を`name_of_file_to_extract` "
"input として固定しています。しかし、このワークフローでは`tarball` の tar "
"ファイルも必要です。これは`create-tar` ステップで用意します。この時点で"
"、`1st-workflow.cwl` 、より具体的な入力/出力名を持つようにリファクタリングす"
"るのがよいでしょう。これらは、ツールとしての使用法にも現れるからです。"

#: ../../src/topics/workflows.md:347 c6297c120e004ae8b52d5b519fbc04d2
#, fuzzy
msgid ""
"It is also possible to do a less generic approach and avoid external "
"dependencies in the job file. So in this workflow we can generate a hard-"
"coded `Hello.java` file using the previously mentioned "
"`InitialWorkDirRequirement` requirement, before adding it to a tar file."
msgstr ""
"また、あまり一般的でない方法で、ジョブファイルの外部依存を回避することも可能です。そこで、このワークフローでは、先に述べた`InitialWorkDirRequirement`"
" の要件を使用して、ハードコードされた`Hello.java` ファイルを生成してから、それを tar ファイルに追加することができます。"

#: ../../src/topics/workflows.md:366 66f76677f4ce42baa8a8813410ea5aee
#, fuzzy
msgid ""
"In this case our step can assume `Hello.java` rather than be "
"parameterized, so we can use hardcoded values `hello.tar` and "
"`Hello.java` in a `baseCommand` and the resulting `outputs`:"
msgstr ""
"この場合、ステップではパラメータ化するのではなく、`Hello.java` を想定することができるので、`baseCommand` "
"で直接書かれた値`hello.tar` と`Hello.java` を使用でき、結果として`outputs` が得られます："

#: ../../src/topics/workflows.md:383 a8ccb9f9ab4448e087ea8448d620d33c
#, fuzzy
msgid ""
"Did you notice that we didn't split out the `tar --create` tool to a "
"separate file, but rather embedded it within the CWL Workflow file? This "
"is generally not best practice, as the tool then can't be reused. The "
"reason for doing it in this case is because the command line is hard-"
"coded with filenames that only make sense within this workflow."
msgstr ""
"`tar --create` ツールを別のファイルに分割せず、CWL Workflow "
"定義の中に埋め込んだことにお気づきでしょうか。これは一般的にベストプラクティスではありません。なぜなら、そのツールを再利用できないからです。このケースでそれを行う理由は、コマンドラインに、このワークフロー定義内でしか意味をなさないファイル名がハードコーディングされているためです。"

#: ../../src/topics/workflows.md:389 afe43b9e92e949a589f493293eff2903
msgid ""
"In this example we had to prepare a tar file outside, but only because "
"our inner workflow was designed to take that as an input. A better "
"refactoring of the inner workflow would be to take a list of Java files "
"to compile, which would simplify its usage as a tool step in other "
"workflows."
msgstr ""
"この例では、外部にtarファイルを用意する必要がありました。これは内部ワークフロ"
"ーがそれを入力として受け取るように設計されているためです。内部ワークフローの"
"リファクタリングとしては、コンパイルするjavaファイルのリストを受け取るように"
"すれば、他のワークフローにおいてもツールステップとしての使い方が簡単になりま"
"す。"

#: ../../src/topics/workflows.md:394 239eef3a740d42a69208a8f4e716d2b3
msgid ""
"Nested workflows can be a powerful feature to generate higher-level "
"functional and reusable workflow units - but just like for creating a CWL"
" Tool description, care must be taken to improve its usability in "
"multiple workflows."
msgstr ""
"ネストされたワークフローは、より高機能で再利用可能なワークフローユニットを生"
"成する強力な機能ですが、CWLツール定義の作成と同様に、複数のワークフローでの使"
"い勝手を向上させるための配慮が必要です。"

#: ../../src/topics/workflows.md:398 96d1ca78cc324f40b61c4b7330447db2
msgid "Scattering Steps"
msgstr "Scatter ステップ"

#: ../../src/topics/workflows.md:400 eab4437bf9994b649954221375e3dd6d
#, fuzzy
msgid ""
"Now that we know how to write workflows, we can start utilizing the "
"`ScatterFeatureRequirement`. This feature tells the runner that you wish "
"to run a tool or workflow multiple times over a list of inputs. The "
"workflow then takes the input(s) as an array and will run the specified "
"step(s) on each element of the array as if it were a single input. This "
"allows you to run the same workflow on multiple inputs without having to "
"generate many different commands or input yaml files."
msgstr ""
"ワークフローの書き方がわかったので、`ScatterFeatureRequirement` を利用し始め"
"ることができます。この機能は、ツールやワークフローを入力のリストに対して複数"
"回実行したいことをランナーに伝えます。ワークフローは、入力を配列として受け取"
"り、配列の各要素に対して、あたかも1つの入力であるかのように、指定されたステッ"
"プを実行します。これにより、多くの異なるコマンドや入力 yaml ファイルを生成す"
"ることなく、複数の入力に対して同じワークフローを実行することができます。"

#: ../../src/topics/workflows.md:411 c245ba0ae2074fa388ad6c35695033c8
msgid ""
"The most common reason a new user might want to use scatter is to perform"
" the same analysis on different samples. Let's start with a simple "
"workflow that calls our first example (`hello_world.cwl`) and takes an "
"array of strings as input to the workflow:"
msgstr ""
"新規ユーザーがscatterを使いたいと思う最も一般的な理由は、異なるサンプルに対して同じ分析を実行することです。最初の例（`hello_world.cwl`"
" ）を呼び出し、ワークフローへの入力として文字列の配列を受け取る、簡単なワークフローから始めましょう："

#: ../../src/topics/workflows.md:415 83537938ce1244709f9b72269b048d63
msgid "`scatter-workflow.cwl`"
msgstr "`scatter-workflow.cwl`"

#: ../../src/topics/workflows.md:421 4f507925766e48ae8f713d56051a5e29
msgid ""
"Aside from the `requirements` section including "
"`ScatterFeatureRequirement`, what is going on here?"
msgstr "`requirements` セクションの`ScatterFeatureRequirement` などを含めて、ここはどうなっているのでしょうか？"

#: ../../src/topics/workflows.md:429 ccbbba3189404241a44736c970249b84
msgid ""
"First of all, notice that the main workflow level input here requires an "
"array of strings."
msgstr "まず、ここでのメインワークフローの入力には、文字列の配列が必要であることに注"
"目してください。"

#: ../../src/topics/workflows.md:441 31eff13bb8334fc7b6d48ef6c5b1ce33
msgid ""
"Here we've added a new field to the step `echo` called `scatter`. This "
"field tells the runner that we'd like to scatter over this input for this"
" particular step. Note that the input name listed after scatter is the "
"one of the step's input, not a workflow level input."
msgstr ""
"ここでは、ステップ`echo` に、`scatter` という新しいフィールドを追加しました。"
"このフィールドは、CWLランナーに、このステップの入力を分散して実行したいことを"
"伝えます。scatterの後に記載されている入力名は、ワークフローレベルの入力名では"
"なく、ステップの入力名であることに注意してください。"

#: ../../src/topics/workflows.md:445 0d5cf8b82dbd47f2abd1ed16b9b3eb61
#, fuzzy
msgid ""
"For our first scatter, it's as simple as that! Since our tool doesn't "
"collect any outputs, we still use `outputs: []` in our workflow, but if "
"you expect that the final output of your workflow will now have multiple "
"outputs to collect, be sure to update that to an array type as well!"
msgstr ""
"最初のスキャッターでは、これと同じくらい簡単です！このツールは出力を回収しないので、`outputs: []` "
"を使います。しかし、ワークフローの最終出力に収集する複数の出力があることが予想される場合、それを配列型に更新するようにしてください！"

#: ../../src/topics/workflows.md:450 38b7042a270043ba82c11cf2e758f0c8
msgid "Using the following input file:"
msgstr "以下の入力ファイルを使用します："

#: ../../src/topics/workflows.md:452 b3fc75c262fe4a3a8e8bfba1abb07b3d
msgid "`scatter-job.yml`"
msgstr "`scatter-job.yml`"

#: ../../src/topics/workflows.md:458 f9fa7046c89c417db51dc7c8a026fd5d
msgid ""
"As a reminder, [`hello_world.cwl`](../introduction/quick-start.md) simply"
" calls the command `echo` on a message. If we invoke `cwltool scatter-"
"workflow.cwl scatter-job.yml` on the command line:"
msgstr ""
"注意点として、[`hello_world.cwl`](../introduction/quick-start.md) "
"は単にメッセージに対して`echo` というコマンドを呼び出します。"
"コマンドラインで `cwltool scatter-workflow.cwl scatter-job.yml` "
"を呼び出します："

#: ../../src/topics/workflows.md:466 b6a33410ee9a45d7bf7b2ba56f786f8f
msgid ""
"You can see that the workflow calls echo multiple times on each element "
"of our `message_array`. Ok, so how about if we want to scatter over two "
"steps in a workflow?"
msgstr ""
"ワークフローは、`message_array` の各要素毎に、echo "
"を呼び出していることがわかります。では、ワークフローの2つのステップに分散させたい場合はどうでしょうか？"

#: ../../src/topics/workflows.md:469 99b5c8a845ab4beb8524a69c051e2d42
msgid ""
"Let's perform a simple echo like above, but capturing `stdout` by adding "
"the following lines instead of `outputs: []`"
msgstr "上記のような簡単なエコーを実行します、`outputs: []`の代わりに次の行を追加して`stdout` をキャプチャしてみましょう"

#: ../../src/topics/workflows.md:472 97bf58937d3f4e98af702e3c1a418992
msgid "`hello_world_to_stdout.cwl`"
msgstr "`hello_world_to_stdout.cwl`"

#: ../../src/topics/workflows.md:480 173bd28708834f11a2a1366b579b7ad7
msgid ""
"And add a second step that uses `wc` to count the characters in each "
"file. See the tool below:"
msgstr "そして、`wc` を使って各ファイルの文字数をカウントする第2ステップを追加します。以下のツールを見てください："

#: ../../src/topics/workflows.md:483 4afccfe982ff4be2be96cbe5889e5014
msgid "`wc-tool.cwl`"
msgstr "`wc-tool.cwl`"

#: ../../src/topics/workflows.md:489 63595d35dded4911aab0be3a165eec0c
#, fuzzy
msgid ""
"Now, how do we incorporate scatter? Remember the scatter field is under "
"each step:"
msgstr "さて、スキャッターはどのように取り入れるのでしょうか？スキャッターフィールドは各ステップの下にあることを思い出してください："

#: ../../src/topics/workflows.md:491 a7f96ec6e4f24c62ac0f5b6edcc9734b
#, fuzzy
msgid "`scatter-two-steps.cwl`"
msgstr "`scatter-two-steps.cwl`"

#: ../../src/topics/workflows.md:497 122452b7d7114c3fa53cbea286703023
#, fuzzy
msgid ""
"Here we have placed the scatter field under each step. This is fine for "
"this example since it runs quickly, but if you're running many samples "
"for a more complex workflow, you may wish to consider an alternative. "
"Here we are running scatter on each step independently, but since the "
"second step is not dependent on the first step completing all languages, "
"we aren't using the scatter functionality efficiently. The second step "
"expects an array as input from the first step, so it will wait until "
"everything in step one is finished before doing anything. Pretend that "
"`echo Hello World!` takes 1 minute to perform, `wc -c` on the output "
"takes 3 minutes and that `echo Hallo welt!` takes 5 minutes to perform, "
"and `wc` on that output takes 3 minutes. Even though `echo Hello World!` "
"could finish in 4 minutes, it will actually finish in 8 minutes because "
"the first step must wait on `echo Hallo welt!`. You can see how this "
"might not scale well."
msgstr ""
"ここでは、各ステップの下にscatterフィールドを配置しました。この例では素早く実"
"行されるので問題ありませんが、より複雑なワークフローのために多くのサンプルを"
"実行する場合は、別の方法を検討することをお勧めします。ここでは、各ステップで"
"独立してscatterを実行していますが、2番目のステップはすべての言語を完了する最"
"初のステップに依存していないため、scatter機能を効率的に使用することはできませ"
"ん。第2ステップは第1ステップからの入力として配列を期待するので、何かをする前"
"に第1ステップのすべてが終了するまで待つことになります。`echo Hello World!` "
"の実行に1分、出力の`wc -c` に3分、`echo Hallo welt!` の実行に5分、出力の`wc` "
"に3分かかると仮定してください。`echo Hello World!` "
"が4分で終了しても、最初のステップは`echo Hallo welt!` を待つ必要があるので、"
"実際には8分で終了することになります。このように、うまくスケールしないことがお"
"わかりいただけると思います。"

#: ../../src/topics/workflows.md:509 85dd63daf04546b78bdcb68c1d985fa9
msgid ""
"Ok, so how do we scatter on steps that can proceed independent of other "
"samples? Remember from [Nested Workflows](#nested-workflows), that we can"
" make an entire workflow a single step in another workflow! Convert our "
"two-step workflow to a single step subworkflow:"
msgstr ""
"では、他のサンプルと独立して進行できるステップを分散させるにはどうすればいいのでしょうか？[Nested Workflows](#nested-"
"workflows)で、ワークフロー全体を別のワークフローの1ステップにすることができることを思い出しましょう！2ステップのワークフローを1ステップのサブワークフローに変換してみましょう："

#: ../../src/topics/workflows.md:513 fac138ba275745898b763a7d719a8235
msgid "`scatter-nested-workflow.cwl`"
msgstr "`scatter-nested-workflow.cwl`"

#: ../../src/topics/workflows.md:519 508ef2240879445594b0f262ed11a01d
msgid ""
"Now the scatter acts on a single step, but that step consists of two "
"steps so each step is performed in parallel."
msgstr "今、scatter は1つのステップに作用しますが、そのステップは2つのステップで構成"
"されているので、各ステップは並行して実行されます。"

#: ../../src/topics/workflows.md:522 b0bf01dad1234a1db3c87b10953e42ef
msgid "Conditional Workflows"
msgstr "条件分岐ワークフロー"

#: ../../src/topics/workflows.md:524 8d933ed1ec6e408589f781e3a425b869
msgid ""
"This workflow contains a conditional step and is executed based on the "
"input. This allows workflows to skip additional steps based on input "
"parameters given at the start of the program or by previous steps."
msgstr ""
"このワークフローは、条件付きステップを含み、入力に基づき実行されます。これに"
"より、ワークフローは、プログラムの開始時に与えられた入力パラメータや以前のス"
"テップによって、追加のステップをスキップすることができます。"

#: ../../src/topics/workflows.md:527 9ac7b4f71621411da9a4ca3bc277dcb0
msgid "`conditional-workflow.cwl`"
msgstr "`conditional-workflow.cwl`"

#: ../../src/topics/workflows.md:566 4a4a2b2b99b44d449adb246cebce0a26
msgid ""
"The first thing you'll notice is that this workflow is only compatible "
"for version 1.2 or greater of the CWL standards."
msgstr "まず、このワークフローはCWL仕様のバージョン1."
"2以降から対応しているがわかります。"

#: ../../src/topics/workflows.md:573 4742fe09a4264fb8be6f092519de5d72
#, fuzzy
msgid ""
"The first step of the workflow (step1) contains two input properties and "
"will execute foo.cwl when the conditions are met. The new property `when`"
" is where the condition validation takes place. In this case only when "
"`in1`  from the workflow contains a value `< 1` this step will be "
"executed."
msgstr ""
"ワークフローの最初のステップ（step1）には2つの入力プロパティがあり、条件を満たしたときにfoo.cwlを実行します。新しいプロパティ`when`"
" は、条件の検証が行われる場所です。この場合、ワークフローから`in1` に値`&lt; 1` が含まれるときのみ、このステップが実行されます。"

#: ../../src/topics/workflows.md:587 b33ecd2b8af042feb08687e32d4b6bbf
msgid ""
"Using the following command `cwltool cond-wf-003.1.cwl --val 0` the value"
" will pass the first conditional step and will therefore be executed and "
"is shown in the log by `INFO [step step1] start` whereas the second step "
"is skipped as indicated by `INFO [step step2] will be skipped`."
msgstr ""
"次のコマンド`cwltool cond-wf-003.1.cwl --val 0` を実行します。この値(val)は最"
"初の条件ステップを通過するため実行され、ログには`INFO [step step1] start` "
"で示されています。一方、2番目のステップは`INFO [step step2] will be skipped` "
"で示されているようにスキップされ ます。"

#: ../../src/topics/workflows.md:607 7cd80b31a94543358ece7a2d413adce9
msgid ""
"When a value of 3 is given the first conditional step will not be "
"executed but the second step will `cwltool cond-wf-003.1.cwl --val 3`."
msgstr ""
"`cwltool cond-wf-003.1.cwl --val 3`のように値(val)として3が与えられた場合、最"
"初の条件ステップは実行されませんが、2番目の条件ステップは実行されます."

#: ../../src/topics/workflows.md:627 9679e32f65e0482a8b083387e4a18c1f
msgid ""
"If no conditions are met for example when using `--val 2` the workflow "
"will raise a permanentFail."
msgstr "`--val 2` を使用した場合など、条件を満たさない場合は、ワークフローはpermanent"
"Failを発生させ、失敗となります。"

#: ../../src/topics/yaml-guide.md:1 4fa76441f95d45fab76ab7eef8d7d4d2
msgid "YAML Guide"
msgstr "YAMLガイド"

#: ../../src/topics/yaml-guide.md:6 705765787eb84ecaae004194225924cb
msgid ""
"[YAML][yaml] is a file format designed to be readable by both computers "
"and humans. This guide introduces the features of YAML that are relevant "
"when writing CWL descriptions and input parameter files."
msgstr ""
"[YAML][yaml]は、コンピュータと人間の両方が読むことができるように設計されたフ"
"ァイル形式です。本ガイドでは、CWL定義や入力パラメータファイルを書く際に関連す"
"るYAMLの機能を紹介します。"

#: ../../src/topics/yaml-guide.md:13 cb243f6ab11f48ffb5c91945c4e0d101
msgid "You can skip this section if you are already comfortable with YAML."
msgstr "すでにYAMLに慣れている方は、このセクションを読み飛ばしてもかまいません。"

#: ../../src/topics/yaml-guide.md:16 cfc95d15e33a492f842649f92ced941d
msgid "Contents"
msgstr "目次"

#: ../../src/topics/yaml-guide.md:18 f618d44d202f4c2ea6ff72a1dca2c659
msgid "[Key-Value Pairs](#key-value-pairs)"
msgstr "[キーバリューペア](#key-value-pairs)"

#: ../../src/topics/yaml-guide.md:19 36bfa6ed40c54bd99826bedff12c759d
msgid "[Comments](#comments)"
msgstr "[コメント](#comments)"

#: ../../src/topics/yaml-guide.md:20 61913753eb0c4c728889b47f1110be24
msgid "[Maps](#maps)"
msgstr "[マップ](#maps)"

#: ../../src/topics/yaml-guide.md:21 0de824a05eea46209aafa6f9e2e8623c
msgid "[Arrays](#arrays)"
msgstr "[配列](#arrays)"

#: ../../src/topics/yaml-guide.md:22 95627bc476b3415ca4d77246125137d2
msgid "[JSON Style](#json-style)"
msgstr "[JSON 形式](#json-style)"

#: ../../src/topics/yaml-guide.md:24 3f64a6d33d9a4c22a8a839a8def82686
msgid "Key-Value Pairs"
msgstr "キーバリューペア"

#: ../../src/topics/yaml-guide.md:26 2f74f6eaa8d84dc9b4d0a166844dedbe
msgid ""
"Fundamentally, a file written in YAML consists of a set of _key-value "
"pairs_. Each pair is written as `key: value`, where whitespace after the "
"`:` is required. Key names in CWL files should not contain whitespace - "
"[_camelCase_][camelCase] is used for multi-word key names that have "
"special meaning in the CWL specification and underscored key names "
"otherwise. For example:"
msgstr ""
"基本的に、YAML で書かれたファイルは_キーと値のペア_ のセットで構成されています。各ペアは`key: value` として記述され、`:` "
"の後に空白が必要です。CWLファイルのキー名には、空白を含めるべきではありません。[_camelCase_][camelCase] "
"は、CWL仕様で特別な意味を持つ複数語のキー名、それ以外はアンダースコアのキー名として使用します。例えば："

#: ../../src/topics/yaml-guide.md:42 514365e59d9648deb896e2068d967a64
msgid ""
"The YAML above defines four keys - `first_name`, `last_name`, "
"`age_years`, and `home` - with their four respective values. Values can "
"be character strings, numeric (integer, floating point, or scientific "
"representation), Boolean (`true` or `false`), or more complex nested "
"types (see below)."
msgstr ""
"上記のYAMLは4つのキー -`first_name`,`last_name`,`age_years`, `home` - 及びそ"
"れぞれの値を定義しています。値は、文字列、数値（整数、浮動小数点、科学的表現"
"）、ブール値（`true` または`false` "
"）、またはより複雑な入れ子型（下記参照）にすることができます。"

#: ../../src/topics/yaml-guide.md:51 6939eb7e783744d7bcf75ea0a7cae129
msgid ""
"Values may be wrapped in quotation marks, but be aware that this may "
"change the way that they are interpreted i.e. `\"1234\"` will be treated "
"as a character string , while `1234` will be treated as an integer. This "
"distinction can be important, for example when describing parameters to a"
" command: in CWL all parts of `baseCommand` must be strings so, if you "
"want to specify a fixed numeric value to a command, make sure that you "
"wrap that numeric value in quotes: `baseCommand: [echo, \"42\"]`."
msgstr ""
"値は引用符で括ることができますが、意味が変わってきます。例えば、`\"1234\"` "
"は文字列として扱われ、`1234` は整数値として扱われます。CWLでは、`baseCommand`"
" のすべての部分が文字列でなければならないので、コマンドに固定した数値を指定す"
"る場合は、その数値を引用符で囲むようにしてください：[echo, \"42\"]`."

#: ../../src/topics/yaml-guide.md:61 96e1776b09e840ebbc9b4b7e01da0e43
msgid "Comments"
msgstr "コメント"

#: ../../src/topics/yaml-guide.md:63 8b17f7557c3540b2b0d0beca0fe4ebc7
msgid ""
"You may use `#` to add comments to your CWL and parameter files. Any "
"characters to the right of ` #` will be ignored by the program "
"interpreting the YAML. For example:"
msgstr ""
"`#` を使うと、CWL定義や入力パラメータファイルにコメントを追加することができま"
"す。` #` の右側にある文字は、YAML "
"を解釈するプログラムによって無視されます。たとえば、次のようになります："

#: ../../src/topics/yaml-guide.md:76 13da997c82c04023a4b7bb36b76e969d
msgid ""
"If there is anything on the line before the comment, be sure to add at "
"least one space before the `#`!"
msgstr "同じ行の中でコメントの前に何かある場合は、必ず`#` "
"の前に少なくとも1つのスペースを追加してください！"

#: ../../src/topics/yaml-guide.md:79 b9fc191166a64450b64a8182adabad75
msgid "Maps"
msgstr "マップ"

#: ../../src/topics/yaml-guide.md:81 aedf8c4f615845ad91a7947217005d6e
#, fuzzy
msgid ""
"When describing a tool or workflow with CWL, it is usually necessary to "
"construct more complex, nested representations. Referred to as _maps_, "
"these hierarchical structures are described in YAML by providing "
"additional key-value pairs as the value of any key. These pairs "
"(sometimes referred to as \"children\") are written on new lines under "
"the key to which they belong (the \"parent\"), and should be indented "
"with two spaces (⇥tab characters are not allowed). For example:"
msgstr ""
"CWLでツールやワークフローを定義する場合、通常、より複雑で入れ子の表現を構築す"
"る必要があります。_maps_ と呼ばれるこれらの階層構造は、キーの値として追加のキ"
"ーと値のペアを提供することでYAMLで記述されます。これらのペア（「子」と呼ばれ"
"ることもあります）は、属するキー（「親」）の下の新しい行に書かれ、2つのスペー"
"スでインデントされます（⇥タブ文字は許可されていません）。例えば、次のようにな"
"ります："

#: ../../src/topics/yaml-guide.md:104 f0f1f414f74342a89065ba5ded8668e5
#, fuzzy
msgid ""
"The YAML above illustrates how to build up complex nested object "
"descriptions relatively quickly. The `inputs` map contains a single key, "
"`example_flag`, which itself contains two keys, `type` and "
"`inputBinding`, while one of these children, `inputBinding`, contains a "
"further two key-value pairs (`position` and `prefix`). See the "
"[Arrays](#arrays) section below for more information about providing "
"multiple values/key-value pairs for a single key. For comparison with the"
" example YAML above, here is a graphical representation of the `inputs` "
"object it describes."
msgstr ""
"上記のYAMLは、複雑なネストされたオブジェクトの記述を比較的素早く構築する方法"
"を示しています。`inputs` マップは単一のキー、`example_flag` "
"を含み、それ自体が2つのキー、`type` と`inputBinding` "
"を含み、これらの子の1つ、`inputBinding` はさらに2つのキーと値のペア "
"(`position` と`prefix`) を含みます。1つのキーに対して複数の値/キーバリューペ"
"アを提供することについての詳細は、以下の[配列](#arrays)のセクションを参照して"
"ください。上記のYAMLの例と比較するために、`inputs` "
"オブジェクトを図式化したものを示します。"

#: ../../src/topics/yaml-guide.md:127 965405e2a45a4cbb8f227bc8ceeb05df
#, fuzzy
msgid "Arrays"
msgstr "配列"

#: ../../src/topics/yaml-guide.md:129 5aca9a90fb6149529ed717992746a2f3
#, fuzzy
msgid ""
"In certain circumstances, it is necessary to provide multiple values or "
"objects for a single key. As we've already seen in the [Maps](#maps) "
"section above, more than one key-value pair can be mapped to a single "
"key. However, it is also possible to define multiple values for a key "
"without having to provide a unique key for each value. We can achieve "
"this with an _array_, where each value is defined on its own line and "
"preceded by `-`. For example:"
msgstr ""
"ある状況下では、1つのキーに対して複数の値やオブジェクトを提供する必要がありま"
"す。上記の[Maps](#maps)のセクションですでに見たように、1つのキーに複数のキー"
"と値のペアをマッピングすることができます。しかし、各値にユニークなキーを用意"
"しなくても、キーに対して複数の値を定義することも可能です。この場合、_array_ "
"を用いて、各値を独自の行で定義し、その前に`-` "
"を置くことで実現できます。例えば、次のようになります："

#: ../../src/topics/yaml-guide.md:146 d1c9e72e004b4fb4a6efb7748a15ab6f
#, fuzzy
msgid "and a more complex example combining maps and arrays:"
msgstr "と、マップと配列を組み合わせたより複雑な例です："

#: ../../src/topics/yaml-guide.md:167 9a3d6879404745a48cd394bf86865dbc
msgid "JSON Style"
msgstr "JSON形式"

#: ../../src/topics/yaml-guide.md:169 6a7cca0339794e679329b00d89e29d2b
msgid ""
"YAML is based on [JavaScript Object Notation (JSON)][json]. Maps and "
"arrays can also be defined in YAML using the native JSON syntax. For "
"example:"
msgstr ""
"YAMLは[JavaScript Object Notation "
"(JSON)][json]に基づいています。マップと配列は、JSON構文を使ってYAMLで定義することもできます。例えば:"

#: ../../src/topics/yaml-guide.md:177 d8feed2d36d04fe283b9de9784d91941
#, fuzzy
msgid "and:"
msgstr "と："

#: ../../src/topics/yaml-guide.md:184 5156ad32791048f8ace51475d7689575
#, fuzzy
msgid ""
"Native JSON can be useful in indicating where a field is intentionally "
"left empty (such as `[]` for an empty array), as well as where it makes "
"more sense for the values to be located on the same line (For example, "
"when providing option flags and their values in a shell command). "
"However, as the second example above shows, it can severely affect the "
"readability of a YAML file, and should be used sparingly."
msgstr ""
"ネイティブ JSON は、フィールドが意図的に空のままになっている場所 (空の配列を表す`[]` など) "
"や、値が同じ行にあることがより理にかなっている場所 (たとえば、シェルコマンドでオプションフラグとその値を提供する場合) "
"を示すのに便利なことがあります。しかし、上の2番目の例が示すように、YAMLファイルの可読性に深刻な影響を与える可能性があるので、控えめに使用する必要があります。"

#: ../../src/topics/yaml-guide.md:194 ce49f80e6fc0498b8ad298fb1f0268f3
msgid "Reference"
msgstr "リファレンス"

#: ../../src/topics/yaml-guide.md:196 180d261392a644fcb8ff47d7a4a160c0
#, fuzzy
msgid ""
"The [Learn YAML in Y Minutes][yaml-y-mins] reference was very helpful for"
" us while we wrote this guide, though it also covers features that are "
"not valid in CWL."
msgstr ""
"[Learn YAML in Y Minutes][yaml-y-mins] "
"リファレンスは、CWLでは有効でない機能もカバーしていますが、このガイドを書く間、私たちにとって非常に役に立ちました。"

#: ../../src/tutorials.md:1 d682035afebf4c128755bd4e58780dd2
msgid "Tutorials"
msgstr "チュートリアル"

#: ../../src/tutorials.md:5 d9adeab63ec54084bc41fb90f264d3ae
msgid ""
"This is a list of tutorials provided by the CWL community. Use the `Edit "
"this page` link in the menu if you would like to add another tutorial to "
"the list."
msgstr ""
"これは、CWL コミュニティによって提供されたチュートリアルのリストです。リストに他のチュートリアルを追加したい場合は、メニューの`Edit "
"this page` リンクを使用してください。"

#: ../../src/tutorials.md:7 23c81edb650b4f86a60c5e0bcedeac1d
msgid "Beginner Tutorials"
msgstr "初心者向けチュートリアル"

#: ../../src/tutorials.md:9 87ddaa1e5f57445c8f13803722aa146e
msgid ""
"[Introduction to Workflows with Common Workflow Language: For "
"Contributors.](https://carpentries-incubator.github.io/cwl-novice-"
"tutorial/)"
msgstr ""
"[Common Workflow Languageによるワークフロー入門：コントリビューターのために](https://carpentries-"
"incubator.github.io/cwl-novice-tutorial/)"

#: ../../src/tutorials.md:11 b8ee193ba533498db6263e0f5f4ec45f
msgid "Advanced Tutorials"
msgstr "上級者向けチュートリアル"

#: ../../src/tutorials.md:13 67c4b3923fce46fdab025495125c91d4
msgid "[Typescript in CWL](https://github.com/umccr/cwl-ica/wiki/TypeScript)"
msgstr "[CWLでのTypeScript](https://github.com/umccr/cwl-ica/wiki/TypeScript)"

#: ../../src/tutorials.md:15 e640316669104239970794191b6da38b
msgid "Bioinformatics Tutorials"
msgstr "バイオインフォマティクス・チュートリアル"

#: ../../src/tutorials.md:17 efe94af44b874f9b81b245fbdee43f7f
msgid "[rnaseq with CWL](https://arvados.github.io/rnaseq-cwl-training/)"
msgstr "[CWLでrnaseq](https://arvados.github.io/rnaseq-cwl-training/)"

#~ msgid "In CWL, everything must be directly stated."
#~ msgstr "CWLでは、すべてを直接的に記述する必要があります。。"

#~ msgid "Optional Inputs 💯"
#~ msgstr "オプション入力 💯"

#~ msgid "Enum Inputs ⚜️"
#~ msgstr "列挙型入力 ⚜️"

#~ msgid "Record Inputs 📀"
#~ msgstr "レコード入力 📀"

#~ msgid "Debug JavaScript Expressions"
#~ msgstr "JavaScriptの式をデバッグする"

#~ msgid ""
#~ "The FAIR principles have laid a "
#~ "foundation for sharing and publishing "
#~ "digital assets, and in particular, data."
#~ " The FAIR principles emphasize machine "
#~ "accessibility and that all digital "
#~ "assets should be Findable, Accessible, "
#~ "Interoperable, and Reusable. Workflows encode"
#~ " the methods by which the scientific"
#~ " process is conducted and via which"
#~ " data are created. It is thus "
#~ "important that workflows support the "
#~ "creation of FAIR data and adhere "
#~ "to the FAIR principles. — [FAIR "
#~ "Computational "
#~ "Workflows](https://workflows.community/groups/fair/), Workflows"
#~ " Community Initiative."
#~ msgstr ""

#~ msgid ""
#~ "If you are using Windows, you will"
#~ " have to install the [Windows "
#~ "Subsystem for Linux 2](https://learn.microsoft.com"
#~ "/en-us/windows/wsl/install) (WSL2). Visit the "
#~ "`cwltool` [documentation](https://github.com/common-"
#~ "workflow-language/cwltool/blob/main/README.rst#ms-windows-"
#~ "users) for details on installing WSL2."
#~ " Your operating system also needs "
#~ "internet access and a recent version "
#~ "of Python (3.6+)."
#~ msgstr ""

#~ msgid ""
#~ "`cwltool` can be installed with `pip`."
#~ " We recommend using a virtual "
#~ "environment like `venv` or `conda`. The"
#~ " following commands will create and "
#~ "activate a Python virtual environment "
#~ "using the `venv` module, and install "
#~ "`cwltool` in that environment:"
#~ msgstr ""
#~ "`cwltool` は、`pip` でインストールすることができます。`venv` または`conda`"
#~ " のような仮想環境を使用することをお勧めします。以下のコマンドは、`venv` モジュールを使用して "
#~ "Python 仮想環境を作成およびアクティブ化し、その環境内に`cwltool` をインストールします："

#~ msgid "Installing `cwltool` with `pip` and `venv`."
#~ msgstr "`pip` と `venv` での `cwltool` のインストール。"

#~ msgid "Cwl-runner Python Module"
#~ msgstr "Cwl-runner Pythonモジュール"

#~ msgid ""
#~ "This indicates whether a process "
#~ "requires outgoing IPv4/IPv6 network access."
#~ " If a command-line tool is "
#~ "written manually in CWL v1.1+, there "
#~ "is a need to  specify when network"
#~ " access is required."
#~ msgstr ""
#~ "これは、プロセスが発信IPv4/IPv6ネットワークアクセスを必要とするかどうかを示します。CWL "
#~ "v1.1+でCommandLineToolを手動で記述する場合、ネットワークアクセスが必要なタイミングを指定する必要があります。"

#~ msgid "To generate such files, we can use the `InitialWorkDirRequirement`."
#~ msgstr "このようなファイルを生成するために、`InitialWorkDirRequirement` を利用することができます。"

#~ msgid ""
#~ "Note also that the author of this"
#~ " CWL description has also included "
#~ "`ResourceRequirement`s, specifying the minimum "
#~ "amount of RAM and number of cores"
#~ " required for the tool to run "
#~ "successfully, as well as details of "
#~ "the version of the software that "
#~ "the description was written for and "
#~ "other useful metadata. These features "
#~ "are discussed further in other chapters"
#~ " of this user guide."
#~ msgstr ""

#~ msgid "From `Workflow`"
#~ msgstr "`Workflow`から"

#~ msgid ""
#~ "The field `inputBinding` is optional and"
#~ " indicates whether and how the input"
#~ " parameter should appear on the "
#~ "tool's command line.  If `inputBinding` "
#~ "is missing, the parameter does not "
#~ "appear on the command line.  Let's "
#~ "look at each example in detail."
#~ msgstr ""

#~ msgid ""
#~ "If you try running it with "
#~ "`cwltool`, the command will fail since"
#~ " `cwltool` does not have enough "
#~ "information to know how to execute "
#~ "it:"
#~ msgstr "`cwltool` だけで実行しようとすると、`cwltool` は実行するのに必要な情報がないため、コマンドは失敗します："

#~ msgid ""
#~ "Often, tool descriptions will be written"
#~ " for a specific version of a "
#~ "software. To make it easier for "
#~ "others to use your descriptions, you "
#~ "can include a `SoftwareRequirement` field "
#~ "in the `hints` section. This may "
#~ "also help to avoid confusion about "
#~ "which version of a tool the "
#~ "description was written for."
#~ msgstr ""

#~ msgid ""
#~ "As well as a version number, a "
#~ "unique resource identifier (URI) for the"
#~ " tool is given in the form of"
#~ " an [RRID][rrid]. Resources with RRIDs "
#~ "can be looked up in the "
#~ "[SciCrunch][scicrunch] registry, which provides "
#~ "a portal for finding, tracking, and "
#~ "referring to scientific resources "
#~ "consistently. If you want to specify "
#~ "a tool as a `SoftwareRequirement`, "
#~ "search for the tool on SciCrunch "
#~ "and use the RRID that it has "
#~ "been assigned in the registry. (Follow"
#~ " this [Adding a Resource Tutorial"
#~ "][scicrunch-add-tool] to add a tool"
#~ " to SciCrunch). You can use this "
#~ "RRID to refer to the tool (via "
#~ "[identifiers.org][identifiers]) in the `specs` "
#~ "field of your requirement description. "
#~ "Other good choices, in order of "
#~ "preference, are to include the DOI "
#~ "for the main tool citation and the"
#~ " URL to the tool."
#~ msgstr ""

#~ msgid ""
#~ "Normally, input files are located in "
#~ "a read-only directory separate from "
#~ "the output directory.  This causes "
#~ "problems if the underlying tool expects"
#~ " to write its output files alongside"
#~ " the input file in the same "
#~ "directory.  You use `InitialWorkDirRequirement` "
#~ "to stage input files into the "
#~ "output directory. In this example, we"
#~ " use a JavaScript expression to "
#~ "extract the base name of the input"
#~ " file from its leading directory "
#~ "path."
#~ msgstr ""
