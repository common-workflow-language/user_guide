# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow
# Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-24 17:15+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../topics/yaml-guide.md:1 153f05199ec24a5da81da49288e2679a
msgid "YAML Guide"
msgstr ""

#: ../../topics/yaml-guide.md:6 95951c4a95d943c89be9252a898018d8
msgid ""
"[YAML][yaml] is a file format designed to be readable by both computers "
"and humans. This guide introduces the features of YAML that are relevant "
"when writing CWL descriptions and input parameter files."
msgstr ""

#: ../../topics/yaml-guide.md:13 60a16d7722724500b0a31194b6958cea
msgid "You can skip this section if you are already comfortable with YAML."
msgstr ""

#: ../../topics/yaml-guide.md:16 61f0a8fcfa2044ada7761d35e6ee6bbb
msgid "Contents"
msgstr ""

#: ../../topics/yaml-guide.md:18 3c5dd09c0fbc4079abff7f8ee9c1bd03
msgid "[Key-Value Pairs](#key-value-pairs)"
msgstr ""

#: ../../topics/yaml-guide.md:19 c7fa245866d0430fb8fcef9392869999
msgid "[Comments](#comments)"
msgstr ""

#: ../../topics/yaml-guide.md:20 dde5f9ad058445d1b0131ddf1fd80b74
msgid "[Maps](#maps)"
msgstr ""

#: ../../topics/yaml-guide.md:21 fdb88e5dafea4cb0876cea846eccca7d
msgid "[Arrays](#arrays)"
msgstr ""

#: ../../topics/yaml-guide.md:22 f2ae9d617f274c7eb84a2d87c10a4cc5
msgid "[JSON Style](#json-style)"
msgstr ""

#: ../../topics/yaml-guide.md:24 47bffc9bb7b64047a25903eb42bde019
msgid "Key-Value Pairs"
msgstr ""

#: ../../topics/yaml-guide.md:26 283f64df8dcf4abc8f00ee515d0cc9bb
msgid ""
"Fundamentally, a file written in YAML consists of a set of _key-value "
"pairs_. Each pair is written as `key: value`, where whitespace after the "
"`:` is required. Key names in CWL files should not contain whitespace - "
"[_camelCase_][camelCase] is used for multi-word key names that have "
"special meaning in the CWL specification and underscored key names "
"otherwise. For example:"
msgstr ""

#: ../../topics/yaml-guide.md:42 51a3cd8bd6d2403daadc57d0091e99dc
msgid ""
"The YAML above defines four keys - `first_name`, `last_name`, "
"`age_years`, and `home` - with their four respective values. Values can "
"be character strings, numeric (integer, floating point, or scientific "
"representation), Boolean (`true` or `false`), or more complex nested "
"types (see below)."
msgstr ""

#: ../../topics/yaml-guide.md:51 7d58fe0504534589adfadf74e82de41a
msgid ""
"Values may be wrapped in quotation marks, but be aware that this may "
"change the way that they are interpreted i.e. `\"1234\"` will be treated "
"as a character string , while `1234` will be treated as an integer. This "
"distinction can be important, for example when describing parameters to a"
" command: in CWL all parts of `baseCommand` must be strings so, if you "
"want to specify a fixed numeric value to a command, make sure that you "
"wrap that numeric value in quotes: `baseCommand: [echo, \"42\"]`."
msgstr ""

#: ../../topics/yaml-guide.md:61 35e8c97a24344c7d9933f1910d6bd995
msgid "Comments"
msgstr ""

#: ../../topics/yaml-guide.md:63 5ba35d4bbb4644949c37993a77a50bf6
msgid ""
"You may use `#` to add comments to your CWL and parameter files. Any "
"characters to the right of ` #` will be ignored by the program "
"interpreting the YAML. For example:"
msgstr ""

#: ../../topics/yaml-guide.md:76 e63546bf4b144bfba77767ec7248d63d
msgid ""
"If there is anything on the line before the comment, be sure to add at "
"least one space before the `#`!"
msgstr ""

#: ../../topics/yaml-guide.md:79 25ac6edc52bd484cac8eb4fe4d5b6e1c
msgid "Maps"
msgstr ""

#: ../../topics/yaml-guide.md:81 20e1be6499d9470fa74dde6da33f2120
msgid ""
"When describing a tool or workflow with CWL, it is usually necessary to "
"construct more complex, nested representations. Referred to as _maps_, "
"these hierarchical structures are described in YAML by providing "
"additional key-value pairs as the value of any key. These pairs "
"(sometimes referred to as \"children\") are written on new lines under "
"the key to which they belong (the \"parent\"), and should be indented "
"with two spaces (â‡¥tab characters are not allowed). For example:"
msgstr ""

#: ../../topics/yaml-guide.md:104 a99731edefb049299d313941156c41a6
msgid ""
"The YAML above illustrates how to build up complex nested object "
"descriptions relatively quickly. The `inputs` map contains a single key, "
"`example_flag`, which itself contains two keys, `type` and "
"`inputBinding`, while one of these children, `inputBinding`, contains a "
"further two key-value pairs (`position` and `prefix`). See the "
"[Arrays](#arrays) section below for more information about providing "
"multiple values/key-value pairs for a single key. For comparison with the"
" example YAML above, here is a graphical representation of the `inputs` "
"object it describes."
msgstr ""

#: ../../topics/yaml-guide.md:127 51d8ad7d937540ee88b46fc790319b4a
msgid "Arrays"
msgstr ""

#: ../../topics/yaml-guide.md:129 bfeee0ef93e44a0ea50e3970e027b2f1
msgid ""
"In certain circumstances, it is necessary to provide multiple values or "
"objects for a single key. As we've already seen in the [Maps](#maps) "
"section above, more than one key-value pair can be mapped to a single "
"key. However, it is also possible to define multiple values for a key "
"without having to provide a unique key for each value. We can achieve "
"this with an _array_, where each value is defined on its own line and "
"preceded by `-`. For example:"
msgstr ""

#: ../../topics/yaml-guide.md:146 297035119d42476e8dbebd1ed2241ac3
msgid "and a more complex example combining maps and arrays:"
msgstr ""

#: ../../topics/yaml-guide.md:167 563dd83823d745b6aebeb956fca51aa3
msgid "JSON Style"
msgstr ""

#: ../../topics/yaml-guide.md:169 7edbeea182fe4043be66f02bc5952114
msgid ""
"YAML is based on [JavaScript Object Notation (JSON)][json]. Maps and "
"arrays can also be defined in YAML using the native JSON syntax. For "
"example:"
msgstr ""

#: ../../topics/yaml-guide.md:177 37ddb7add5ea4fde94c97ab2bd2c85e7
msgid "and:"
msgstr ""

#: ../../topics/yaml-guide.md:184 ed9f6a7d062c43f099b5181e2c930303
msgid ""
"Native JSON can be useful in indicating where a field is intentionally "
"left empty (such as `[]` for an empty array), as well as where it makes "
"more sense for the values to be located on the same line (For example, "
"when providing option flags and their values in a shell command). "
"However, as the second example above shows, it can severely affect the "
"readability of a YAML file, and should be used sparingly."
msgstr ""

#: ../../topics/yaml-guide.md:194 9cb613e445b5429196ced3d66fe95e45
msgid "Reference"
msgstr ""

#: ../../topics/yaml-guide.md:196 030fd9aede23463d981faf746e2b070f
msgid ""
"The [Learn YAML in Y Minutes][yaml-y-mins] reference was very helpful for"
" us while we wrote this guide, though it also covers features that are "
"not valid in CWL."
msgstr ""

