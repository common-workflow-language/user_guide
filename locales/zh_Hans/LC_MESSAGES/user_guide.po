# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013, CWL Project Team
# This file is distributed under the same license as the Common Workflow
# Language User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
msgid ""
msgstr ""
"Project-Id-Version: Common Workflow Language User Guide\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-12-16 11:48+0100\n"
"PO-Revision-Date: 2024-02-18 03:01+0000\n"
"Last-Translator: Zoë Ma <zoe.ma@curii.com>\n"
"Language-Team: Chinese (Simplified) <https://hosted.weblate.org/projects/"
"commonwl/user-guide/zh_Hans/>\n"
"Language: zh_Hans\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 5.4\n"
"Generated-By: Babel 2.12.1\n"

#: ../../LICENSE.md:2 a48279b2231348eea3f7a3b74a6362ac
msgid "Licenses"
msgstr "许可协议"

#: ../../LICENSE.md:4 9dd9705700664b31a3f296d263b4028b
msgid "Instructional Material"
msgstr "指南资料"

#: ../../LICENSE.md:6 e54324bd39cd431d91b32e338217b8c7
msgid ""
"All Common Workflow Language project instructional material and changes "
"to the structure are also made available under the [Creative Commons "
"Attribution license][cc-by-human]. The following is a human-readable "
"summary of (and not a substitute for) the [full legal text of the CC BY "
"4.0 license][cc-by-legal]."
msgstr ""
"通用工作流语言项目的所有指南资料，以及对其结构的修改，均可在遵照[知识共享署名公共许可协议 (Creative Commons "
"Attribution license)][cc-by-human]的前提下获得授权使用。以下是[CC BY 4.0许可完整法律条文][cc-"
"by-legal]的可读摘要（不能替代原条文）。"

#: ../../LICENSE.md:12 754f3f54aa4142ef9dac27f508dd0bca
msgid "You are free:"
msgstr "您可以自由地："

#: ../../LICENSE.md:14 d2b1d5e965ef4e71b64c359549919975
msgid "to **Share**---copy and redistribute the material in any medium or format"
msgstr "**共享**——通过任何媒介、以任意格式复制和重新分发本作品"

#: ../../LICENSE.md:15 fe9551ffef8149bf8da50e70318e8de8
msgid "to **Adapt**---remix, transform, and build upon the material"
msgstr "**演绎**——修改、转换或以本作品为基础进行创作"

#: ../../LICENSE.md:17 247db3bcc7024c44a044886a29ef1414
msgid "for any purpose, even commercially."
msgstr "在任何用途下，甚至商业目的。"

#: ../../LICENSE.md:19 c04d906124854afc917707b7b4e45bb2
msgid ""
"The licensor cannot revoke these freedoms as long as you follow the "
"license terms:"
msgstr "只要你遵守许可协议条款，许可人就无法收回你的这些权利："

#: ../../LICENSE.md:24 551cb5ab59dd4737b1042a4ef79ffab7
msgid ""
"**Attribution**---You must give appropriate credit (mentioning that your "
"work is derived from work that is Copyright © the Common Workflow "
"Language project, and, where practical, linking to "
"https://www.commonwl.org/ ), provide a [link to the license][cc-by-"
"human], and indicate if changes were made. You may do so in any "
"reasonable manner, but not in any way that suggests the licensor endorses"
" you or your use."
msgstr ""
"**署名**——您必须给出适当的署名，即声明您作品之原始版本的版权为 Common Workflow Language Project 所有 "
"(\"Copyright © the Common Workflow Language project\")。如条件允许，您应提供 "
"https://www.commonwl.org/ 和[许可协议][cc-by-"
"human]的链接，同时标明是否对原始作品作了修改。您可以用任何合理的方式来署名，但是不得以任何方式暗示许可人为您或您的使用背书。"

#: ../../LICENSE.md:32 f6c3b2ccad494ed6811a35537fc1fb0d
msgid ""
"**No additional restrictions**---You may not apply legal terms or "
"technological measures that legally restrict others from doing anything "
"the license permits.  With the understanding that:"
msgstr "**没有附加限制**——您不得适用法律术语或者技术措施从而限制其他人做许可协议允许的事情。并且您理解："

#: ../../LICENSE.md:36 91c95248cd7f435c909ee263a9a8bf3f
msgid ""
"You do not have to comply with the license for elements of the material "
"in the public domain or where your use is permitted by an applicable "
"exception or limitation."
msgstr "您不必因为公共领域的作品要素而遵守许可协议，或者您的使用被可适用的例外或限制所允许。"

#: ../../LICENSE.md:39 27f79b0b648b4de4b0eb3172b2dc4ae8
msgid ""
"No warranties are given. The license may not give you all of the "
"permissions necessary for your intended use. For example, other rights "
"such as publicity, privacy, or moral rights may limit how you use the "
"material."
msgstr "不提供担保。许可协议可能不会给与您意图使用的所必须的所有许可。例如，其他权利比如形象权、隐私权或人格权可能限制您如何使用作品。"

#: ../../LICENSE.md:44 1e367d07720d4f9fb7ebc3149052e823
msgid "Software"
msgstr "软件"

#: ../../LICENSE.md:46 cf8b58d02b6943a48cb70aa78a27bea4
msgid ""
"Except where otherwise noted, the example programs and other software "
"provided by Common Workflow Language project are made available under the"
" [OSI][osi]-approved [Apache 2.0 license][apache-2.0-license]."
msgstr ""
"除非另有注明，Common Workflow Language project "
"提供的示例程序及其他软件均可在遵照[OSI][osi]所批准的[Apache 2.0 "
"许可协议][apache-2.0-license]之前提下获取并使用。"

#: ../../LICENSE.md:51 96f1e5be3e1e48db8d9a4c7693008715
msgid ""
"Unless required by applicable law or agreed to in writing, software "
"distributed under the License is distributed on an \"AS IS\" BASIS, "
"WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. "
"See the License for the specific language governing permissions and "
"limitations under the License."
msgstr "除非受适用法律要求或者经书面许可，据本许可协议发行的软件均为“依照其原样”发行，不存在任何种类的、无论是明文还是隐含的担保或合约要件。请查阅许可协议中关于本协议下授权许可行为和责任免除的具体条文。"

#: ../../src/_includes/what-is-cwl.md:1 ../../src/_includes/what-is-cwl.md:2
#: 08aa9181d5304e0fa96b28db15718559 d37fc100eb6948bba8b5e757574b2aaf
#: ecdd0f28d5b048d69dd1ffae2fa1f6c0
msgid ""
"CWL is a way to describe command-line tools and connect them together to "
"create workflows. Because CWL is a specification and not a specific piece"
" of software, tools and workflows described using CWL are portable across"
" a variety of platforms that support the CWL standard."
msgstr ""
"CWL 的作用在于描述各种命令行工具，并且将它们连接起来，以创建工作流 (workflow)。CWL 是一种规范，而非某种特定的软件。因此，由 "
"CWL 描述的工具和工作流能够移植到支持 CWL 标准的多种平台。"

#: ../../src/episodes.md:5 ../../src/setup.md:5
#: 1361ff6bf4924efc9ce9a85785a6b381 eb254514301c491e81f72ae19c407261
msgid "This page has moved"
msgstr "此页面已转移"

#: ../../src/episodes.md:9 f03d7cbe6670451db0896f1b674d56c7
msgid ""
"This page is out-of-date and was kept here to preserve the links of the "
"old User Guide. Please use the new [Table of Contents](index.md#table-of-"
"contents) to browse the User Guide."
msgstr "此页面已过时，保留在此仅用于留存旧版《用户指南》的链接。请使用[新版目录](index.md#table-of-contents)浏览《用户指南》。"

#: ../../src/faq.md:1 d65ad48ac6314bf0a74c34a6766561fc
msgid "FAQ"
msgstr "常见问题"

#: ../../src/faq.md:11 370a9659c7904ef6b5e1ae7480f82ef6
#, fuzzy
msgid "How do I create non \"`File`\" types using `evalFrom`?"
msgstr "使用 `evalFrom` 的非“`File`”类型"

#: ../../src/faq.md:41 8333f51e3f5945fe8963adfc6685bcb1
#, fuzzy
msgid "How do I rename an input file?"
msgstr "重命名输入文件"

#: ../../src/faq.md:43 f6b88d9154d049d7807afa9bb0f1ac98
msgid ""
"This example demonstrates how to change the name of an input file as part"
" of a tool description. This could be useful when you are taking files "
"produced from another step in a workflow, and don't want to work with the"
" default names that these files were given when they were created."
msgstr ""
"本示例演示如何在工具描述 (tool description) "
"中更改输入文件名称。如果要使用工作流中其它步骤产生的文件，但又不想使用这些文件创建时的默认名称，这时候更名操作可以派上用场。"

#: ../../src/faq.md:59 833510f5896b4a6eb5875d25eca5b047
#, fuzzy
msgid "How do I rename an output file?"
msgstr "重命名输出文件"

#: ../../src/faq.md:61 207e2f97d1c44233ae3f109c5a6ec944
msgid ""
"This example demonstrates how to change the name of an output file from "
"the default name given to it by a tool:"
msgstr "本示例演示更改输出文件名，不再使用某个工具赋予它的默认名称："

#: ../../src/faq.md:83 d66acc583da24273980a52be03e79e91
msgid ""
"By modifying the `basename` field in the `outputEval` field, CWL workflow"
" engines will rename the file using the new name for subsequent steps or "
"as a workflow-level output."
msgstr ""

#: ../../src/faq.md:86 8641f105131b4ac1bca7e0a46756ef79
#, fuzzy
msgid "How do I reference a local script?"
msgstr "引用本地脚本"

#: ../../src/faq.md:88 d3e43b40d6994b32bc37067ee116418e
msgid "There are two ways to reference a local script:"
msgstr "引用本地脚本有两种方法："

#: ../../src/faq.md:90 64b140a321ca4087945339c523cc24dd
#, fuzzy
msgid ""
"The first method involves adding the path to a folder containing your "
"scripts to the `PATH` environment variable. This allows you to execute "
"the shell script directly (without explicitly using the `sh` or `bash` "
"commands)."
msgstr ""
"第一种方法是将包含相关脚本的文件夹添加至`PATH`（路径）环境变量。这样可以直接运行 shell 脚本，无需使用 `sh` 或 `bash` "
"命令。"

#: ../../src/faq.md:93 34ebca4487a54ceab5d087105820e945
msgid "Start with adding a _shebang_ at the top of your file:"
msgstr "首先，将 _\"shebang\"_ 添加为文件首行："

#: ../../src/faq.md:99 6b04a4dcdada4515b28d74aacff3537a
msgid ""
"After that, make the script executable with the command `chmod +x "
"scriptname.sh`"
msgstr "然后，用 `chmod +x scriptname.sh` 命令将脚本设为可执行。"

#: ../../src/faq.md:101 756ab4f7edcf42d3872bb86818e088c3
msgid ""
"Finally, modify your `PATH` to add the directory where your script is "
"located. (It is good practice to use `$HOME/bin` for storing your own "
"scripts)."
msgstr "最后，修改 `PATH`, 添加该脚本所在的目录。（把你自己的脚本保存在 `$HOME/bin` 目录下是较好的做法）。"

#: ../../src/faq.md:108 efb46b3a2d7c4c51b65998602bfa6f18
msgid "Now you can use `baseCommand: scriptname.sh` to run the script directly."
msgstr "这样，您就能用 `baseCommand: scriptname.sh` 直接运行脚本了。"

#: ../../src/faq.md:117 844938d5d2304c6cb03184b4b4b0b024
msgid ""
"When you wish to share your work later, you can place your script in a "
"software container in the Docker format."
msgstr "接下来若想共享您的工作，可将脚本存放在 Docker 格式的容器 (container) 中。"

#: ../../src/faq.md:119 796ce8155e32486d9651f8f13bfa3148
msgid ""
"The second method involves including an input of `type: File` in the "
"script itself:"
msgstr "第二种方法是将 `type: File` 输入内容编写进脚本："

#: ../../src/faq.md:138 ba246320fdd94a1aab4736f83718d793
#, fuzzy
msgid "How can I set `self`-based input bindings for optional inputs?"
msgstr "为可选输入项设置用到 `self` 变量的输入绑定"

#: ../../src/faq.md:140 6169b7be9af7448abcb57eaf91e1cc91
msgid ""
"Currently, `cwltool` can't cope with missing optional inputs if their "
"input binding makes use of `self`. Below is an example workaround for "
"this, pending a more sophisticated fix."
msgstr "目前，如果缺失的可选输入项用到了 `self`, `cwltool` 将无法处理。在更高明的解决办法出现前，下面的例子可作为临时变通一用。"

#: ../../src/faq.md:165 6c98b7948059411b8e09cf03a552c5ab
#, fuzzy
msgid "How can I model a \"one-or-the-other\" parameter?"
msgstr "构建“非此即彼”参数的模型"

#: ../../src/faq.md:167 d1424da3f43c4519a4c4735f4a720341
msgid ""
"Below is an example showing how to specify different strings to be added "
"to a command line, based on the value given to a Boolean parameter."
msgstr "以下示例演示的，是根据某个布尔参数的取值，来指定添加到命令行的字符串。"

#: ../../src/faq.md:188 5c9980839f404ba6aef92ef23034500f
#, fuzzy
msgid ""
"How do I connect a solo value to an input that expects an array of that "
"type?"
msgstr "将某个元素值与期待该值类型的数组关联起来"

#: ../../src/faq.md:190 2525baf16c1f4725b096f33fd99009cf
#, fuzzy
msgid ""
"Add a "
"[`MultipleInputFeatureRequirement`](https://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement)"
" along with [`linkMerge: "
"merge_nested`](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput):"
msgstr ""
"将 "
"[`MultipleInputFeatureRequirement`](https://www.commonwl.org/v1.0/Workflow.html#MultipleInputFeatureRequirement)"
" 与 [`linkMerge: "
"merge_nested`](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
" 联合使用"

#: ../../src/faq.md:194 a00d5d96b15048a79ae099d22d63bb42
msgid "merge_nested"
msgstr "merge_nested"

#: ../../src/faq.md:196 3a92c6cc5c2b40ffa0d692d03bad5c87
msgid ""
"The input must be an array consisting of exactly one entry for each input"
" link. If \"merge_nested\" is specified with a single link, the value "
"from the link must be wrapped in a single-item list."
msgstr "输入必须是一个数组，每个输入链接只包含一个条目。如果使用单个链接指定“merge_nested”，则链接中的值必须包含在单项列表中。"

#: ../../src/faq.md:199 3af16c07e3f148ddb8849c94a3864158
#, fuzzy
msgid "Which means \"create a list with exactly these sources as elements\"."
msgstr "这段话意思是，“创建一个列表，其中的元素正是这些源”"

#: ../../src/faq.md:201 0ea3de393d2f42aeb82658c85a19ec45
msgid ""
"Or in other words: if the destination is of type `File[]` (an array of "
"`File`s) and the source is a single `File` then add "
"`MultipleInputFeatureRequirement` to the Workflow level `requirements` "
"and add `linkMerge: merge_nested` under the appropriate `in` entry of the"
" destination step."
msgstr ""
"换言之：如果目标的类型是 `File[]`（元素类型为 `File ` 的数组），而源是单独一个 `File`，那么将 "
"`MultipleInputFeatureRequirements` 添加到工作流级别的 `requirements`，并在目标步骤相应的 "
"`in` 条目下添加 `linkMerge： merge_nested`。"

#: ../../src/faq.md:229 2f1bbb611c9c4f80b7ae0566432f2f35
msgid "How do make an input optional? 💯"
msgstr ""

#: ../../src/faq.md:231 08a226efe5d141e68215ac77725033db
msgid ""
"To make an input parameter optional, add a question mark to the type "
"declaration."
msgstr "若要令某个输入参数为可选，请在其类型声明中添加问号。"

#: ../../src/faq.md:247 06e70a855a8f455ca0536eead77073c2
msgid "<a name=\"enuminputs\"></a>"
msgstr "<a name=\"enuminputs\"></a>"

#: ../../src/faq.md:248 7fda8eeb6a7f4689993ed0118c77f023
msgid ""
"How do I specify an input that must come from a list of predefined values"
" (i.e. How do I use enum inputs) ?"
msgstr ""

#: ../../src/faq.md:250 b1934a82553b4da3b7f981e576245dd8
msgid ""
"For command line flags that require a specific input as the argument an "
"enum type can be declared in CWL. **Specifying null here is known as long"
" form style. It does the same thing as the question mark on the other "
"inputs.**"
msgstr ""
"某些命令行标志需要特定的参数值；对此，可以在 CWL 中声明枚举类型。**此处指定 null, 这样的编程风格称为“长格式” (long "
"form)。它的作用与其他输入上的问号相同。**"

#: ../../src/faq.md:267 17fc34fad2094f5ea60e963dabd632b8
msgid "<a name=\"recordinputs\"></a>"
msgstr "<a name=\"recordinputs\"></a>"

#: ../../src/faq.md:268 4d7acfbeba5b4e9cb31f08ef4b280447
msgid ""
"How do I describe dependent or exclusive input parameters(e.g. How do I "
"use record inputs)?"
msgstr ""

#: ../../src/faq.md:270 949ce95c082f4a05891a55fee25d4873
msgid ""
"For commandline flags that are either **mutually exclusive** or "
"**dependent** a special record type can be defined. You can also specify "
"null here to create optional inputs."
msgstr ""
"如果部分命令行标志之间存在 **互斥** 或 **依赖** 的关系，可以为其定义专门的记录类型 (record type)。此处也可以指定 "
"null 创建可选输入。"

#: ../../src/faq.md:322 6fd3c469d11d4d52b9fbb7a3d443a8db
#, fuzzy
msgid "How do I set mutually exclusive parameters?"
msgstr "设定互斥参数"

#: ../../src/faq.md:324 a0687ce5c1f940538abc977cad83138f
msgid ""
"To properly set fields in a record input type, you need to pass a "
"dictionary to the input to properly set the parameters. This is done by "
"using inline JavaScript and returning the dictionary with the key of the "
"field you want to set. The source field is set to indicate the input from"
" the workflow to be used as the value."
msgstr ""
"为了正确地设置记录输入类型的字段，您需要将字典传递给输入，以正确设置参数。具体方法是使用内联 JavaScript "
"返回以待设置字段为主键的字典。此处设定了 source （源）字段，以指示工作流中要充当其键值的输入。"

#: ../../src/faq.md:342 12869ce2cdab4c858f3232c6158514f1
#, fuzzy
msgid "How can I set Booleans?"
msgstr "设置布尔参数"

#: ../../src/faq.md:344 8dcb88744e5840029de0e1bbf1c4b967
msgid "These can be set by using the default field"
msgstr "可使用 default（默认）字段设置"

#: ../../src/faq.md:349 972b7a5551bb43e6b9fa30e0cb713ff7
#, fuzzy
msgid "What should I do when concatenating strings in inputs?"
msgstr "在输入中串联字符串"

#: ../../src/faq.md:351 68f74afc21d846dd9070d45dec0cc1d8
msgid "The valueFrom field must be used instead of default."
msgstr "为此必须使用 valueFrom 而非 default 字段。"

#: ../../src/faq.md:359 53b633c6f8644106beb95ae567eb0708
#, fuzzy
msgid ""
"I get `cwltool` errors due to filenames with space characters inside. "
"What should I do?"
msgstr "因文件名含有空格字符，`cwltool`报错"

#: ../../src/faq.md:361 7101bb5cb69e4faca4e60eabb4eb258e
msgid "`cwltool` does not allow some characters in filenames by default."
msgstr "默认情况下，`cwltool`不允许某些字符出现在文件名中。"

#: ../../src/faq.md:363 0eaf834b0ca847cca6736794895f5f81
msgid ""
"For example, the filename `a space is here.txt` includes 3 space "
"characters."
msgstr "例如，文件名 `a space is here.txt`包含三个空格字符。"

#: ../../src/faq.md:371 7dabd8aab7a5423b842433616640bac0
msgid ""
"If you can not avoid these dangerous characters, then pass `--relax-path-"
"checks` to `cwltool`."
msgstr "如果不能避开这些危险的字符，您可以为 `cwltool` 传递 `--relax-path-checks` 选项。"

#: ../../src/faq.md:373 b7ec33f38ce74ceb890f4379e4c41054
#, fuzzy
msgid ""
"What should I do when I get CWL Parameter Reference error due to hyphen "
"in an input identifier?"
msgstr "输入标识符中包含连字符导致 CWL 参数引用错误"

#: ../../src/faq.md:375 e39b65947b294b20a444f18d780246f4
msgid "If `cwltool --validate` returns valid"
msgstr "如 `cwltool --validate` 返回 valid（验证通过）"

#: ../../src/faq.md:384 dcd42c65681b438bb541fb38ddebb536
msgid "But executing it causes an error like:"
msgstr "但执行时导致如下错误："

#: ../../src/faq.md:396 2b96665acac449758b852bbe7600e007
msgid "The file is here"
msgstr "该文件如下"

#: ../../src/faq.md:410 f59751d2f0014e59af7879a748062cec
msgid "Problem caused by `-` (hyphen character)."
msgstr "问题由 `-`（连字符）引发。"

#: ../../src/faq.md:423 7780f461ca4c478b92fca893c0b0894a
#, fuzzy
msgid "To fix this error, change `-` (hyphen) to `_` (underscore):"
msgstr "修复方法是将 `-`（连字符）更改为 `_`（下划线）"

#: ../../src/faq.md:436 88df56dfff854fc68fb6ad3835a846e4
msgid ""
"If it is not possible to change the input identifier, then you can use an"
" alternative CWL Parameter Reference syntax:"
msgstr "如果不能改动输入标识符，您可使用另一种 CWL 参数引用句法："

#: ../../src/faq.md:442 fc407a9e8d8c4b699d9cd14b369343b5
#, fuzzy
msgid "How do I use CWL and cwltool with Singularity?"
msgstr "在 Singularity 下使用 CWL 和 cwltool"

#: ../../src/faq.md:445 239f5f81cef042b08fb8015c36b3ecad
msgid ""
"The CWL standards are built around (optional) Docker format containers. "
"The reference runner and several other CWL implementations support "
"running those Docker format containers using the Singularity engine. "
"Directly specifying a Singularity format container is not part of the CWL"
" standards."
msgstr ""
"CWL 标准是依照 Docker 容器格式建立的，其参考运行程序和另外几种 CWL 实现均支持适应 Singularity 引擎运行 Docker"
" 格式容器。不过，直接指定 Singularity 格式容器不在 CWL 标准之内。"

#: ../../src/faq.md:450 61641314d82b43e982e54c64c73232c5
msgid "How do I debug the JavaScript in my CWL tool?"
msgstr ""

#: ../../src/faq.md:452 5556d3c323664edea55cfb777f4efb3b
msgid ""
"You can use the <code>--js-console</code> option of <code>cwltool</code>,"
" or you can try creating a JavaScript or TypeScript project for your "
"code, and load it using <code>expressionLib</code>, e.g.: <a "
"href=\"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8\"> "
"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8</a></dd>"
msgstr ""
"您可使用 <code>cwltool</code> 的 <code>--js-console</code> 选项，也可以考虑为您的代码创建 "
"JavaScript 或 TypeScript 项目后使用 <code>expressionLib</code> 加载， 比如： <a "
"href=\"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8\"> "
"https://github.com/common-workflow-language/common-workflow-"
"language/blob/master/v1.0/v1.0/template-tool.cwl#L6-L8</a>"

#: ../../src/index.md:1 1c9fb72b83c9467a9672943fb47ffe32
msgid "Common Workflow Language User Guide"
msgstr "通用工作流语言用户指南"

#: ../../src/index.md:3 aaa44578e27345e682ab44686b4da159
msgid ""
"This guide will introduce you to writing workflows using the [Common "
"Workflow Language](https://www.commonwl.org/) (CWL) open standards. This "
"guide describes the latest specification {{ cwl_version }}."
msgstr ""
"这本指南将向您介绍使用 [Common Workflow Language](https://www.commonwl.org/) (CWL) "
"开放标准编写工作流。本指南所描述的是 {{ cwl_version }} 版本最新规范。"

#: ../../src/index.md:7 0adfc2adb0c74372b25d197dd3a73b8b
msgid "Contributions and Feedback are Welcome!"
msgstr "欢迎您的来稿和意见！"

#: ../../src/index.md:9 96c8dca812f1415db7c5c006b0c0e022
msgid ""
"If you find that something is missing from this guide, or if you would "
"like to provide other feedback, file an Issue on the [project repository "
"for this guide][repo]. You can also suggest changes directly in a Pull "
"Request by clicking the \"Edit this page\" button at the right sidebar of"
" each page."
msgstr ""
"如您发现本指南的疏漏之处，或想提供其他反馈，请在[本指南项目源码库][repo]上提交报告 (Issue). 您也可在任意页面点击右边栏的 "
"“Edit this page”（编辑本页）按钮，创建 Pull Request（拉取请求）直接提交修改建议。"

#: ../../src/index.md:16 35c50bb5c3a345b4a4ae66b2df065376
msgid "Navigating the User Guide"
msgstr "浏览《用户指南》"

#: ../../src/index.md:18 9431edcf4e344fb89b6a251e627279d2
msgid ""
"If you are a beginner user get started with the "
"[Introduction](/introduction/index.md) section. For advanced users the "
"subsections of the [Topics](/topics/index.md) have detailed information "
"about the most common topics for CWL."
msgstr ""
"如您是新用户，请从 [《入门》](/introduction/index.md) 章节出发。而对于进阶用户而言， "
"[《主题》](/topics/index.md)部分各小节涵盖了关于 CWL 最常见话题的详细信息。"

#: ../../src/index.md:23 61cf57e61a9f46e5a1bff6368c5ad5e3
msgid ""
"The Table of Contents is displayed at the top menu and also on the left "
"sidebar. It also appears further down this page but with links to "
"subsections. The right sidebar contains links to the sections of each "
"page, and the Search form is on the left sidebar."
msgstr "目录显示在顶部菜单和左侧边栏，本页更下方也有带小节链接的目录。右侧边栏有当前单页分节链接，搜索功能在左侧边栏。"

#: ../../src/index.md:28 94381840d8a848c4a02fa97bfe83566d
msgid "Table of Contents"
msgstr "目录"

#: ../../src/introduction/basic-concepts.md:1 c1271d88e203454688a22e61ee88f02a
msgid "Basic Concepts"
msgstr "基本概念"

#: ../../src/introduction/basic-concepts.md:3 dd462818cc9a4205b38866d0c5137ece
msgid ""
"This section describes the basic concepts for users to get started on "
"working with Common Workflow Language (CWL) workflows. Readers are "
"expected to be familiar with workflow managers, YAML, and comfortable "
"with following instructions for the command-line. The other sections of "
"the user guide cover the same concepts, but in more detail. If you are "
"already familiar with CWL or you are looking for more advanced content, "
"you may want to skip this section."
msgstr ""
"本章节介绍用户开始运用通用工作流语言（CWL）所需的基本概念。读者应了解工作流管理工具和 YAML, "
"且能较为自如地按照文中指示操作命令行。这些概念在《用户指南》其他部分有更详尽的说明。如果您已了解 CWL, 或想查阅进阶内容，可以考虑跳过本章节。"

#: ../../src/introduction/basic-concepts.md:10 7a56d394fb244431aefce7ebbb834ecf
msgid "The CWL Specification"
msgstr "CWL 规约"

#: ../../src/introduction/basic-concepts.md:21 35800ed2c56d489190d3702d9ad20fd7
msgid ""
"The CWL specification is a document written and maintained by the CWL "
"community. The specification has different versions. The version covered "
"in this user guide is the {{ cwl_version }}."
msgstr "CWL 规约由 CWL 社群撰写并维护，此规约现有多个版本，本《用户指南》所涵盖的是版本 {{ cwl_version }}."

#: ../../src/introduction/basic-concepts.md:25 3ab6dd6b2f694afeb08f3984a74f3efb
msgid ""
"The specification version can have up to three numbers separated by `.`s "
"(dots). The first number is the major release, used for backward-"
"incompatible changes like the removal of deprecated features. The second "
"number is the minor release, used for new features or smaller changes "
"that are backward-compatible. The last number is used for bug fixes, like"
" typos and other corrections to the specification."
msgstr ""
"规约的版本号码由至多三个数字构成，以 "
"`.`（圆点）分隔。第一个数字为主发布版本，用于向后不可兼容的更改，例如删除过时的功能。第二个数字是次级发布版本，用于新增功能或向后兼容的小幅调整。最后一个数字用于错误修复，例如打字错误或其他更正。"

#: ../../src/introduction/basic-concepts.md:33 72ae1fb763a34c41b1b06adcbe1522c3
msgid ""
"The model used for the specification version is called Semantic "
"Versioning. See the end of this section to [learn more](#learn-more) "
"about it."
msgstr "规约所使用的版本标号模型称为“语义型版本”，请参阅本章结尾以[了解更多](#learn-more)相关信息。"

#: ../../src/introduction/basic-concepts.md:37 5aa7d3ee6cb048d888f1e1f49d0e08be
msgid "Implementations"
msgstr "实现"

#: ../../src/introduction/basic-concepts.md:39 c87e6daefda74579a39924777b2e6809
msgid ""
"An implementation of the CWL specification is any software written "
"following what is defined in a version of the specification document. "
"However, implementations may not implement every aspect of the "
"specification. CWL implementations are licensed under both Open Source "
"and commercial licenses."
msgstr ""
"所谓 CWL 规约的某种“实现” (implementation), "
"指的是任何一种依照某版本的规约内容而编写的软件。然而，诸实现未必能将规约的每个方面都转化为软件实体。目前，CWL "
"各种实现的许可协议包括开源和商业许可。"

#: ../../src/introduction/basic-concepts.md:44 c995e699ae2949219af252f9d802a43d
msgid ""
"CWL is well suited for describing large-scale workflows in cluster, cloud"
" and high performance computing environments where tasks are scheduled in"
" parallel across many nodes."
msgstr "CWL非常适用于描述集群、云计算和高性能计算 (HPC) 等多节点、任务并行调度环境中的大规模工作流。"

#: ../../src/introduction/basic-concepts.md:51 09171f48a3d841b2acb6d803b2340c8e
msgid "CWL specification, implementations, and other tools."
msgstr "CWL 规约、实现及其他工具。"

#: ../../src/introduction/basic-concepts.md:105
#: 1c1647a3496c4251a3193f94ee4e78c8
msgid "Processes and Requirements"
msgstr "流程和要求"

#: ../../src/introduction/basic-concepts.md:107
#: 854633336f4d4fc394e62c53ce022c6b
msgid ""
"A process is a computing unit that takes inputs and produces outputs. The"
" behavior of a process can be affected by the inputs, requirements, and "
"hints. There are four types of processes defined in the CWL specification"
" {{ cwl_version }}:"
msgstr ""
"流程 (process) 是指接收输入并生成输出的计算单元，影响其行为的包括输入 (input)、要求 (requirement) 及提示 "
"(hint)。CWL 规约 {{ cwl_version }} 版定义了如下四种流程："

#: ../../src/introduction/basic-concepts.md:112
#: 142a847f11d7462f8bf77bfe789410ca
msgid "A command-line tool."
msgstr "命令行工具。"

#: ../../src/introduction/basic-concepts.md:113
#: 7c7567fa690043f9b4b89bdf8ca60cad
msgid "An expression tool."
msgstr "表达式工具。"

#: ../../src/introduction/basic-concepts.md:114
#: 7afcf087d3ea49dabf1a641a2bb71b35
msgid "An operation."
msgstr "操作。"

#: ../../src/introduction/basic-concepts.md:115
#: 6399939602334819a20b92b957352a8a
msgid "A workflow."
msgstr "工作流。"

#: ../../src/introduction/basic-concepts.md:118
#: 8c55b15cebf142899045f229ccc86b1e
msgid "The processing units available in the CWL objects model."
msgstr "可用在 CWL 对象模型中的处理单元。"

#: ../../src/introduction/basic-concepts.md:119
#: ec54c0e67e894bfba2d0fbb0f87ffdf4
msgid ""
"A command-line tool is a wrapper for a command-line utility like `echo`, "
"`ls`, and `tar`. A command-line tool can be called from a workflow."
msgstr "“命令行工具”指的是 `echo`、`ls` 及 `tar` 等命令行程序的包装器 (wrapper)。从工作流中可以调用命令行工具。"

#: ../../src/introduction/basic-concepts.md:122
#: c88ad26efa794cbeb6f0690aa0cad5ea
msgid ""
"An expression tool is a wrapper for a JavaScript expression. It can be "
"used to simplify workflows and command-line tools, moving common parts of"
" a workflow execution into reusable JavaScript code that takes inputs and"
" produces outputs like a command-line tool."
msgstr ""
"“表达式工具”是 JavaScript 表达式的包装器。通过将工作流执行过程中的相同部分整理为可重用的 JavaScript "
"代码，像命令行工具一样接受输入并生成输出，工作流和命令行工具可以得到简化。"

#: ../../src/introduction/basic-concepts.md:127
#: 946825a7ea2c450eb3e41b5548670fb7
msgid ""
"Operation is an abstract process that also takes inputs, produces "
"outputs, and can be used in a workflow. But it is a special operation not"
" so commonly used. It is discussed in the [Operations "
"section](../topics/operations.md) of this user guide."
msgstr ""
"“操作”是一种抽象的过程，它同样可接受输入、生成输出，并用于工作流中。但是，这一类特殊操作并不十分常用。用户指南的 "
"[《操作》](../topics/operations.md)一节将进行讨论。"

#: ../../src/introduction/basic-concepts.md:131
#: 44aac23f302c4178accf7e431cfbb96c
msgid ""
"The workflow is a process that contains steps. Steps can be other "
"workflows (nested workflows), command-line tools, or expression tools. "
"The inputs of a workflow can be passed to any of its steps, while the "
"outputs produced by its steps can be used in the final output of the "
"workflow."
msgstr "“工作流”指的是可分为步骤的流程。“步骤”可以是其他工作流（嵌套工作流），也可以是命令行工具或表达式工具。工作流的输入可以传递给它的任一步骤，而其步骤生成的输出可用作工作流的最终输出。"

#: ../../src/introduction/basic-concepts.md:137
#: 5afdb7aaf0bf4c1abf4c22cdbdd58be9
msgid ""
"The CWL specification allows for implementations to provide extra "
"functionality and specify prerequisites to workflows through "
"*requirements*. There are many requirements defined in the CWL "
"specification, for instance:"
msgstr "CWL 规约允许其实现提供额外功能，或通过 *requirements* （要求）指定工作流的先决条件。CWL 规约定义了诸种要求，如："

#: ../../src/introduction/basic-concepts.md:141
#: 07c5789c59224ed78a3ecd03cfe872e9
#, fuzzy
msgid ""
"[`InlineJavascriptWorkflow`](https://w3id.org/cwl/Workflow.html#InlineJavascriptRequirement)"
" - enables JavaScript in expressions."
msgstr "`InlineJavascriptWorkflow` —— 在表达式中启用 JavaScript。"

#: ../../src/introduction/basic-concepts.md:142
#: 6f9854ae1b884ad39f88d2f39d66cb98
#, fuzzy
msgid ""
"[`SubworkflowFeatureRequirement`](https://w3id.org/cwl/Workflow.html#SubworkflowFeatureRequirement)"
" - enables nested workflows."
msgstr "`SubworkflowFeatureRequirement` —— 启用嵌套工作流。"

#: ../../src/introduction/basic-concepts.md:143
#: 23fef6de073f4da18118e4d0512670fe
#, fuzzy
msgid ""
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/Workflow.html#InitialWorkDirRequirement)"
" - controls staging files in the input directory."
msgstr "`InitialWorkDirRequirement` —— 控制输入目录中的暂存文件。"

#: ../../src/introduction/basic-concepts.md:145
#: fb3762f91177401ea624d1e716d67ae6
msgid ""
"Some CWL runners may provide requirements that are not in the "
"specification. For example, GPU requirements are supported in `cwltool` "
"through the `cwltool:CUDARequirement` requirement, but it is not part of "
"the {{ cwl_version }} specification and may not be supported by other CWL"
" runners."
msgstr ""
"某些 CWL 运行程序可能提供规约之外的需求。例如 `cwltool` 提供 `cwltool:CUDARequirement` "
"以支持GPU需求，但这不在 {{ cwl_version }} 版本规约之内，可能不受其他 CWL 运行程序支持。"

#: ../../src/introduction/basic-concepts.md:151
#: b6a5cd431c324078a9a4e1513a14ee28
msgid ""
"Hints are similar to requirements, but while requirements list features "
"that are required, hints list optional features. Requirements are "
"explained in detail in the [Requirements](../topics/requirements-and-"
"hints.md) section."
msgstr ""
"“提示”与需求类似。其区别是，列为“需求”的功能是不可缺少的，而提示仅列出可选功能。更详细介绍请见 [《需求》](../topics"
"/requirements-and-hints.md)一章。"

#: ../../src/introduction/basic-concepts.md:155
#: 88d7bad84dd341d2abb33673b8b8f250
msgid "FAIR Workflows"
msgstr "FAIR 工作流"

#: ../../src/introduction/basic-concepts.md:157
#: bcbf5d76cf5f47b2a9691b7d2d8ef891
#, fuzzy
msgid ""
"The FAIR principles have laid a foundation for sharing and publishing "
"digital assets, and in particular, data. The FAIR principles emphasize "
"machine accessibility and that all digital assets should be Findable, "
"Accessible, Interoperable, and Reusable. Workflows encode the methods by "
"which the scientific process is conducted and via which data are created."
" It is thus important that workflows both support the creation of FAIR "
"data and themselves adhere to the FAIR principles. — [FAIR Computational "
"Workflows](https://workflows.community/groups/fair/), Workflows Community"
" Initiative."
msgstr ""
"FAIR 为数字资源（尤其是数据）的共享和发布提供了一组基本原则。FAIR "
"四项原则强调了“机器可读”的重要性，进而提出应使所有数字资源可发现、可访问、可互操作以及可重用 (Findable, Accessible, "
"Interoperable, and "
"Reusable)。工作流通过代码所描述的，正是科学工作得以开展、数据得以创建的过程。因此，应强调工作流须支持创建 FAIR 数据，遵从 FAIR"
" 原则。—— 工作流社群行动之[FAIR 计算工作流](https://workflows.community/groups/fair/)。"

#: ../../src/introduction/basic-concepts.md:167
#: 4ea1d3bf04dc42f0bc6735a45b9e0dc0
msgid ""
"CWL has roots in \"make\" and many similar tools that determine order of "
"execution, based on dependencies between tasks. However, unlike \"make\","
" CWL tasks are isolated, and you must be explicit about your inputs and "
"outputs."
msgstr ""
"CWL 滥觞于“make”一类推定任务间依赖关系，并据此决定其执行次序的工具。但与“make”的不同在于，CWL "
"任务是存在于独立环境中的，其输入和输出需要明确指定。"

#: ../../src/introduction/basic-concepts.md:171
#: c0f53138bf084939a54b0a576b44199f
msgid ""
"The benefit of explicitness and isolation are flexibility, portability, "
"and scalability; tools and workflows described with CWL can transparently"
" leverage technologies such as Docker and be used with CWL "
"implementations from different vendors."
msgstr ""
"明确而独立，其益处在于灵活、可移植及可扩缩。CWL 所描述的工具和工作流，既能无缝对接 Docker 等技术以发挥其优势，又能通用于不同供应方的 "
"CWL 实现环境中。"

#: ../../src/introduction/basic-concepts.md:176
#: 91d6eb4984a6410ba99616b6617ba9af
msgid "`cwltool` also uses the PROV-O standard ontology for data provenance."
msgstr "同时，`cwltool` 将 PROV-O 标准本体 (standard ontology) 运用于数据来源的保证。"

#: ../../src/introduction/basic-concepts.md:178
#: ../../src/introduction/prerequisites.md:183
#: ../../src/introduction/quick-start.md:94 0d7e607b00b9485aa2e3c5fb0a931bc6
#: 161697ed3e864155bb89d8be794fc139 b4a7563eabf547c3bf7eab2567a27b51
msgid "Learn More"
msgstr "了解更多信息"

#: ../../src/introduction/basic-concepts.md:180
#: 7221a89559944627b4c3db37f468f72c
msgid "Semantic Versioning - <https://semver.org/>"
msgstr "语义型版本 —— <https://semver.org/>"

#: ../../src/introduction/basic-concepts.md:181
#: bccf086fc9514f76b60dc161e3a09da3
msgid ""
"The CWL Specification page in the CWL website: "
"<https://www.commonwl.org/specification/>"
msgstr "CWL网站上的规约页面： <https://www.commonwl.org/specification/>"

#: ../../src/introduction/basic-concepts.md:182
#: a5b37924c7d04ab984ff2542847afc4a
#, fuzzy
msgid ""
"The Command Line Tool Description Standard: "
"<[https://www.commonwl.org/v1.2/CommandLineTool.html](https://w3id.org/cwl/CommandLineTool.html)>"
msgstr ""
"来自 "
"[`CommandLineTool`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"

#: ../../src/introduction/basic-concepts.md:183
#: 44af015fa36644b99f07338d241d29c1
msgid ""
"The current CWL specification on GitHub: {{ '<https://github.com/common-"
"workflow-language/cwl-{}>'.format(cwl_version_text) }}"
msgstr ""
"GitHub 上的 CWL 规约当前版本： {{ '<https://github.com/common-workflow-"
"language/cwl-{}>'.format(cwl_version_text) }}"

#: ../../src/introduction/basic-concepts.md:184
#: bffca993172048a4b7ab7c62637662e2
msgid ""
"The list of Implementations in the CWL website: "
"<https://www.commonwl.org/implementations/>"
msgstr "CWL 网站所列的诸种实现：<https://www.commonwl.org/implementations/>"

#: ../../src/introduction/basic-concepts.md:185
#: 84c61946406347c8b138772909110d54
msgid "PROV-O: The PROV Ontology - <https://www.w3.org/TR/prov-o/>"
msgstr "PROV-O：PROV 本体 —— <https://www.w3.org/TR/prov-o/>"

#: ../../src/introduction/basic-concepts.md:186
#: eb0b6a62e06143eabc7b92acff9643ea
msgid ""
"CWL Operations are covered in the [Operations](../topics/operations.md) "
"section of this user guide."
msgstr "CWL 操作 (operations) 见于本《用户指南》中[《操作》](../topics/operations.md)一章。"

#: ../../src/introduction/index.md:1 48532f7701c54166859098e521a43db0
msgid "Introduction"
msgstr "概述"

#: ../../src/introduction/index.md:3 08db628a949b4513b824ee334e70a7df
msgid ""
"This section will guide you through a short introduction to CWL, the "
"prerequisites for following this user guide, and some basic concepts that"
" are useful to know before reading the rest of the user guide."
msgstr "本章节将引导您了解 CWL简介、学习本《用户指南》所需的准备，以及有利于您阅读理解本《指南》的若干基本概念。"

#: ../../src/introduction/prerequisites.md:1 d3f5749a76c14fdf8052f5f683d11b9e
msgid "Prerequisites"
msgstr "学习前的准备"

#: ../../src/introduction/prerequisites.md:6 ab9e21b3e99641d096ba70012b4eb035
msgid ""
"The software and configurations listed in this section are prerequisites "
"for following this user guide. The CWL standards are implemented by many "
"different workflow runners and platforms. This list of requirements "
"focuses on the CWL reference runner, `cwltool`. You can use another CWL-"
"compatible runner or workflow system, but the results and interface may "
"look different (though the exact workflow outputs should be identical)."
msgstr ""
"学习本《用户指南》前，首先需要准备好本节所述的软件及其配置。CWL 标准现有多种工作流运行器和平台实现。本节列出的要求主要着眼于 CWL "
"的参考运行程序即 `cwltool`。您也可以使用与之兼容的其他 CWL "
"运行程序或工作流系统，但运行结果和界面可能有所出入（尽管严格意义上属于工作流的输出应该相同）。"

#: ../../src/introduction/prerequisites.md:12 8ed426ebcb744839915e7c414d69b1e9
msgid "CWL Implementations"
msgstr "CWL 实现"

#: ../../src/introduction/prerequisites.md:14 ff74d48407464c4b9d451fa419137144
msgid ""
"There are many implementations of the CWL standards. Some are complete "
"CWL runners, while others could be plug-ins or extensions to workflow "
"engines. We have a better explanation in the [Implementations](basic-"
"concepts.md#implementations) section."
msgstr ""
"CWL 标准有多种实现，既包括完整的 CWL 运行程序，也有工作流引擎的插件或扩展程序。 详见[《实现》](basic-"
"concepts.md#implementations)一章。"

#: ../../src/introduction/prerequisites.md:19 eb98aa9c71d746a69e9610996ffc5b47
msgid "Operating System"
msgstr "操作系统"

#: ../../src/introduction/prerequisites.md:21 209a0018e7da48f09b27dc507ba14d24
msgid ""
"We recommend using an up-to-date operating system. You can choose any of "
"the following options for your operating system:"
msgstr "建议使用以下任一可选系统的最新版本："

#: ../../src/introduction/prerequisites.md:24 8baf869537ea478791356320280df928
msgid "Linux"
msgstr "Linux"

#: ../../src/introduction/prerequisites.md:25 248e9760ce60442eb10ab7247d6af23b
msgid "macOS"
msgstr "macOS"

#: ../../src/introduction/prerequisites.md:26 d89306bbadf44b6bba8959f1f68cc2f0
msgid "Windows"
msgstr "Windows"

#: ../../src/introduction/prerequisites.md:29 aeeb990abbbd42cca122c342054be29c
#, fuzzy
msgid ""
"If you are using Windows, you will have to install the Windows Subsystem "
"for Linux 2 as documented in the [`cwltool` documentation for Microsoft "
"Windows users](https://github.com/common-workflow-"
"language/cwltool/blob/main/README.rst#ms-windows-users). Your operating "
"system also needs internet access and a recent version of Python (3.6+)."
msgstr ""
"如使用 Windows 操作系统，须首先安装[适用于 Linux 的 Windows 子系统 "
"2](https://learn.microsoft.com/en-us/windows/wsl/install) (WSL2)。请参阅 "
"`cwltool` [说明文件](https://github.com/common-workflow-"
"language/cwltool/blob/main/README.rst#ms-windows-users) ，了解关于安装 WSL2 "
"的细节。同时，您的操作系统还需能接入互联网，以及运行较新版本（3.6 以上）的 Python."

#: ../../src/introduction/prerequisites.md:34 21d1f29fb15745c480194eae6acdd031
msgid "CWL Runner"
msgstr "CWL 运行程序"

#: ../../src/introduction/prerequisites.md:39 89f0bf6ff8544a6d87114085be8e0bb6
msgid ""
"The first thing you will need for running CWL workflows is a CWL runner. "
"`cwltool` is a Python Open Source project maintained by the CWL "
"community. It is also the CWL reference runner, which means it must "
"support everything in the current CWL specification, {{ cwl_version }}."
msgstr ""
"要运行CWL工作流，首先要用到的就是 CWL 运行程序 (runner). `cwltool`作为 CWL 社群共同维护开发的 Python "
"开源项目，正是 CWL 运行程序的参考实现，也就是说，它必须完整支持当前 {{ cwl_version }} 版本 CWL 规约。"

#: ../../src/introduction/prerequisites.md:44 068f09d4d66547448693f7b9dadef497
msgid ""
"`cwltool` can be installed with `pip`, `apt`, or `conda`. We recommend "
"using a virtual environment like `venv` or `conda`."
msgstr ""

#: ../../src/introduction/prerequisites.md:48 1edf8b8438334ae29dc406dbfd711228
#, fuzzy
msgid ""
"Visit the `cwltool` "
"[documentation](https://cwltool.readthedocs.io/en/latest/#install) for "
"details on installing `cwltool`."
msgstr ""
"请参阅 `cwltool` [说明文件](https://github.com/common-workflow-"
"language/cwltool#install)查看其他安装方法，包括用 `apt` 或 `conda`."

#: ../../src/introduction/prerequisites.md:52 5e300141ce43435f9437507374987213
msgid "Let's use a simple CWL tool description `true.cwl` with `cwltool`."
msgstr "我们来用`cwltool` 处理名为 `true.cwl` 的一个简单 CWL 工具描述。"

#: ../../src/introduction/prerequisites.md:54 282ac7ba2a2346feac2456bcda0f214a
msgid "`true.cwl`"
msgstr "`true.cwl`"

#: ../../src/introduction/prerequisites.md:60 0b36f94f479a4bce9bd9be9983894421
msgid ""
"The `cwltool` command has an option to validate CWL tool and workflow "
"descriptions. This option will parse the CWL document, look for syntax "
"errors, and verify that the workflow descriptions are compliant with the "
"CWL standards. However, these actions will be performed without running "
"the document. To validate CWL workflows (or even a standalone command "
"line tool description like the above) pass the `--validate` option to the"
" `cwltool` command:"
msgstr ""
"`cwltool` 命令有一个选项可用于“确认” (validate) 也就是检验 CWL 工具和工作流描述。使用该选项可以进行 CWL "
"文件语法分析，查找语法错误，并以 CWL 标准验证工作流描述的规范性。然而，进行这一系列操作并不会运行 CWL 文件。要确认 CWL "
"工作流（包括类似前例的独立命令行工具描述），请将 `--validate` 选项传递给 `cwltool` 命令："

#: ../../src/introduction/prerequisites.md:66 5fce122794e34892b430ca4bdba5ba50
msgid "Validating `true.cwl` with `cwltool`."
msgstr "用 `cwltool` 确认（即检验）`true.cwl`."

#: ../../src/introduction/prerequisites.md:71 73f074f47d1449dcb40ff960a84851fd
msgid "You can run the CWL tool description by omitting the `--validate` option:"
msgstr "去掉 `--validate` 选项，才能运行 CWL 工具描述："

#: ../../src/introduction/prerequisites.md:73 2dd5a67870ca41b48e17c468ba15888b
msgid "Running `true.cwl` with `cwltool`."
msgstr "用 `cwltool` 运行 `true.cwl`."

#: ../../src/introduction/prerequisites.md:78 d2dc809318be49cc996d892e93ad84ac
msgid "Generic ``cwl-runner`` alias"
msgstr ""

#: ../../src/introduction/prerequisites.md:80 9809c2e262924ef286b0bd62e0b00995
msgid ""
"`cwl-runner` is an implementation-agnostic alias for any CWL compliant "
"runner. This simply means that the `cwl-runner` alias command can be "
"invoked independently, and is not reliant on a particular CWL runner "
"program name. Users can invoke `cwl-runner` instead of invoking a CWL "
"runner like `cwltool` directly. The `cwl-runner` is installed by a system"
" administrator or user to point to the preferred CWL implementation. This"
" is convenient for environments with multiple CWL runners."
msgstr ""
"`cwl-runner` 是任何符合标准的 CWL 运行程序“不分实现”的别名 (alias). 简言之，`cwl-runner` "
"这个别名命令可独立地启用，不依赖于 CWL 运行程序的具体名称。用户只需调用 `cwl-runner`, 而无需直接调用诸如 `cwltool` "
"这样的某个 CWL 运行程序。经系统管理员或用户安装后，`cwl-runner` 命令用来代指其首选的 CWL 实现。这样的安排更便利于多个 "
"CWL 运行程序共存的环境。"

#: ../../src/introduction/prerequisites.md:88 6dd6aa836099469381fb564d63b84f3d
#, fuzzy
msgid ""
"The CWL community publishes a Python package with the name `cwlref-"
"runner` that installs an alias for `cwltool` under the name `cwl-runner`."
msgstr "CWL 社群发布有名为 `cwlref-runner` 的 Python 包，以安装 `cwl-runner` 作为 `cwltool` 的别名"

#: ../../src/introduction/prerequisites.md:91 cc1a9b95508e44a1bf08ae75d990c301
msgid "Installing `cwl-runner` alias for cwltool with `pip`."
msgstr "用 `pip` 为 cwltool 安装别名 `cwl-runner`."

#: ../../src/introduction/prerequisites.md:98 8f8c80f705d94d4899b250bbf9c54562
msgid ""
"Now you can validate and run your workflow with the `cwl-runner` "
"executable, which will invoke `cwltool`. You should have the same results"
" and output as in the previous section."
msgstr "现在要检验或运行工作流就可以用 `cwl-runner` 这个命令了，它将为你调用 `cwltool`. 其运行结果和输出应当与上一节中相同。"

#: ../../src/introduction/prerequisites.md:102 176e4214d18149f3ba0bda692bcf760f
msgid "Validating `true.cwl` with `cwl-runner`."
msgstr "用 `cwl-runner` 检验 `true.cwl`."

#: ../../src/introduction/prerequisites.md:107 4890bf20bc3842d3a7421b555bcda94a
msgid "Running `true.cwl` with `cwl-runner`."
msgstr "用 `cwl-runner` 运行 `true.cwl`."

#: ../../src/introduction/prerequisites.md:112 2475a83cf6ed4389bb680fa37e8fe69c
msgid ""
"Another way to execute `cwl-runner` is by invoking the file directly. For"
" that, the first thing you need to do is copy `true.cwl` workflow into a "
"new file: `true_shebang.cwl`, and include a special first line, a "
"*shebang*:"
msgstr ""
"执行 `cwl-runner` 还有一种方法，即直接调用 CWL 文件。为此，首先将 `true.cwl` 工作流复制为新文件 "
"`true_shebang.cwl`, 然后加入特定的 *shebang* (即 \"hash-bang\") 作为首行："

#: ../../src/introduction/prerequisites.md:116 24da787aa76c4480838a93ba0533898d
msgid "`true_shebang.cwl`"
msgstr "`true_shebang.cwl`"

#: ../../src/introduction/prerequisites.md:122 4f3cb8d1f9ce4e3d852e81aa4e0f60be
msgid "Now you can make the file `true_shebang.cwl` executable with `chmod u+x`."
msgstr "现在，用 `chmod u+x` 命令将 `true_shebang.cwl` 设为可执行。"

#: ../../src/introduction/prerequisites.md:124 27693d62faa045d9b03143d9bd2afcdf
msgid "Making `true.cwl` executable."
msgstr "令 `true.cwl` 可执行。"

#: ../../src/introduction/prerequisites.md:131 703531514abe4fd48015c472005dbffa
msgid ""
"And finally, you can execute it directly in the command-line. On "
"execution, the program specified in the shebang (`cwl-runner`) will be "
"used to execute the rest of the file."
msgstr ""
"到此，此 CWL 文件即可在命令行直接执行了。一旦下令执行这个文件，“shebang”所指定的程序 (即 `cwl-runner`) "
"将实际执行其余部分。"

#: ../../src/introduction/prerequisites.md:135 abba2e14c4e54252bb75983274663a7a
msgid "Running `true_shebang.cwl` with a shebang."
msgstr "使用 shebang 运行 `true_shebang.cwl`."

#: ../../src/introduction/prerequisites.md:141 11fea992c00940d29eb29ccf4b9370e9
#, fuzzy
msgid ""
"The *shebang* is the two-character sequence `#!` at the beginning of a "
"script. When the script is executable, the operating system will execute "
"the script using the executable specified after the shebang. It is "
"considered a good practice to use `/usr/bin/env [executable]` rather than"
" using a hard-coded location, since `/usr/bin/env [executable]` looks for"
" the `[executable]` program in the system `PATH`,"
msgstr ""
"所谓 *shebang* 是指脚本起始处的 `#!` 两个连续字符。如果脚本可执行，操作系统将用紧跟在 shebang "
"之后写明的可执行程序来执行此脚本。一个好习惯是用 `/usr/bin/env &lt;可执行程序名&gt;`， 而不是硬性编码其所在路径，理由是 "
"`/usr/bin/env &lt;可执行程序名&gt;` 进行的，是在系统 `PATH`（命令路径环境变量）中查找 "
"`&lt;可执行程序名&gt;` 的实际路径"

#: ../../src/introduction/prerequisites.md:148 854736eef2ac4b63b187a4cea9660ae4
msgid "Text Editor"
msgstr "文本编辑器"

#: ../../src/introduction/prerequisites.md:150 480fbb7a743046068c114fff5b396a9f
msgid ""
"You can use any text editor with CWL, but for syntax highlighting we "
"recommend an editor with YAML support. Popular editors are Visual Studio "
"Code, Sublime, WebStorm, vim/neovim, and Emacs."
msgstr ""
"任何文本编辑器都可以用于 CWL 编程。不过，我们建议使用支持显示 YAML 语法的编辑器。常用的编辑器包括 Visual Studio "
"Code、Sublime、WebStorm、vim/neovim 以及 Emacs 等。"

#: ../../src/introduction/prerequisites.md:154 28da3eea8fd245d1936013d021c25164
msgid ""
"There are extensions for Visual Studio Code and WebStorm that provide "
"integration with CWL, and features such as customized syntax highlighting"
" and better auto-complete:"
msgstr "以下 Visual Studio Code 和 WebStorm 的扩展程序支持 CWL 集成，提供自定义语法显示、改进的自动补全等功能："

#: ../../src/introduction/prerequisites.md:158 73c08e11e90d4c7f952307a1cdaa360b
msgid ""
"Visual Studio Code with the Benten (CWL) plugin - "
"<https://github.com/rabix/benten#install-vs-code-extension>"
msgstr ""
"带 Benten (CWL) 插件的 Visual Studio Code —— <https://github.com/rabix/benten"
"#install-vs-code-extension>"

#: ../../src/introduction/prerequisites.md:159 a5b788252a924338963f0ed198fc22ca
msgid ""
"cwl-plugin for IntelliJ - <https://plugins.jetbrains.com/plugin/10040"
"-cwl-plugin>"
msgstr ""
"IntelliJ 的 cwl-plugin 插件 —— <https://plugins.jetbrains.com/plugin/10040"
"-cwl-plugin>"

#: ../../src/introduction/prerequisites.md:161 ee705b919acd461a8d9622821da246b6
msgid ""
"The CWL community also maintains a list of editors and viewers: "
"<https://www.commonwl.org/tools/#editors>"
msgstr "CWL 社群维护的编辑器和阅览器列表：<https://www.commonwl.org/tools/#editors>"

#: ../../src/introduction/prerequisites.md:164 7724b63db3cc45139379898d047c0f83
msgid "Docker"
msgstr "Docker"

#: ../../src/introduction/prerequisites.md:168 eff13997c1ce43d1ad2d7a4d927394fe
msgid ""
"`cwltool` uses Docker to run tools, workflows, and workflow steps that "
"specify a software container. Follow the instructions in the Docker "
"documentation to install it for your operating system: "
"<https://docs.docker.com/>."
msgstr ""
"`cwltool` 使用 Docker 运行指定了软件容器的工具、工作流及工作流步骤。请按照 Docker 文档在您的操作系统中安装 "
"Docker: <https://docs.docker.com/>。"

#: ../../src/introduction/prerequisites.md:172 2872503638624b7e904ae407375ac165
msgid ""
"You do not need to know how to write and build Docker containers. In the "
"rest of the user guide, we will use existing Docker images for running "
"examples, and to clarify the differences between the execution models "
"with and without containers."
msgstr "您无需掌握如何编写和构建 Docker 容器。在接下来的部分里，我们将用现成的 Docker 映像来运行范例，并阐明有无容器的执行模型之间有何不同。"

#: ../../src/introduction/prerequisites.md:178 52ddcc9bc1554d809371fc0a503c40bc
msgid ""
"`cwltool` supports running containers with Docker, Podman, udocker, and "
"Singularity. You can also use alternative container registries for "
"pulling images."
msgstr "`cwltool` 支持使用 Docker、Podman、udocker 和 Singularity 运行容器，并支持从非官方容器仓库拉取映像。"

#: ../../src/introduction/prerequisites.md:185 f3bbfa17f31a459386461951de157dd2
msgid ""
"The [Implementations](basic-concepts.md#implementations) topic in the "
"next section, Basic Concepts."
msgstr "下一节《基本概念》之[“实现”](basic-concepts.md#implementations)主题。"

#: ../../src/introduction/prerequisites.md:186 e22b9e7c56104e018e6d2f3d547c01ea
msgid "The Python `venv` module: <https://docs.python.org/3/library/venv.html>"
msgstr "Python `venv` 模块：<https://docs.python.org/3/library/venv.html>"

#: ../../src/introduction/quick-start.md:1 9ca367e3ca754a0fa88dab64724b95b6
msgid "Quick Start"
msgstr "快速入门"

#: ../../src/introduction/quick-start.md:3 733db5702c774f32b8c91d13f74f3720
msgid ""
"This section will show you a brief overview of what CWL is, and where you"
" can learn more about it. No previous knowledge of CWL is required, but "
"you must be comfortable following instructions for the command-line."
msgstr "本节将为您概述 CWL 是什么，以及在何处可以进一步学习。您不需要有 CWL 知识储备，但要能较为自如地按照文中指示操作命令行。"

#: ../../src/introduction/quick-start.md:7 0b164074dd0849c3b2c8d2f78ea99e95
msgid "“Hello World”"
msgstr "“Hello World”（“世界您好”程序）"

#: ../../src/introduction/quick-start.md:12 6485f96f638548fbb7addc57f6cde92b
msgid ""
"CWL documents are written in [YAML](../topics/index.md) (and/or JSON). "
"The example below shows a simple CWL “Hello World” workflow annotated "
"with comments. Note that comments start with `#`:"
msgstr ""
"CWL 文件按照 [YAML](../topics/index.md) 或者 JSON 格式编写的。下例演示了一个简单的 CWL "
"工作流“Hello World”，并且标有注释，即 `#` 符号后面的文字："

#: ../../src/introduction/quick-start.md:16 5e06f9c4754347b8bac88d24c21e0f67
msgid "`hello_world.cwl`"
msgstr "`hello_world.cwl`"

#: ../../src/introduction/quick-start.md:22 6a13fb9112ab41acb60dc65b3656f63e
msgid ""
"The example above is just a wrapper for the `echo` command-line tool. "
"Running the workflow above with the default input values will produce the"
" same result as the command-line `echo \"Hello World\"`."
msgstr ""
"上面的示例不过是 `echo` 命令行工具的包装器 (wrapper). 使用默认输入值运行上述工作流，产生的结果会和命令 `echo "
"\"Hello World\"` 别无二致。"

#: ../../src/introduction/quick-start.md:27 7b2ae93353184faea0ae4f4acdfc3350
msgid ""
"In CWL, there is a distinction between a command-line tool and a "
"workflow. But for the sake of simplicity, we are using the term "
"“workflow” here. You will learn more about this in the [basic concepts"
"](basic-concepts.md) section."
msgstr ""
"CWL 中“命令行工具”和“工作流”是有所区别的。但为了简单起见，这里我们仍然用了“工作流”一次。更多有关信息可在[《基本概念》](basic-"
"concepts.md)一节中学到。"

#: ../../src/introduction/quick-start.md:32 1ed30b04073d47a9893774746479fb5d
msgid "Installing a CWL Runner"
msgstr "安装 CWL 运行程序"

#: ../../src/introduction/quick-start.md:34 73a42cd9e0e54296985088b7221a8a93
msgid ""
"`cwltool` is an implementation of the CWL specification. It is also the "
"CWL *Reference Runner* for the specification, and it is compliant with "
"the latest version of the specification: {{ cwl_version }}. You can "
"install `cwltool` using `pip`:"
msgstr ""
"`cwltool` 是 CWL 规约的一种实现，也为该规约编写的 CWL *参考运行程序*。它符合规约的最新版本 {{ cwl_version "
"}} 版。您可用 `pip` 安装 `cwltool`:"

#: ../../src/introduction/quick-start.md:39 57aea587ade24610be62f5d993b0b755
msgid "Installing `cwltool` with `pip`."
msgstr "使用 `pip` 安装 `cwltool`."

#: ../../src/introduction/quick-start.md:47 51183fc986014edbb026a53f222e6c2e
msgid ""
"If installing the cwltool using the pip command doesn't work for you, the"
" [prerequisites](prerequisites.md) section contains other ways to install"
" `cwltool` and a more detailed list of software and libraries used for "
"following the rest of this user guide."
msgstr ""
"如果您无法用 pip 命令安装 cwltool，请参阅[《学习前的准备》](prerequisites.md) 一节，了解安装 `cwltool`"
" 的其他方法，以及继续学习《用户指南》所需软件和库的详细列表。"

#: ../../src/introduction/quick-start.md:51 a7582c3ae37a462a8ae1e72b3f321534
msgid "Running \"Hello World\""
msgstr "运行“Hello World”"

#: ../../src/introduction/quick-start.md:53 0595e96912dc40e5a09f2ced2d2b7bcd
#, fuzzy
msgid ""
"The usage of the `cwltool` command-line executable is basically `cwltool "
"[OPTIONS] [CWL_DOCUMENT] [INPUTS_OBJECT]`. You can run the "
"`hello_world.cwl` workflow without specifying any option:"
msgstr ""
"`cwltool` 命令行程序的基本用法是 `cwltool [选项] &lt;CWL 文件名&gt; [输入对象]`. "
"您可以不指定任何选项，直接运行 `hello_world.cwl` 工作流："

#: ../../src/introduction/quick-start.md:57 5b393c69816549b084516dda4d4274f5
msgid "Running `hello_world.cwl` with `cwltool`."
msgstr "使用 `cwltool` 运行 `hello_world.cwl`."

#: ../../src/introduction/quick-start.md:62 4306d8ad802f45c18487d932d04492fa
msgid ""
"Or you can override the default value of the input parameter `message`, "
"similar to how you would change the argument of the `echo` base command:"
msgstr "您还可以撤销输入参数 `message` 的默认值，有如更改 `echo` 基本命令的参数："

#: ../../src/introduction/quick-start.md:65 8339ec411ad04c70ab8d795eb154fc38
msgid "Running `hello_world.cwl` with `cwltool` passing an input parameter."
msgstr "向 `cwltool` 传递输入参数值运行 `hello_world.cwl`."

#: ../../src/introduction/quick-start.md:70 3ecca6985e754951aee00c93effe9517
msgid ""
"Another way of passing values to your workflow input parameters is via an"
" *Inputs Object*. This is a file containing the input fields with their "
"corresponding values. The Inputs Objects file can be written in JSON or "
"YAML. For example:"
msgstr ""
"将值传递给工作流输入参数的另一种方法是利用*输入对象* (Inputs Object)。它是由输入字段及其相应值构成的文件，可使用 JSON 或 "
"YAML 格式编写。例如："

#: ../../src/introduction/quick-start.md:74 d05e8e016b1d40c28c4b6091103fe920
msgid "`hello_world-job.json`"
msgstr "`hello_world-job.json`"

#: ../../src/introduction/quick-start.md:80 c5983ba6c86f4b749522c11cb3843911
msgid ""
"You can use this Inputs Object file now to execute the “Hello World” "
"workflow:"
msgstr "这样就可以在执行“Hello World”工作流时使用此输入对象文件："

#: ../../src/introduction/quick-start.md:82 4065124edf3a4678a37c82e3070595cb
msgid "Passing an Inputs Object file to `cwltool`."
msgstr "将输入对象文件传递给 `cwltool`."

#: ../../src/introduction/quick-start.md:88 52b1602b5c8d48db88d0b16f788e7703
msgid ""
"We used a similar file name for the workflow and for the Inputs Object "
"files. The *-job.json* suffix is very common in Inputs Object files, but "
"it is not a requirement. You can choose any name for your workflows and "
"Inputs Object files."
msgstr ""
"我们为工作流和输入对象文件起了类似的文件名。输入对象文件名中的 *-job.json* "
"后缀是很常见的，但并非规定。工作流和输入对象文件的命名方式可由您任意选择。"

#: ../../src/introduction/quick-start.md:96 3b06faf5f3194bd8a96118d9f050f61e
msgid "Continue reading the next sections of this User Guide!"
msgstr "请继续阅读《用户指南》后续部分！"

#: ../../src/introduction/quick-start.md:97 669b8ac154e74181830a430b1dc7684b
msgid "[List of CWL Implementations](https://www.commonwl.org/implementations)."
msgstr "[ 各种 CWL 实现汇总](https://www.commonwl.org/implementations)。"

#: ../../src/introduction/quick-start.md:98 1c888f1b771d49b3a257ed534b5afa0a
msgid ""
"The [`common-workflow-language` organization](https://github.com/common-"
"workflow-language) at GitHub."
msgstr ""
"GitHub上的 [`common-workflow-language` 组织](https://github.com/common-"
"workflow-language)。"

#: ../../src/introduction/quick-start.md:99 dbce82b7a930493486a585ecb8891121
msgid ""
"[Common Workflow Language at "
"Wikipedia](https://en.wikipedia.org/wiki/Common_Workflow_Language)."
msgstr ""
"[英文维基百科中的 Common Workflow Language "
"条目](https://en.wikipedia.org/wiki/Common_Workflow_Language)。"

#: ../../src/introduction/quick-start.md:100 dc714ffd4278421b9f2417f41627722c
msgid ""
"[YAML.org](http://yaml.org/) and [YAML at "
"Wikipedia](https://en.wikipedia.org/wiki/YAML)."
msgstr ""
"[YAML.org](http://yaml.org/) 网站，以及[维基百科中的 YAML "
"条目](https://en.wikipedia.org/wiki/YAML)。"

#: ../../src/introduction/quick-start.md:101 2bf7b924182f4f2bab88edef5ef85baa
msgid ""
"The {{'[CWL Specification "
"VERSION](https://www.commonwl.org/VERSION)'.replace('VERSION', "
"cwl_version_text) }}."
msgstr ""
"{{'[CWL 规约 VERSION "
"版](https://www.commonwl.org/VERSION)'.replace('VERSION', "
"cwl_version_text) }}."

#: ../../src/introduction/quick-start.md:102 936a7dfab11a4f2c82c0b59964e3ea28
msgid ""
"[Workflow management system at "
"Wikipedia](https://en.wikipedia.org/wiki/Workflow_management_system)."
msgstr ""
"[Wikipedia 条目 Workflow Management System "
"](https://en.wikipedia.org/wiki/Workflow_management_system)."

#: ../../src/setup.md:9 24ea9c5144664d9599d7aca767b4730a
msgid ""
"This page is out-of-date and was kept here to preserve the links of the "
"old User Guide. The information on this page has been migrated to the "
"[FAQ](/faq.md) section of the new user guide."
msgstr "此页面已过时，存留在此仅用于保留旧《用户指南》链接。此页面上的内容已迁移到新《用户指南》的[《常见问题》](/faq.md)一节。"

#: ../../src/topics/additional-arguments-and-parameters.md:1
#: 3843684b039a40dea163de951ca56738
msgid "Additional Arguments and Parameters"
msgstr "附加参数"

#: ../../src/topics/additional-arguments-and-parameters.md:3
#: a6fd1842b938435aa2a3c889019eec71
msgid ""
"Sometimes tools require additional command line options that don't "
"correspond exactly to input parameters."
msgstr "有时，一些工具需要额外的命令行选项，但我们无法让它们与 (CWL) 输入参数一一对应。"

#: ../../src/topics/additional-arguments-and-parameters.md:6
#: dfed0747ed544547afd364086d828c9b
msgid ""
"In this example, we will wrap the Java compiler to compile a java source "
"file to a class file.  By default, \"javac\" will create the class files "
"in the same directory as the source file.  However, CWL input files (and "
"the directories in which they appear) may be read-only, so we need to "
"instruct \"javac\" to write the class file to the designated output "
"directory instead."
msgstr ""
"本例中，我们将包装 Java 编译器，将 java 源文件编译为类 (class) 文件。 默认情况下，“javac” "
"将在源文件所在目录中创建类文件。 然而，CWL 输入文件（及其所在目录）可能是只读的，因此我们需要令 “javac” 将类文件写入指定的输出目录。"

#: ../../src/topics/additional-arguments-and-parameters.md:13
#: e690b567eae34f3f8dbdd7760e51449a
msgid "`arguments.cwl`"
msgstr "`arguments.cwl`"

#: ../../src/topics/additional-arguments-and-parameters.md:19
#: ../../src/topics/staging-input-files.md:15 4cee519b108143be89a0e47a75d7d649
#: 79585673fd654bab9ba7c1927d7e153b
msgid "`arguments-job.yml`"
msgstr "`arguments-job.yml`"

#: ../../src/topics/additional-arguments-and-parameters.md:24
#: ef070ebe5f7245489b05660fb6d7c178
msgid "Next, create a sample Java file to use with the command-line tool."
msgstr "接下来，创建一个示例 Java 文件，用来让命令行工具处理它。"

#: ../../src/topics/additional-arguments-and-parameters.md:30
#: 4ae43e3e841442039e4bb8c740096c56
msgid ""
"And now invoke `cwltool` providing the tool description and the input "
"object on the command line:"
msgstr "现在，将刚才创建的工具描述和输入对象通过命令行传递给 `cwltool` ："

#: ../../src/topics/additional-arguments-and-parameters.md:36
#: 8497291577914eb3a172c1ffb736d95d
msgid ""
"Here we use the `arguments` field to add an additional argument to the "
"command line that isn't tied to a specific input parameter."
msgstr "此处我们使用 `arguments` 字段，给命令行添加一个与任何具体输入参数都无关的附加参数。"

#: ../../src/topics/additional-arguments-and-parameters.md:43
#: dc9fa5f2cbb147b1853c4042c54010f3
msgid ""
"This example references a runtime parameter.  Runtime parameters provide "
"information about the hardware or software environment when the tool is "
"actually executed.  The `$(runtime.outdir)` parameter is the path to the "
"designated output directory.  Other parameters include "
"`$(runtime.tmpdir)`, `$(runtime.ram)`, `$(runtime.cores)`, "
"`$(runtime.outdirSize)`, and `$(runtime.tmpdirSize)`.  See the [Runtime "
"Environment][runtime] section of the CWL specification for details."
msgstr ""
"此示例用到了运行时 (runtime) 参数，它们提供的是工具实际执行时的硬件或软件环境信息。 `$(runtime.outdir)` "
"参数是指定输出目录的路径。其他运行时参数还有 "
"`$(runtime.tmpdir)`、`$(runtime.ram)`、`$(runtime.cores)`、`$(runtime.outdirSize)`,"
" 以及 `$(runtime.tmpdirSize)` 等，详见 CWL 规约的 [Runtime "
"Environment][runtime]（运行环境）部分。"

#: ../../src/topics/best-practices.md:1 964bf8276dd04b65887448e1386e63fe
msgid "Best Practices"
msgstr "优良习惯"

#: ../../src/topics/best-practices.md:3 7b59377bd56c47b8a71c18acfba4d3bb
msgid ""
"The following are a set of recommended good practices to keep in mind "
"when writing a Common Workflow Language description for a tool or "
"workflow. These guidelines are presented for consideration on a scale of "
"usefulness: although more is better, not all are required."
msgstr "本节列举一组值得留心的好习惯，推荐您在用 CWL 编写工具或工作流描述时参考。您只需结合实际尽量做到，无需求全。"

#: ../../src/topics/best-practices.md:8 2292670347cd4549bc6a51e972de0ef4
msgid ""
"No `type: string` parameters for names of input or reference "
"files/directories; use `type: File` or `type: Directory` as appropriate."
msgstr ""
"不要将 `type: string` 参数用于输入或引用文件、目录的名称；请根据实际情况选用 `type: File` 或 `type: "
"Directory`."

#: ../../src/topics/best-practices.md:11 ae127b776eed4894af8cb680377703e0
msgid ""
"A CWL document (in conjunction with any external components like "
"`Dockerfile`s) is software code. Workflow developers should be aware that"
" the usual rules of software licensing apply to this document. For "
"example, if the workflow is shared publicly, licensing terms must be "
"clear so that a future user understands under what conditions they can "
"run the workflow, modify it and/or combine it with other workflows. For "
"this reason, please consider including a license field in the document. "
"The authors of this guide urge you to choose a pre-existing license "
"rather than trying to write your own (see the link below to learn more "
"about choosing a license), and our recommended practice is to choose a "
"license that allows for re-use by anyone, e.g. [Apache 2.0][apache-"
"license]."
msgstr ""
"CWL 文件（连同 `Dockerfile` 等外部组件）是一种软件代码。工作流开发人员应明白的是，关于软件许可的通用规则也同样适用于您编写的 "
"CWL "
"文件。例如，如果您的工作流是公开共享的，则许可条款一定要明确，以便将来的用户了解在什么条件下可以将它运行、修改、或并入其他工作流。因此，请考虑在 "
"CWL 文件中加入 "
"license（许可协议）字段。笔者敦促您选用现成的许可协议，不要独辟蹊径（关于挑选许可协议请参见下文链接）。同时，建议您选取允许任何人重复使用的许可证，如"
" [Apache 2.0][apache-license]."

#: ../../src/topics/best-practices.md:20 384eb620dc31468e8c3f5f33a3436200
msgid ""
"If possible, the license should be specified with its corresponding [SPDX"
" identifier][spdx]. Construct the metadata field for the license by "
"providing a URL of the form `https://spdx.org/licenses/[SPDX-ID]` where "
"`SPDX-ID` is taken from the list of identifiers linked above. See the "
"example snippet below for guidance. For non-standard licenses without an "
"SPDX identifier, provide a URL to the license."
msgstr ""
"请尽可能使用 [SPDX 标识符][spdx] 指定许可协议。许可协议的元数据字段由形如 `https://spdx.org/licenses"
"/[SPDX-ID]` 的 URL 构成，其中 `SPDX-ID` 取自前面链接提到的标识符列表，参见下例这段代码。对于没有 SPDX "
"标识符的非标准许可协议，请提供许可协议的 URL。"

#: ../../src/topics/best-practices.md:26 e8259b43fa6944eda73eae381db6b97b
msgid ""
"Useful reading: \"[A Quick Guide to Software Licensing for the Scientist-"
"Programmer][sci-license]\""
msgstr "相关阅读：《[给科学界程序员的软件许可简明指南][sci-license]》"

#: ../../src/topics/best-practices.md:28 5b976a5aec7d44bda55b0a019e955416
msgid "_Example of metadata field for license with SPDX identifier:_"
msgstr "_用 SPDX 标识符指定许可协议的元数据字段示例：_"

#: ../../src/topics/best-practices.md:37 924b8df24deb4c82b32732f491c9a246
#, fuzzy
msgid ""
"For more examples of providing metadata within CWL descriptions, see [the"
" Metadata and Authorship section of this User Guide](../topics/metadata-"
"and-authorship.md)."
msgstr ""
"关于在 CWL 描述中提供元数据的更多示例，请参见[《用户指南》的“元数据和著作权”一节](../topics/metadata-and-"
"authorship.md)。"

#: ../../src/topics/best-practices.md:40 9e64a9fc89cb45cfbff0e925cc91b1be
msgid ""
"Include [attribution information][license-example] for the author(s) of "
"the CWL tool or workflow description. Use unambiguous identifiers like "
"[ORCID][orcid]."
msgstr "为 CWL 工具或工作流描述的作者添加[署名信息][license-example]。请使用明确、独一无二的标识符，如[ORCID][orcid]."

#: ../../src/topics/best-practices.md:44 87030aef02044b8283c76debab4772bf
#, fuzzy
msgid ""
"In tool descriptions, list dependencies using short name(s) under "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement)."
msgstr "在工具描述中，将所依赖的软件在 `SoftwareRequirement` 下以简短的名称列出。"

#: ../../src/topics/best-practices.md:47 6c9eaae099fa4ca4b0986b1c4146df50
msgid ""
"Include [SciCrunch][scicrunch] identifiers for dependencies in "
"`https://identifiers.org/rrid/RRID:SCR_NNNNNN` format."
msgstr ""
"为依赖关系添加 [SciCrunch][scicrunch] 标识符。其格式形如 "
"`https://identifiers.org/rrid/RRID:SCR_NNNNNN`."

#: ../../src/topics/best-practices.md:50 5ae8950fd31541399c2fe59096581dbc
msgid ""
"All `input` and `output` identifiers should reflect their conceptual "
"identity. Use informative names like `unaligned_sequences`, "
"`reference_genome`, `phylogeny`, or `aligned_sequences` instead of  "
"`foo_input`, `foo_file`, `result`, `input`, `output`, and so forth."
msgstr ""
"一切 `input`（输入）和 `output`（输出）标识符均应体现其概念上的特质。请使用类似 "
"`unaligned_sequences`、`reference_genome`、 `phylogeny`、或 "
"`aligned_sequences` 这样望文知义的变量名，而非 "
"`foo_input`、`foo_file`、`result`、`input`、`output` 等缺乏明确内涵的名称。"

#: ../../src/topics/best-practices.md:55 b0493895105e43849bff2026763e472a
#, fuzzy
msgid ""
"In tool descriptions, include a list of version(s) of the tool that are "
"known to work with this description under "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement)."
msgstr "在工具描述中 `SoftwareRequirement` 下，请列出已知能与该描述兼容的工具版本。"

#: ../../src/topics/best-practices.md:58 88806cb0462f4359801c1fa0ff0ebcc0
msgid ""
"`format` should be specified for all input and output `File`s. "
"Bioinformatics tools should use format identifiers from [EDAM][edam-"
"example]. See also `iana:text/plain`, `iana:text/tab-separated-values` "
"with `$namespaces: { iana: \"https://www.iana.org/assignments/media-"
"types/\" }`. [Full IANA media type list][iana-types] (also known as MIME "
"types). For non-bioinformatics tools, use or build an appropriate "
"ontology/controlled vocabulary in the same way. Please edit this page to "
"let us know about it."
msgstr ""
"所有输入和输出 `File`（文件）都需要指明 `format`（格式）。生物信息学工具应使用来自 [EDAM][edam-example] "
"的格式标识符。另请参考 `iana:text/plain`、`iana:text/tab-separated-values` 等在 "
"`$namespaces: { iana: \"https://www.iana.org/assignments/media-types/\" }"
" 下使用的格式名，以及[IANA 媒体类型][iana-types]（又称 MIME "
"类型）的完整列表。对于非生物信息学工具，请同样运用或创建合适的本体或受控词表 (controlled vocabulary). "
"如果您对此有经验，请编辑此页面，以告知我们。"

#: ../../src/topics/best-practices.md:66 b178c7296ed5491782a4180c76883c14
msgid ""
"Mark all input and output `File`s that are read from or written to in a "
"streaming compatible way (only once, no random-access), as `streamable: "
"true`."
msgstr "将所有能作为流读写（即单次、非随机访问）的输入和输出 `File`（文件）标记为 `streamable: true`."

#: ../../src/topics/best-practices.md:69 886d15c1972243acadccff5760f842f1
#, fuzzy
msgid ""
"Each "
"[`CommandLineTool`](https://w3id.org/cwl/CommandLineTool.html#CommandLineTool)"
" description should focus on a single operation only, even if the "
"(sub)command is capable of more. Don't overcomplicate your tool "
"descriptions with options that you don't need or use."
msgstr ""
"即使某个命令或其子命令能够执行更多操作，每个 "
"`CommandLineTool`（命令行工具）描述也应侧重于单个操作。请勿添加非必需或用不到的选项，以免工作描述过于复杂。"

#: ../../src/topics/best-practices.md:73 ef5a5f9b253c4ca3916802a695fb7c6d
msgid ""
"Custom types should be defined with one external YAML per type definition"
" for re-use."
msgstr "关于自定义类型，每个外部 YAML 文件应与单个类型定义一一对应，以便重复使用。"

#: ../../src/topics/best-practices.md:76 ff59f40e84004523904e3094be07cc80
msgid "Include a top-level short `label` summarising the tool/workflow."
msgstr "请使用位于顶级的简短 `label`（标签）对工具或工作流加以概括。"

#: ../../src/topics/best-practices.md:78 78d73fde24e24beeab541a623d9530b6
msgid ""
"If useful, include a top-level `doc` as well. This should provide a "
"longer, more detailed description than was provided in the top-level "
"`label` (see above)."
msgstr "在用得到的时候，还应添加顶级 `doc`. 相比上述顶级 `label`, 此处应提供更长、更详细的描述。"

#: ../../src/topics/best-practices.md:82 d92013d662b44dbf8875e06c9dfbfd79
msgid ""
"Use `type: enum` instead of `type: string` for elements with a fixed list"
" of valid values."
msgstr "对于有效取值为若干固定值的元素，应使用 `type: enum` 而非 `type: string`."

#: ../../src/topics/best-practices.md:85 c100d5192a52497fb6a890b81a388fcf
msgid ""
"Evaluate all use of JavaScript for possible elimination or replacement. "
"One common example: manipulating `File` names and paths? Consider whether"
" one of the [built in `File` properties][file-prop] like `basename`, "
"`nameroot`, `nameext`, etc., could be used instead."
msgstr ""
"所有用到 JavaScript 之处都应进行评估，考虑是否能将它去除或替代。经常遇到的一例，是处理 `File` "
"（文件）名称和路径。这时应考虑是否能用 [`File` 的内置属性][file-prop]（如`basename`、`nameroot` 和 "
"`nameext` 等）取代 JavaScript."

#: ../../src/topics/best-practices.md:90 e22fbacdb2fb4202b1bd69cfc24af5cd
msgid ""
"Give the tool description to a colleague (preferably at a different "
"institution) to test and provide feedback."
msgstr "写好工具描述后， 把它交给同行（最好来自其他机构）进行测试并获取反馈。"

#: ../../src/topics/best-practices.md:93 0060a863362140f6bb3932cb5da1df04
msgid ""
"Complex workflows with individual components which can be abstracted "
"should utilise the [`SubworkflowFeatureRequirement`][subworkflow] to make"
" their workflow modular and allow sections of them to be easily reused."
msgstr ""
"若复杂的工作流中包含可以抽象出来的单独组件，应利用 [`SubworkflowFeatureRequirement`][subworkflow] "
"将工作流模块化，以便重复使用其组成部分。"

#: ../../src/topics/best-practices.md:97 93f6d6b544c24ce780184272f66bacab
msgid ""
"Software containers should be made to be conformant to the "
"[\"Recommendations for the packaging and containerizing of bioinformatics"
" software\"][containers] (also useful to other disciplines)."
msgstr ""
"应使软件容器 (container) 符合 [Recommendations for the packaging and "
"containerizing of bioinformatics "
"software][containers]（《生物信息学软件封装与容器化建议》）一文提出的标准。该文对其他学科也有参考价值。"

#: ../../src/topics/command-line-tool.md:1 a378a2f7d268401abfbbbe6e5090a952
msgid "Command Line Tool"
msgstr "命令行工具"

#: ../../src/topics/command-line-tool.md:3 cf0f1c00c0b34c94a8e2460a700c303e
msgid ""
"A command-line tool is a type of Process object that can be run by itself"
" or as a Workflow step. It is a wrapper for a command like `ls`, `echo`, "
"`tar`, etc. The command-line tool is defined in the `baseCommand` "
"attribute of the command-line tool CWL document."
msgstr ""
"命令行工具是可以单独运行或作为工作流步骤运行的一类流程 (process) 对象。它是诸如 `ls`、`echo`、`tar` "
"等命令的包装器，由相应的 CWL 文件中 `baseCommand` 这一属性定义。"

#: ../../src/topics/command-line-tool.md:8 7a180ba1f2d746a78b79be7e899cbad6
msgid ""
"A CWL command-line tool must also have `inputs` and `outputs`. The "
"following example contains a minimal example of a CWL command-line tool "
"for the `echo` Linux command, using inputs and outputs."
msgstr ""
"CWL 命令行工具还必具有 `inputs`（输入）和 `outputs`（输出）。以下是一个 CWL 命令行工具的极简示例，用 Linux 下的"
" `echo` 命令演示输入和输出。"

#: ../../src/topics/command-line-tool.md:19 128bd8cd6788431da54fa07a8dc87f99
msgid "CWL command-line tool."
msgstr "CWL 命令行工具。"

#: ../../src/topics/command-line-tool.md:50 d742e9e59ea44ca1a1df2de85059343f
msgid "`echo.cwl`"
msgstr "`echo.cwl`"

#: ../../src/topics/command-line-tool.md:57 e3a06ebe51b64b0183673a8acc04969f
msgid ""
"The example above uses a simplified form to define inputs and outputs. "
"You will learn more about in the [Inputs](../topics/inputs.md) and in the"
" [Outputs](../topics/outputs.md) sections."
msgstr ""
"上例以简化的形式定义了输入和输出。在[《输入》](../topics/inputs.md)和[《输出》](../topics/outputs.md)"
" 章节中，您将进一步学习。"

#: ../../src/topics/command-line-tool.md:68 2bab464d19d14562a6501373aff13905
msgid "Network Access"
msgstr "网络访问 (Network Access)"

#: ../../src/topics/command-line-tool.md:69 201712f3ceee4d4ea56ab96d3fef97b0
msgid ""
"This indicates whether a process requires outgoing IPv4/IPv6 network "
"access.  Starting with CWL v1.1, programs are not granted network access "
"by default, so you must include the requirement for network access in the"
" specification of your tool."
msgstr ""

#: ../../src/topics/command-line-tool.md:84 3282a357799f4a72a6b8bace206144c4
#, fuzzy
msgid ""
"CWL v1.0 command-line tools that are upgraded to v1.1 or v1.2 or v1.2 "
"will have `networkAccess: true` set automatically."
msgstr "从 CWL v1.0 版本升级到 1.1 或 1.2 版的命令行工具将自动获取网络访问权限。"

#: ../../src/topics/creating-files-at-runtime.md:1
#: 17c5b4ee43cc4a979676ad27e473d046
msgid "Creating Files at Runtime"
msgstr "在运行时创建文件"

#: ../../src/topics/creating-files-at-runtime.md:3
#: cd0dff10471c4ad2b84e3a0e4d7767ea
msgid ""
"Sometimes you need to create a file on the fly from input parameters, "
"such as tools that expect to read their input configuration from a file "
"rather than the command line parameters, or need a small wrapper shell "
"script."
msgstr ""
"有些情况下，您需要根据输入参数动态创建文件。例如有的工具需要通过文件（而非命令行参数）读取输入配置，还有的需要小型 shell 脚本作为包装器 "
"(wrapper)."

#: ../../src/topics/creating-files-at-runtime.md:7
#: bf4aea0a22334a1ca75cc20e937e6581
#, fuzzy
msgid ""
"To generate such files, we can use the "
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/CommandLineTool.html#InitialWorkDirRequirement)."
msgstr ""
"来自 "
"[`InitialWorkDirRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"

#: ../../src/topics/creating-files-at-runtime.md:9
#: 008f768d56b8465bb4e8f4fde15853a7
msgid "`createfile.cwl`"
msgstr "`createfile.cwl`"

#: ../../src/topics/creating-files-at-runtime.md:15
#: 252f8e897b0942a8be098481890005f3
msgid ""
"Any [expressions](../topics/expressions.md) like `$(inputs.message)` are "
"expanded by the CWL engine before creating the file. Here, insert the "
"value at the input `message`."
msgstr ""
"在创建文件之前，CWL引擎将扩展所有形如 `$(inputs.message)` "
"的[表达式](../topics/expressions.md)。此处将插入输入项`message` 实际的值。"

#: ../../src/topics/creating-files-at-runtime.md:20
#: aca24b72687c4d4d84bf9de8b71413f7
msgid ""
"The _CWL expressions_ are independent of any _shell variables_ used later"
" during command line tool invocation. That means that any genuine need "
"for the character `$` must be **escaped** with `\\`. For instance, "
"`\\${PREFIX}` above is expanded to `${PREFIX}` in the generated file to "
"be evaluated by the shell script instead of the CWL engine."
msgstr ""
"_CWL 表达式 _ 与后期在命令行工具调用时用到的任何 _shell 变量 _ 是相互独立的。这意味着，所有（后期）实际用到字符 `$` "
"的地方必须由 `\\` （斜线）字符加以** 转义 **。例如，上例中的 `\\${PREFIX}` 在生成的文件中扩展为 "
"`${PREFIX}`，以供 shell 脚本（而非 CWL 引擎）计算其值。"

#: ../../src/topics/creating-files-at-runtime.md:27
#: 750b3232e8754448bc2b5913539495b8
msgid ""
"To test the above CWL tool, use this job to provide the input value "
"`message`:"
msgstr "测试上述 CWL 工具时，请使用此作业提供输入项 `message` 的值："

#: ../../src/topics/creating-files-at-runtime.md:29
#: ../../src/topics/environment-variables.md:13 ../../src/topics/outputs.md:81
#: 687c8a84bade43269f3cd767d32f9f47 81da7a18fe8d4659abc883cf43009f1f
#: d5d67eae63304ebb9b242133feacb0d1
msgid "`echo-job.yml`"
msgstr "`echo-job.yml`"

#: ../../src/topics/creating-files-at-runtime.md:35
#: c4f964450d014734877fb3c968353a74
msgid ""
"Before we run this, let us look at each step in a little more detail. The"
" base command `baseCommand: [\"sh\", \"example.sh\"]` will execute the "
"command `sh example.sh`. This will run the file we create in the shell."
msgstr ""
"运行前，我们来细看一下每个步骤。基础命令 `baseCommand: [\"sh\", \"example.sh\"]` 将执行的命令是 `sh "
"example.sh`. 这将在 shell 中运行我们创建的文件。"

#: ../../src/topics/creating-files-at-runtime.md:40
#: 9aeea5a6a4244bc7a1626e0cb7351068
msgid ""
"`InitialWorkDirRequirement` requires a `listing`. As the `listing` is a "
"YAML array, we need a `-` on the first line of each element of the array,"
" in this case we have just one element. `entryname:` can have any value, "
"but it must match what was specified in the `baseCommand`. The final part"
" is `entry:`, this is followed by `|-` which is YAML quoting syntax, and "
"means that you are using a multiline string (without it, we would need to"
" write the whole script on one line)."
msgstr ""
"`InitialWorkDirRequirements` 需要一个 `listing`。由于 `listing` 是个 YAML "
"数组，我们需要在数组每个元素的首行添加一个 `-` 字符，不过本示例中只有一个元素。`entryname:` 可以取任何值，但它必须与 "
"`baseCommand` 中指定的值相匹配。最后的部分是 `entry:`，后面跟着 `|-`，这是 YAML "
"中表示引用的语法，意味着此处使用的是多行字符串（要是没有它，我们就得将整个脚本写在同一行之内）。"

#: ../../src/topics/creating-files-at-runtime.md:51
#: 867239e9ad3d4187a2703662a0ca3976
msgid ""
"See the [YAML Guide](../topics/yaml-guide.md#maps) for more about the "
"formatting."
msgstr "请参阅[《YAML 指南》 ](../topics/yaml-guide.md#maps) ，进一步了解代码格式。"

#: ../../src/topics/creating-files-at-runtime.md:54
#: ../../src/topics/environment-variables.md:18
#: ../../src/topics/file-formats.md:52
#: ../../src/topics/staging-input-files.md:20 ../../src/topics/workflows.md:198
#: 0d7151b9f0194197bd686fe6c9c47afd 78bb40eeeda24d7b923162daa45d51a7
#: 7b341a317347482ca86fc56119c3686f 7c637fa62cab4d0dbe670a3b72737cc9
#: cfb4605a01dd4475aabcc086a4e65957
msgid ""
"Now invoke `cwltool` with the tool description and the input object on "
"the command line:"
msgstr "现在，在命令行上以工具描述和输入对象为参数调用 `cwltool`:"

#: ../../src/topics/custom-types.md:1 252a3a17b1ec4d5a9a82ebbf6c2f314c
msgid "Custom Types"
msgstr "自定义类型"

#: ../../src/topics/custom-types.md:3 e0275ddda8f84207a58d10c17ca99a45
msgid ""
"Sometimes you may want to write your own custom types for use and reuse "
"in CWL descriptions. Use of such custom types can reduce redundancy "
"between multiple descriptions that all use the same type, and also allow "
"for additional customisation/configuration of a tool/analysis without the"
" need to fiddle with the CWL description directly."
msgstr ""
"有时您可能希望自己编写自定义的类型，以便用于 CWL "
"描述中并重复利用。在多个描述用到相同类型的情况下，使用这样的自定义类型可以删繁就简，还可以让我们对工具或分析进行额外的自定义和配置，而无需直接在 "
"CWL 描述上做手脚。"

#: ../../src/topics/custom-types.md:9 8367e38e5e7c4a298d1d87b9001aaddc
msgid ""
"The example below is a CWL description of the [biom convert format][biom]"
" tool for converting a standard biom table file to hdf5 format."
msgstr "下例用 CWL 描述了一个 [biom 转换格式][biom]工具，用于将标准 biom 表文件转换为 hdf5 格式。"

#: ../../src/topics/custom-types.md:12 18b802f45ce0454ab7aa2a21812863c6
msgid "`custom-types.cwl`"
msgstr "`custom-types.cwl`"

#: ../../src/topics/custom-types.md:18 66d1953f5dd54d448bddd0f30c330402
msgid "`custom-types.yml`"
msgstr "`custom-types.yml`"

#: ../../src/topics/custom-types.md:24 56b8912a1ea84f28adeb8beaf92ab563
msgid ""
"___Note:___ To follow the example below, you need to [download the "
"example input file](https://github.com/common-workflow-"
"language/user_guide/blob/main/src/_includes/cwl/custom-"
"types/rich_sparse_otu_table.biom), *rich_sparse_otu_table.biom* e.g. via "
"`wget`:"
msgstr ""
"___注意：___ 按照下例演练前，您需要先[下载示例输入文件](https://github.com/common-workflow-"
"language/user_guide/blob/main/src/_includes/cwl/custom-"
"types/rich_sparse_otu_table.biom) *rich_sparse_otu_table.biom*. 例如，使用 "
"`wget`:"

#: ../../src/topics/custom-types.md:30 a48539920c4944898918bc90b2d4e3c9
msgid ""
"On line 29, in `inputs:table_type`, a list of allowable table options to "
"be used in the table conversion are imported as a custom object:"
msgstr "在文件第 29 行，`inputs:table_type` 项目中，允许用于数据表转换的选项列表以自定义对象的形式导入："

#: ../../src/topics/custom-types.md:46 c791096f537141e8bd7cc941d711d108
msgid ""
"The reference to a custom type is a combination of the name of the file "
"in which the object is defined (`biom-convert-table.yaml`) and the name "
"of the object within that file (`table_type`) that defines the custom "
"type. In this case the `symbols` array from the imported `biom-convert-"
"table.yaml` file define the allowable table options. For example, in "
"`custom-types.yml`, we pass `OTU table` as an `input` that tells the tool"
" to create an OTU table in hdf5 format."
msgstr ""
"对自定义类型的引用由两部分构成：对象定义所在的文件名（`biom-convert-table.yaml` "
"），和该文件中定义该类型的对象名（`table_type` ）。这里，导入的 `biom-convert-table.yaml` 文件中的 "
"`symbols` 数组定义了允许的表选项。例如，在 `custom-types.yml` 中，我们把 `OTU table` 作为一个 "
"`input`（输入）传入，令工具创建一个 hdf5 格式的 OTU 表。"

#: ../../src/topics/custom-types.md:53 5f6bc6ed72334a74b9a4c46c29ddda46
msgid "The contents of the YAML file describing the custom type are given below:"
msgstr "描述自定义类型的 YAML 文件内容如下："

#: ../../src/topics/custom-types.md:55 3b55419088e8446994703220bd8e8480
msgid "`biom-convert-table.yaml`"
msgstr "`biom-convert-table.yaml`"

#: ../../src/topics/custom-types.md:61 fe6f4ce5e7344af0abea9d5c03e32ecd
msgid ""
"In order for the custom type to be used in the CWL description, it must "
"be imported. Imports are described in "
"`requirements:SchemaDefRequirement`, as below in the example `custom-"
"types.cwl` description:"
msgstr ""
"为了在 CWL 描述中使用自定义类型，必须首先导入。 关于导入的描述位于 `requirements:SchemaDefRequirement` "
"项，如下例 `custom-types.cwl` 所示："

#: ../../src/topics/custom-types.md:76 dce43b138ba24b22bfa9fa5692a17009
#, fuzzy
msgid ""
"Note also that the author of this CWL description has also included "
"[`ResourceRequirement`](https://w3id.org/cwl/CommandLineTool.html#ResourceRequirement)s,"
" specifying the minimum amount of RAM and number of cores required for "
"the tool to run successfully, as well as details of the version of the "
"software that the description was written for and other useful metadata. "
"These features are discussed further in other chapters of this user "
"guide."
msgstr ""
"另请注意，作者还在此 CWL 描述中加入了 `ResourceRequirement`, "
"指定了工具正常运行所需的最低内存容量和内核数、该描述针对的软件具体版本、以及其他有用的元数据。这些功能将在《用户指南》其他章节中进一步讨论。"

#: ../../src/topics/environment-variables.md:1 19737f89f2994815969fa4a88346f49a
msgid "Environment Variables"
msgstr "环境变量"

#: ../../src/topics/environment-variables.md:3 ad965f75aa0c41cda8b82c46af49774d
msgid ""
"Tools run in a restricted environment and do not inherit most environment"
" variables from the parent process.  You can set environment variables "
"for the tool using `EnvVarRequirement`."
msgstr "CWL 工具运行于受限环境中，大多数环境变量都不会从父进程继承。 您可以使用 `EnvVarRequirements` 为该工具设置环境变量。"

#: ../../src/topics/environment-variables.md:7 38b276f9b0114a0bb87734f0a07a736f
msgid "`env.cwl`"
msgstr "`env.cwl`"

#: ../../src/topics/expression-tool.md:1 9f33532119dc47ffb6ade20fb1d950bd
msgid "Expression Tool"
msgstr "表达式工具"

#: ../../src/topics/expression-tool.md:3 b267056eae704737af5aaada3ea7e6e2
msgid ""
"An expression tool is a type of Process that can be run by itself or as a"
" Workflow step. It executes a pure JavaScript expression. It is meant to "
"be used as a way to isolate complex JavaScript expressions that need to "
"operate on input data and produce some result as output."
msgstr ""
"表达式工具是一种类型的流程 (process), 可单独运行，或作为工作流的一个步骤运行。它执行纯 JavaScript 表达式，意在隔离复杂的 "
"JavaScript 表达式，以对输入数据进行运算，并生成结果作为输出。"

#: ../../src/topics/expression-tool.md:8 7e930144163e4d6e9f0bcaa764497ccf
#, fuzzy
msgid ""
"Similar to the command-line tool it requires `inputs` and `outputs`. But "
"instead of `baseCommand`, it requires an "
"[`expression`](https://w3id.org/cwl/CommandLineTool.html#Expressions_(Optional))"
" attribute."
msgstr ""
"与命令行工具一样，它需要 `inputs`（输入）和 `outputs`（输出），但与之不同的是，它需要的是 `expression` 属性，而非"
" `baseCommand`."

#: ../../src/topics/expression-tool.md:17 f172488c19a94d688036197117d30b38
msgid "CWL expression tool."
msgstr "CWL 表达式工具。"

#: ../../src/topics/expression-tool.md:48 ef978c951f1a4b7d9280d31367e5bae7
msgid "`uppercase.cwl`"
msgstr "`uppercase.cwl`"

#: ../../src/topics/expression-tool.md:67 0b63da31bc274b3cad798b07149592ab
#, fuzzy
msgid ""
"We had to use an "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement)"
" as our expression contains a JavaScript call in `.toUpperCase()`. This "
"means to tools using the expression tool that JavaScript is a "
"requirement."
msgstr ""
"因为我们的表达式在 `.toUpperCase()` 处含有一个 JavaScript 调用，所以必须使用 "
"`InlineJavascriptRequirements`. 这向使用表达式工具的其他工具表明 JavaScript 是必备条件。"

#: ../../src/topics/expressions.md:1 b0e567a985f748538552bdb486a47998
msgid "Expressions"
msgstr "表达式"

#: ../../src/topics/expressions.md:3 24d05cbbab8e460e99f2edc97ab0dcec
#, fuzzy
msgid ""
"If you need to manipulate input parameters, include the requirement "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement)"
" and then anywhere a parameter reference is legal you can provide a "
"fragment of Javascript that will be evaluated by the CWL runner."
msgstr ""
"如果需要对输入参数进行处理，请添加需求 `InlineJavascriptRequirement`. "
"然后，在可以合法引用参数的任何地方，您都可以提供一 JavaScript 片段，让 CWL 运行程序计算其值。"

#: ../../src/topics/expressions.md:9 3d48d1a8f7f74bc1886e41653cb53a22
msgid ""
"JavaScript expressions should only be used when absolutely necessary. "
"When manipulating file names, extensions, paths etc, consider whether one"
" of the [built in `File` properties][file-prop] like `basename`, "
"`nameroot`, `nameext`, etc, could be used instead. See the [list of best "
"practices](best-practices.md)."
msgstr ""
"JavaScript 表达式应当仅在绝对必要时使用。要处理文件名、扩展名、路径等，请优先考虑能否使用 "
"`basename`、`nameroot`、`nameext` 等 [`File` 内置属性][file-prop]。对此，请参阅[优良习惯一览"
"](best-practice.md)。"

#: ../../src/topics/expressions.md:16 7d444aacd418466bbe588fa964b45179
msgid "`expression.cwl`"
msgstr "`expression.cwl`"

#: ../../src/topics/expressions.md:22 72a0558a83964796a8c1a0eb55fd78e8
msgid ""
"As this tool does not require any `inputs` we can run it with an (almost)"
" empty job file:"
msgstr "由于此工具不需要任何 `inputs`（输入），因此运行的时候可以使用一个几乎为空的作业文件："

#: ../../src/topics/expressions.md:25 d679fd1363b24c81979c68e7342159cf
msgid "`empty.yml`"
msgstr "`empty.yml`"

#: ../../src/topics/expressions.md:31 d2ee4fcece744b6681f29322b5305111
msgid ""
"`empty.yml` contains a description of an empty JSON object. JSON objects "
"descriptions are contained inside curly brackets `{}`, so an empty object"
" is represented simply by a set of empty brackets."
msgstr ""
"`empty.yml` 的内容是一个空 JSON 对象的描述。JSON 对象描述是用大括号 `{}` "
"围起来的，因此，表示空对象仅需一对空括号就够了。"

#: ../../src/topics/expressions.md:35 624e4a270e374b1699b780df508b9184
msgid "We can then run `expression.cwl`:"
msgstr "然后我们可以运行 `expression.cwl`:"

#: ../../src/topics/expressions.md:37 c252eac9a35e46aab08bd07bc1cdb57d
msgid "Running `expression.cwl`"
msgstr "运行 `expression.cwl`"

#: ../../src/topics/expressions.md:47 f6f64d57a50742b19b801c14806ee18a
msgid ""
"Note that requirements can be provided with the map syntax, as in the "
"example above:"
msgstr "请注意，如上例所示，requirements（要求）可通过映射语法来提供："

#: ../../src/topics/expressions.md:54 052e24e2ad044cc28f04d7f39be871d6
msgid ""
"Or as an array, with each entry (in this case, only `class: "
"InlineJavascriptRequirement`) marked by a `-`. The same syntax is used to"
" describe the additional command line arguments."
msgstr ""
"也可以作为一个数组，每个元素均用 `-` 标记（本例中只有一个 `class: InlineJavascriptRequirement` "
"），就和描述额外命令行参数的语法一样。"

#: ../../src/topics/expressions.md:62 84b31c076d4b4826aae35e8c23fe6a25
msgid "Where are JavaScript expressions allowed?"
msgstr "哪里可以使用 JavaScript 表达式？"

#: ../../src/topics/expressions.md:64 8c3b402c40f64880a4bd42c47b910254
msgid ""
"Just like [parameter references](parameter-references.md), you can use "
"JavaScript Expressions only in certain fields.  These are:"
msgstr "JavaScript 表达式如同[参数引用](parameter-references.md)一样，只能用于某些特定字段，即："

#: ../../src/topics/expressions.md:66 9bf5ca0e769147c6a9705bc40bd1febc
msgid ""
"From "
"[`CommandLineTool`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"
msgstr ""
"来自 "
"[`CommandLineTool`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"

#: ../../src/topics/expressions.md:67
#: ../../src/topics/parameter-references.md:64 7ab0dbd54c1441539673fa12ef96b89e
#: e76c6ece0c594fefa86b190879c5acaa
msgid "`arguments`"
msgstr "`arguments`"

#: ../../src/topics/expressions.md:68 ../../src/topics/expressions.md:76
#: ../../src/topics/expressions.md:89
#: ../../src/topics/parameter-references.md:65
#: ../../src/topics/parameter-references.md:73
#: ../../src/topics/parameter-references.md:86 0209558b1013471eb708698537edaf06
#: 4458393fdb0e451f9806e91122ea2534 594a163e08f04aa5a04a44a303a1c643
#: a6fddc160afc4ef09717f69de72c11ce a9ec99ddcb344bcbbe5c1f59af0bcff2
#: af2cdb5f66ac4fd5b8f91258f005cc62
msgid "`valueFrom`"
msgstr "`valueFrom`"

#: ../../src/topics/expressions.md:69
#: ../../src/topics/parameter-references.md:66 afb175f182354cb19e23b1cad241437e
#: f9a6718845e24f46b76fcc8ab26eec7a
msgid "`stdin`"
msgstr "`stdin`"

#: ../../src/topics/expressions.md:70
#: ../../src/topics/parameter-references.md:67 3bce21dcc2da439daca80c4fcdf4c343
#: 7f5ce097ca0442a6a200599342a6e24b
msgid "`stdout`"
msgstr "`stdout`"

#: ../../src/topics/expressions.md:71
#: ../../src/topics/parameter-references.md:68 3397e8816f6a4d4b9af728c175f04917
#: 7b14686e16eb4f488659b22d67ec3bfa
msgid "`stderr`"
msgstr "`stderr`"

#: ../../src/topics/expressions.md:72 7a2d74aa018f4cab8c68e8775d83dd01
msgid ""
"From "
"[CommandInputParameter](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"
msgstr ""
"来自 "
"[CommandInputParameter](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"

#: ../../src/topics/expressions.md:73 ../../src/topics/expressions.md:78
#: ../../src/topics/expressions.md:85 ../../src/topics/expressions.md:93
#: ../../src/topics/parameter-references.md:70
#: ../../src/topics/parameter-references.md:75
#: ../../src/topics/parameter-references.md:82
#: ../../src/topics/parameter-references.md:90 24f27702d0684bc98e3232103510232e
#: 26a8dff7b80c4e059f1e20eef9da6203 476aa37af5214bcf963c7aab1f859273
#: 4b0a0cd934bd41b4b55c034b91392bc7 5182e2165e44429287b4d924c2f896a4
#: 7de500d3be6b4c3e8f274fd6a092109f 953d824a494947a3ab0ca2988717ee01
#: b301751f90af4700bbada5e5b166be35
msgid "`format`"
msgstr "`format`"

#: ../../src/topics/expressions.md:74 ../../src/topics/expressions.md:79
#: ../../src/topics/expressions.md:86 ../../src/topics/expressions.md:94
#: ../../src/topics/parameter-references.md:71
#: ../../src/topics/parameter-references.md:76
#: ../../src/topics/parameter-references.md:83
#: ../../src/topics/parameter-references.md:91 2c2b8db396b04ace8aa396c0a5a4858f
#: 33a9b77ce15b4910962a7f08bd2f47a3 57cba0191de3470bbe112ed2a0d3f252
#: 6efe998094b3469eae61cfff551b1eb1 776de1ecfafc41ada7e916addd7229fd
#: 8595d62eb0274b3a8a7f0adf058b51d3 988966a2d4844e73961b0358aff8f6e1
#: faa7d521fec240748407d03ffdb93aa0
msgid "`secondaryFiles`"
msgstr "`secondaryFiles`"

#: ../../src/topics/expressions.md:75 d737a9e9bf1c45d695bf584bc3241d9a
msgid ""
"From "
"[`inputBinding`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"
msgstr ""
"来自 "
"[`inputBinding`](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"

#: ../../src/topics/expressions.md:77 0e2052e16f6a41b8983dc64b4b3a7586
msgid ""
"From "
"[CommandOutputParamater](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)"
msgstr ""
"来自 "
"[CommandOutputParamater](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)"

#: ../../src/topics/expressions.md:80 dff31dd961d540e3b8cd1247e978d60e
msgid ""
"From "
"[CommandOutputBinding](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)"
msgstr ""
"来自 "
"[CommandOutputBinding](https://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)"

#: ../../src/topics/expressions.md:81
#: ../../src/topics/parameter-references.md:78 249aba7c38ce49379b9d35e7ad81a0bf
#: 5a354eb4883948e0a2b5c96b5ae12da7
msgid "`glob`"
msgstr "`glob`"

#: ../../src/topics/expressions.md:82
#: ../../src/topics/parameter-references.md:79 2325a310f2bc4d09b53b32c54efae2df
#: 9e477e2cfab24861b517fe2fb52962f4
msgid "`outputEval`"
msgstr "`outputEval`"

#: ../../src/topics/expressions.md:83
#: ../../src/topics/parameter-references.md:80 9448462d104b4be5904623c85a9e16b7
#: bf11a7a72147445c9b8e44b541e09f36
#, fuzzy
msgid "From [`Workflow`](https://w3id.org/cwl/Workflow.html)"
msgstr ""
"来自 "
"[WorkflowStepInput](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"

#: ../../src/topics/expressions.md:84 0d54a777a33d4f17a2f3390384a3c0c5
msgid ""
"From "
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[WorkflowOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#WorkflowOutputParameter)"
msgstr ""
"来自 "
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" 和 "
"[WorkflowOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#WorkflowOutputParameter)"

#: ../../src/topics/expressions.md:87
#: ../../src/topics/parameter-references.md:84 7918d0661be746faaddf25ad49172f30
#: b8439dbaa949427097e25ccb48fe15ee
msgid "From `steps`"
msgstr "来自 `steps`"

#: ../../src/topics/expressions.md:88 7b37eb600c9b4847a58a7e5077bef4c3
msgid ""
"From "
"[WorkflowStepInput](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
msgstr ""
"来自 "
"[WorkflowStepInput](https://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"

#: ../../src/topics/expressions.md:90
#: ../../src/topics/parameter-references.md:87 368ef005c2ca4b8599f76242f7178375
#: ab1ba7626eae483a8b614ee4cd5bab6f
msgid ""
"From "
"[ExpressionTool](https://www.commonwl.org/v1.0/Workflow.html#ExpressionTool)"
msgstr ""
"来自 "
"[ExpressionTool](https://www.commonwl.org/v1.0/Workflow.html#ExpressionTool)"

#: ../../src/topics/expressions.md:91
#: ../../src/topics/parameter-references.md:88 595b9ddcee734d6595c1b4b2d169dcb8
#: 80b55c77a4384644acfc9472c3cedee0
msgid "`expression`"
msgstr "`expression`"

#: ../../src/topics/expressions.md:92 fd504478a6c641e0a72321fa80ad1c9c
msgid ""
"From "
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[ExpressionToolOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)"
msgstr ""
"来自 "
"[InputParameter](https://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" 和 "
"[ExpressionToolOutputParameter](https://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)"

#: ../../src/topics/expressions.md:95 32b1a39cca1a4402af9bdc0abc4d70c8
msgid ""
"From "
"[`ResourceRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement)"
msgstr ""
"来自 "
"[`ResourceRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement)"

#: ../../src/topics/expressions.md:96
#: ../../src/topics/parameter-references.md:93 2518d499801e4bcf82e9e4666280504d
#: 98a511d138e9497c923963c2ca5f0a0b
msgid "`coresMin`"
msgstr "`coresMin`"

#: ../../src/topics/expressions.md:97
#: ../../src/topics/parameter-references.md:94 57a055b125f742dc8842b798b034161b
#: e84bc5505a6549ae9aacde8cb9225403
msgid "`coresMax`"
msgstr "`coresMax`"

#: ../../src/topics/expressions.md:98
#: ../../src/topics/parameter-references.md:95 98cd455e080f43749090270e7a61cb42
#: e698ea756fe94e99837312fb30c9f9bf
msgid "`ramMin`"
msgstr "`ramMin`"

#: ../../src/topics/expressions.md:99
#: ../../src/topics/parameter-references.md:96 8dfae10004a641fdb95c456c90a48d94
#: bef90c153d4f4397b1f69f9beb38f7e6
msgid "`ramMax`"
msgstr "`ramMax`"

#: ../../src/topics/expressions.md:100
#: ../../src/topics/parameter-references.md:97 47fddc711ce44086a7811bdfbd9167dd
#: e2bdf4fe676346cbb4443ee54fb7419b
msgid "`tmpdirMin`"
msgstr "`tmpdirMin`"

#: ../../src/topics/expressions.md:101
#: ../../src/topics/parameter-references.md:98 7d143ba98f1f4dfcbe08b70389d43092
#: 8f1665baca2e4e3b96026b50d132709a
msgid "`tmpdirMax`"
msgstr "`tmpdirMax`"

#: ../../src/topics/expressions.md:102
#: ../../src/topics/parameter-references.md:99 79bea45c2a484eda92c8578130b0b982
#: d169949866a24e31947dffcb94620c5f
msgid "`outdirMin`"
msgstr "`outdirMin`"

#: ../../src/topics/expressions.md:103
#: ../../src/topics/parameter-references.md:100
#: 8d2e01f2aa314f1cb1231f2e08f89ce5 d5417397b1e242ef9878ac77d2f65005
msgid "`outdirMax`"
msgstr "`outdirMax`"

#: ../../src/topics/expressions.md:104 08a66b2ab271494d810ff5834ca5c1bc
msgid ""
"From "
"[`InitialWorkDirRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"
msgstr ""
"来自 "
"[`InitialWorkDirRequirement`](https://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"

#: ../../src/topics/expressions.md:105
#: ../../src/topics/parameter-references.md:102
#: 21e9582891cf4b87a7ee4693663040fa 51bc6d1ccef14729a0d5e63b56d73d20
msgid "`listing`"
msgstr "`listing`"

#: ../../src/topics/expressions.md:106 7d8755f05d6541439f72ec9d6806d3fc
msgid "in [Dirent](https://www.commonwl.org/v1.0/CommandLineTool.html#Dirent)"
msgstr "来自 [Dirent](https://www.commonwl.org/v1.0/CommandLineTool.html#Dirent)"

#: ../../src/topics/expressions.md:107
#: ../../src/topics/parameter-references.md:104
#: 29c2424fc7dc43e68c9bfee179167bb3 30f25141bcce4670882e4a5bbe4fc3e2
msgid "`entry`"
msgstr "`entry`"

#: ../../src/topics/expressions.md:108
#: ../../src/topics/parameter-references.md:105
#: 02cfd4f1c3014e1eaa598a329dc5a95d d76fb015595e4194a7e15d714baaaf98
msgid "`entryname`"
msgstr "`entryname`"

#: ../../src/topics/expressions.md:109
#: ../../src/topics/parameter-references.md:106
#: 408f69a2df1343a78f93ff2ac0a994ea d37c78309e8b427f835af4fbd367e643
msgid "From `EnvVarRequirement`"
msgstr "来自 `EnvVarRequirement`"

#: ../../src/topics/expressions.md:110 53752bdff0974e39b2a86e8f2d96455f
msgid ""
"From "
"[EnvironmentDef](https://www.commonwl.org/v1.0/CommandLineTool.html#EnvironmentDef)"
msgstr ""
"来自 "
"[EnvironmentDef](https://www.commonwl.org/v1.0/CommandLineTool.html#EnvironmentDef)"

#: ../../src/topics/expressions.md:111
#: ../../src/topics/parameter-references.md:108
#: 242a12ec757947db894195c9aefba818 7b26b9972f7141bf950b3bb024b0e369
msgid "`envValue`"
msgstr "`envValue`"

#: ../../src/topics/expressions.md:116 93d6c90b49d8424f9283c384062ce333
msgid "Using External Libraries and Inline JavaScript Code with `expressionLib`"
msgstr "通过 `expressionLib` 使用外部库和内联 JavaScript 代码"

#: ../../src/topics/expressions.md:118 ea6cbaa5dae647538c0bd9a4d5cad3f9
#, fuzzy
msgid ""
"The requirement "
"[`InlineJavascriptRequirement`](https://w3id.org/cwl/CommandLineTool.html#InlineJavascriptRequirement)"
" supports an `expressionLib` attribute that allows users to load external"
" JavaScript files, or to provide inline JavaScript code."
msgstr ""
"`InlineJavascriptRequirements` 这一需求支持 `expressionLib` 属性，可以让用户加载外部 "
"JavaScript 文件或提供内联 JavaScript 代码。"

#: ../../src/topics/expressions.md:122 484dc17440524cfda4dc486a7c5d5f63
msgid ""
"Entries added to the `expressionLib` attribute are parsed with the "
"JavaScript engine of a CWL runner. This can be used to include external "
"files or to create JavaScript functions that can be called in other parts"
" of the CWL document."
msgstr ""
"添加到 `expressionLib` 属性的条目将由 CWL 运行程序的 JavaScript "
"引擎进行语法分析。这可以用来纳入外部文件中的代码，或创建可在 CWL 文件其他部分调用的 JavaScript 函数。"

#: ../../src/topics/expressions.md:128 5b2336cae1ef4cae8ed187d3f33cff25
msgid ""
"The CWL standards (versions 1.0 through 1.2) "
"[states](https://www.commonwl.org/v1.0/CommandLineTool.html#Expressions)"
"  that the only version of JavaScript valid in CWL expressions is "
"[ECMAScript 5.1](https://262.ecma-international.org/5.1/). This means "
"that any code that you include or write in your CWL Document must be "
"compliant with ECMAScript 5.1."
msgstr ""
"版本 1.0 到 1.2 的 CWL "
"标准中[写道](https://www.commonwl.org/v1.0/CommandLineTool.html#Expressions)，在"
" CWL 表达式中唯一有效的 JavaScript 版本是 [ECMAScript 5.1](https://262.ecma-"
"international.org/5.1/) . 也就是说，在 CWL 文件中纳入或写入的所有 JS 代码都必须符合该版本。"

#: ../../src/topics/expressions.md:135 32eca3a47efc4685bf7be706e123adbe
msgid ""
"For example, we can use `InlineJavascriptRequirement` and write a "
"JavaScript function inline in `expressionLib`. That function can then be "
"used in other parts of the CWL document:"
msgstr ""
"例如，我们可以使用 `InlineJavascriptRequirements`, 在 `expressionLib` 下编写内联 "
"JavaScript 函数，让它能在 CWL 文件其他部分调用："

#: ../../src/topics/expressions.md:139 6839a02fb82d45c29ae518f2b00cb9d5
msgid "`hello-world-expressionlib-inline.cwl`"
msgstr "`hello-world-expressionlib-inline.cwl`"

#: ../../src/topics/expressions.md:146 5b5e59fa1688499ea4560ee6f8023227
msgid ""
"Running this CWL workflow will invoke the JavaScript function and result "
"in the `echo` command printing the input message with capital initial "
"letters:"
msgstr "运行此 CWL 工作流将调用这个 JavaScript 函数，使得 `echo` 命令以大写首字母排印输入的“报文”："

#: ../../src/topics/expressions.md:149 a1e57c6833c848d3974cf448493ab924
msgid "Running `hello-world-expressionlib-inline.cwl`."
msgstr "运行 `hello-world-expressionlib-inline.cwl`."

#: ../../src/topics/expressions.md:155 1a4dfef06b5c4402bdb7e7dbd79eeb5d
msgid ""
"Let's move the `capitalizeWords` function to an external file, `custom-"
"functions.js`, and import it in our CWL document:"
msgstr "我们来将 `capitalizeWords` 函数移动到外部文件 `custom-functions.js`, 并将它导入我们的 CWL 文件："

#: ../../src/topics/expressions.md:158 71ac99c65d15451cbbf58d1e81934010
msgid "`custom-functions.js`"
msgstr "`custom-functions.js`"

#: ../../src/topics/expressions.md:164 60918e53189243d3872e61c7a4de20fc
msgid "`hello-world-expressionlib-external.cwl`"
msgstr "`hello-world-expressionlib-external.cwl`"

#: ../../src/topics/expressions.md:171 ad2a74bd983b47869dc78b2eb7b6fce1
msgid ""
"The `custom-functions.js` file is included in the CWL document with the "
"`$include: custom-functions.js` statement. That makes the functions and "
"variables available to be used in other parts of the CWL document."
msgstr ""
"文件 `custom-functions.js` 通过 `$include: custom-functions.js` 语句纳入到这个 CWL "
"文件里，使这个 JavaScript 文件中定义的函数和变量可在 CWL 文件其他部分使用。"

#: ../../src/topics/expressions.md:175 82c02dd2446b4de9a4c4b87736107b30
msgid "Running `hello-world-expressionlib-external.cwl`."
msgstr "运行 `hello-world-expressionlib-external.cwl`."

#: ../../src/topics/expressions.md:181 6fa7ebeffc7b44c6a12cd84897d186a1
msgid ""
"Finally, note that you can have both inline and external JavaScript code "
"in your CWL document. In this final example we have added another entry "
"to the `expressionLib` attribute with the new function "
"`createHelloWorldMessage`, that calls the `capitalizeWords` function from"
" the external file `custom-functions.js`."
msgstr ""
"最后请注意，CWL 文件中可以同时运用内联和外部 JavaScript 代码。下面是最后一个例子，这里我们向 `expressionLib` "
"属性中加入新函数 `createHelloWorldMessage`, 调用外部文件 `custom-functions.js` 中的 "
"`capitalizeWords` 函数。"

#: ../../src/topics/expressions.md:186 d34f3e688d2d49b6bfcda4c962895d8c
msgid "`hello-world-expressionlib.cwl`"
msgstr "`hello-world-expressionlib.cwl`"

#: ../../src/topics/expressions.md:193 9e2774fc35b14832a0f92b7afaafd537
msgid "Running `hello-world-expressionlib.cwl`."
msgstr "运行 `hello-world-expressionlib.cwl`."

#: ../../src/topics/expressions.md:200 8b797cfb232f4e5da51f6c21e9a8e7e3
msgid ""
"The `$include` statement can be used to include a file from the local "
"disk or from a remote location. It works with both relative and absolute "
"paths. Read the [text about "
"`$include`](https://www.commonwl.org/v1.0/SchemaSalad.html#Include) from "
"the CWL specification to learn more about it."
msgstr ""
"`$include` 语句可以用来添加位于本地或远程的文件，并且接受相对路径和绝对路径。详情请参见 CWL 规约中[关于 "
"`$include`](https://www.commonwl.org/v1.0/SchemaSalad.html#Include) 的内容。"

#: ../../src/topics/file-formats.md:1 ac906f26116c45d882e1afa42ae38e34
msgid "File Formats"
msgstr "文件格式"

#: ../../src/topics/file-formats.md:3 d99dab4f2f264c68b839b59b80d570e0
#, fuzzy
msgid ""
"Tools and workflows can take "
"[`File`](https://w3id.org/cwl/CommandLineTool.html#File) types as input "
"and produce them as output. We also recommend indicating the format for "
"[`File`](https://w3id.org/cwl/CommandLineTool.html#File) types. This "
"helps document for others how to use your tool while allowing you to do "
"some simple type-checking when creating parameter files."
msgstr ""
"`File` 类型既可作为工具和工作流的输入，也可以成为它们生成的输出。另外，我们建议指明 `File` "
"类型的格式，以便向他人说明您的工具如何使用，同时还能让您在创建参数文件时进行简单的类型检验。"

#: ../../src/topics/file-formats.md:8 23ba3dd26f5543119e2c152105b58e98
msgid ""
"For file formats, we recommend referencing existing ontologies (like EDAM"
" in our example), reference a local ontology for your institution, or do "
"not add a file format initially for quick development before sharing your"
" tool with others. You can browse existing [IANA file format "
"listings][IANA] and [EDAM file format listings][EDAM] on their websites."
msgstr ""
"对于文件格式，我们建议参考现有本体（如示例中的 "
"EDAM）或您所在机构内部使用的本体，不然，则在与他人共享工具之前不要先添加文件格式，以便快速开发。您可以通过网站浏览现有的 "
"[IANA][IANA] 和 [EDAM 文件格式列表][EDAM]。"

#: ../../src/topics/file-formats.md:14 81c441846fc249c58607bacf97095eb8
msgid ""
"In the next tutorial, we explain  the `$namespaces` and `$schemas` "
"section of the document in greater detail, so don't worry about these for"
" now."
msgstr "我们将在下一篇教程中更详细地解释文件中的 `$namespaces` 和 `$schemas` 部分，眼下无需为此分心。"

#: ../../src/topics/file-formats.md:17 c04841dbf4be4cf8a22cceca8b08bd14
msgid ""
"Note that for added value `cwltool` can do some basic reasoning based on "
"file formats and warn you if there seem to be some obvious mismatches."
msgstr "请注意， `cwltool` 有一项附加功能，即依据文件格式做一些初步推断，一旦出现较明显的不匹配则发出警告。"

#: ../../src/topics/file-formats.md:20 c5f6f6e4c23e4bf19dee69acb8ebed8e
msgid "`metadata_example.cwl`"
msgstr "`metadata_example.cwl`"

#: ../../src/topics/file-formats.md:26
#: ../../src/topics/metadata-and-authorship.md:22
#: 20e97d58596a4a959ad76ec6128ac414 4e070ae9110d437bbf008b0c60a00cd5
msgid "The equivalent of this CWL description in command line format is:"
msgstr "这一 CWL 描述的等效命令行形式为："

#: ../../src/topics/file-formats.md:32 632e441919094610b97afc17e9c5e625
msgid "Sample Parameter Files"
msgstr "参数文件样本"

#: ../../src/topics/file-formats.md:34 afd8633db1904897aa3e499354b1c376
msgid ""
"Below is an example of a parameter file for the example above. We "
"encourage checking in working examples of parameter files for your tool. "
"This allows others to quickly work with your tool, starting from a "
"\"known good\" parameterization."
msgstr "以上例子的样本参数文件见下。我们提倡为您的工具加入经您测试可用的参数文件样例，这将帮助他人从做好的“合格品”参数文件入手，更快地上手操作您的工具。"

#: ../../src/topics/file-formats.md:39 bb69d6963c174191bf527335c3f665b7
msgid "`sample.yml`"
msgstr "`sample.yml`"

#: ../../src/topics/file-formats.md:45 ddb4f6f81c7d462b974e98c88dd3f558
msgid ""
"___Note:___ To follow the example below, you need to download the example"
" input file, *file-formats.bam*. The file is available from "
"<https://github.com/common-workflow-"
"language/user_guide/raw/main/src/_includes/cwl/file-formats/file-"
"formats.bam>  and can be downloaded e.g. via `wget`:"
msgstr ""
"___注意：___ 按照下例演练前，您需要先下载示例输入文件 *file-formats.bam*. 该文件位于 "
"<https://github.com/common-workflow-"
"language/user_guide/raw/main/src/_includes/cwl/file-formats/file-"
"formats.bam>, 可以用 `wget` 等工具下载："

#: ../../src/topics/index.md:1 2995cd4fb85c423dba021611dac4a137
msgid "Topics"
msgstr "主题"

#: ../../src/topics/inputs.md:1 3bac021fe7614d74ae701fb3c3765b93
msgid "Inputs"
msgstr "输入 (inputs)"

#: ../../src/topics/inputs.md:3 8bb3ee0cd0fc4d85ba007431fc541973
msgid "Essential Input Parameters"
msgstr "基本输入参数"

#: ../../src/topics/inputs.md:5 17365707f58242369dd6aa73fc8d7242
msgid ""
"The `inputs` of a tool is a list of input parameters that control how to "
"run the tool.  Each parameter has an `id` for the name of parameter, and "
"`type` describing what types of values are valid for that parameter."
msgstr ""
"工具的 `inputs`（输入）用于列出控制工具运行方式的输入参数。每个参数都包含 `id` 字段作为名称，以及 `type` "
"字段描述有效参数值的类型。"

#: ../../src/topics/inputs.md:9 521cb5dead5d4e9ab5ff037fb4b683cb
#, fuzzy
msgid ""
"Available primitive types are *string*, *boolean*, *int*, *long*, "
"*float*, *double*, and *null*; complex types are *array* and *record*; in"
" addition there are special types *File*, *Directory* and *Any*."
msgstr ""
"可用的原始类型有 *string*（字符串）、 *int*（整型）、*long*（长整型）、 "
"*float*（浮点数）、*double*（双精度浮点数）以及 *null*（空）等；复合类型指的是 *array*（数组）和 "
"*record*（记录）；此外还有特殊类型 *File*（文件）、*Directory*（目录）以及 *Any*（任意）等。"

#: ../../src/topics/inputs.md:13 fbdf2c1bed3e41d7a41ec6b14d134a98
msgid ""
"The following example demonstrates some input parameters with different "
"types and appearing on the command line in different ways."
msgstr "下面的例子展示了一些类型各异、以不同方式出现在命令行上的输入参数。"

#: ../../src/topics/inputs.md:16 008f79cdf0074c73948bf50deb0a8a47
msgid "First, create a file called `inp.cwl`, containing the following:"
msgstr "首先，创建一个名为 `inp.cwl` 的文件，包含以下内容："

#: ../../src/topics/inputs.md:18 94cd3f10e94f4735bd3ae7dc168e5deb
msgid "`inp.cwl`"
msgstr "`inp.cwl`"

#: ../../src/topics/inputs.md:24 b339be370e8742b69400c8040ad7d15b
msgid "Create a file called `inp-job.yml`:"
msgstr "创建名为 `inp-job.yml` 的文件："

#: ../../src/topics/inputs.md:26 78974fb2475947ccb8b8c55e34df5fa6
msgid "`inp-job.yml`"
msgstr "`inp-job.yml`"

#: ../../src/topics/inputs.md:33 9cc4a60d01f945aa9b4c43afcf20098b
#, fuzzy
msgid ""
"You can use `cwltool` to create a template input object. That saves you "
"from having to type all the input parameters in an input object file:"
msgstr "您可以用 `cwltool` 创建模板输入对象，以省去在输入对象文件中一一键入输入参数："

#: ../../src/topics/inputs.md:40 5ac6da11d56446de97c251a37d997671
msgid ""
"You can redirect the output to a file, i.e. `cwltool --make-template "
"inp.cwl > inp-job.yml`, and then modify the default values with your "
"desired input values."
msgstr ""
"您可将输出重定向到一个文件：`cwltool --make-template inp.cwl &gt; inp-"
"job.yml`，然后将生成的默认值改为您想要的输入值。"

#: ../../src/topics/inputs.md:44 6a3edb0d259d4d7c900dd9811f978d4e
msgid ""
"Notice that \"example_file\", as a `File` type, must be provided as an "
"object with the fields `class: File` and `path`."
msgstr "注意，“example_file” 属于 `File`（文件）类型，因此必须作为含有 `class: File` 和 `path` 字段的对象出现。"

#: ../../src/topics/inputs.md:47 f1d76be7ba0b48f4b605581d0a9a5c72
msgid ""
"Next, create a whale.txt using [touch] by typing `touch whale.txt` on the"
" command line."
msgstr "然后，在命令行键入 `touch whale.txt`, 用 [touch] 命令创建文件 whale.txt."

#: ../../src/topics/inputs.md:53 8cabfa0cbcfd4a5aa30d1aabd412136d
msgid ""
"Now invoke `cwltool` with the tool description and the input object on "
"the command line, using the command `cwltool inp.cwl inp-job.yml`. The "
"following boxed text describes these two commands and the expected output"
" from the command line:"
msgstr ""
"现在，使用 `cwltool inp.cwl inp-job.yml` 命令，即指定工具描述和输入对象、通过命令行调用 `cwltool`. "
"下方文本框描述了这两个命令及命令行的预期输出："

#: ../../src/topics/inputs.md:64 5c78d7824ef34636ae2ed68d524d79e8
msgid ""
"The CWL reference runner (cwltool) and other runners create temporary "
"directories with symbolic (\"soft\") links to your input files to ensure "
"that the tools aren't accidentally accessing files that were not "
"explicitly specified"
msgstr ""
"CWL 参考运行程序 (cwltool) "
"和其他运行程序会建立临时目录，在其中创建指向您文件的符号链接（又称“软”链接），以防工具意外访问未经明文指定的文件"

#: ../../src/topics/inputs.md:70 5bdf77c45346445d8f93353c1e73f768
#, fuzzy
msgid ""
"The field "
"[`inputBinding`](https://w3id.org/cwl/CommandLineTool.html#Input_binding)"
" is optional and indicates whether and how the input parameter should "
"appear on the tool's command line.  If `inputBinding` is missing, the "
"parameter does not appear on the command line.  Let's look at each "
"example in detail."
msgstr ""
"字段 `inputBinding` 为可选项，用来说明该输入参数是否应出现在工具的命令行上、以何种方式出现。 如果没有 "
"`inputBinding`, 则该参数不会出现在命令行上。 我们来仔细看看每个示例。"

#: ../../src/topics/inputs.md:83 d783fe52e86f4feda33ea0eecb622603
msgid ""
"Boolean types are treated as a flag.  If the input parameter "
"\"example_flag\" is \"true\", then `prefix` will be added to the command "
"line.  If false, no flag is added."
msgstr ""
"布尔类型的处理相当于一种“旗标”。如果输入参数“example_flag”为“true”（真），则 `prefix` "
"会被添加到命令行，否则将不添加旗标。"

#: ../../src/topics/inputs.md:95 f99fb9a6d0374ef78503815d4db9006d
msgid ""
"String types appear on the command line as literal values.  The `prefix` "
"is optional, if provided, it appears as a separate argument on the "
"command line before the parameter .  In the example above, this is "
"rendered as `--example-string hello`."
msgstr ""
"字符串类型以字面值 (literal value) 的方式出现在命令行上。 `prefix` "
"是可选的；如果提供，它将作为单独的参数，在命令行上出现在参数值之前。上例中，相应的结果是 `--example-string hello`."

#: ../../src/topics/inputs.md:109 b106eed01c1744a792368f91f547e553
msgid ""
"Integer (and floating point) types appear on the command line with "
"decimal text representation.  When the option `separate` is false (the "
"default value is true), the prefix and value are combined into a single "
"argument.  In the example above, this is rendered as `-i42`."
msgstr ""
"整型和浮点型以其十进制表示，作为文本出现在命令行上。 若选项 `separate` 为 false（伪，默认为 true "
"真），前缀将和它的值合并为一个参数。上例中，其产物为 `-i42`."

#: ../../src/topics/inputs.md:124 1c70336741a842a5b16b687642d1d9b4
msgid ""
"File types appear on the command line as the path to the file.  When the "
"parameter type ends with a question mark `?` it indicates that the "
"parameter is optional.  In the example above, this is rendered as "
"`--file=/tmp/random/path/whale.txt`.  However, if the \"example_file\" "
"parameter were not provided in the input, nothing would appear on the "
"command line."
msgstr ""
"文件类型在命令行上以文件路径的方式出现。参数类型末尾如有问号 `?` 意指该参数为可选。上例中，这一部分的命令行产物是 "
"`--file=/tmp/random/path/whale.txt`. "
"不过，如果输入中未提供“example_file”参数，则不会在命令行上加入任何内容。"

#: ../../src/topics/inputs.md:131 9294c07c672b414f9c3895ed70b9b4ee
msgid ""
"Input files are read-only.  If you wish to update an input file, you must"
" [first copy it to the output directory](staging-input-files.md)."
msgstr "输入文件是只读的。 如果要更新输入文件，必须将它[事先复制到输出目录](staging-input-files.md)。"

#: ../../src/topics/inputs.md:134 a07137c36e63495f836c483fd472904f
msgid ""
"The value of `position` is used to determine where parameter should "
"appear on the command line.  Positions are relative to one another, not "
"absolute.  As a result, positions do not have to be sequential, three "
"parameters with positions 1, 3, 5 will result in the same command line as"
" 1, 2, 3.  More than one parameter can have the same position (ties are "
"broken using the parameter name), and the position field itself is "
"optional.  The default position is 0."
msgstr ""
"`position`（位置）的值用于指定参数在命令行上应出现的位置 — "
"并非绝对位置，而是彼此间的相对顺序。这意味着，位置值不一定要连续；`position` 值为 1、3、5 的三个参数生成的命令行将与其值分别为 "
"1、2、3 时相同。 多个参数可能有相同的 `position` 值（这种情况下由参数名进一步决定顺序），而且 `position` "
"字段本身是可选的。 默认的位置是0."

#: ../../src/topics/inputs.md:142 7513adabd3ae4701b17f578ac9f321d7
msgid ""
"The `baseCommand` field will always appear in the final command line "
"before the parameters."
msgstr "`baseCommand` 字段一定会出现在最终生成的命令行中，而且位于所有参数之前。"

#: ../../src/topics/inputs.md:146 c3c82d25a75941b0b50a4a6bb826568f
msgid "Array Inputs"
msgstr "数组输入"

#: ../../src/topics/inputs.md:148 b11a5c7a13b345939e4ae15e1e2c0786
msgid ""
"It is easy to add arrays of input parameters represented to the command "
"line. There are two ways to specify an array parameter. First is to "
"provide `type` field with `type: array` and `items` defining the valid "
"data types that may appear in the array. Alternatively, brackets `[]` may"
" be added after the type name to indicate that input parameter is array "
"of that type."
msgstr ""
"将以数组形式出现的参数添加至命令行很简单。指定数组参数有两种办法。第一种是在 `type` 字段下给出 `type: array`, 并且用 "
"`items` 定义数组中允许出现的有效数据类型。另一种办法，是在类型的名称后添加方括号 `[]`，以表明输入参数为此类型的数组。"

#: ../../src/topics/inputs.md:154 aa00bcfc6c0f4085ae52621a2f4ae8d9
msgid "`array-inputs.cwl`"
msgstr "`array-inputs.cwl`"

#: ../../src/topics/inputs.md:160 e730b2b9bace4427bdd045556963634f
msgid "`array-inputs-job.yml`"
msgstr "`array-inputs-job.yml`"

#: ../../src/topics/inputs.md:166 ../../src/topics/outputs.md:86
#: ../../src/topics/outputs.md:109 015a0f00c2b245e2b0e87735926da736
#: 390384208d7b4771888f164b587c7b9a edb3ae59c48945f29c3086b16a5265d3
msgid ""
"Now invoke `cwltool` providing the tool description and the input object "
"on the command line:"
msgstr "现在，调用命令 `cwltool` 并为它提供工具描述和输入对象："

#: ../../src/topics/inputs.md:178 13e59751d43b49f0ac366538a14f9c84
msgid ""
"The `inputBinding` can appear either on the outer array parameter "
"definition or the inner array element definition, and these produce "
"different behavior when constructing the command line, as shown above. In"
" addition, the `itemSeparator` field, if provided, specifies that array "
"values should be concatenated into a single argument separated by the "
"item separator string."
msgstr ""
"`inputBinding` "
"既可以出现在外部，即数组参数本身的定义中，也可以出现在内部，即数组元素的定义中。如上所示，这两种定义方式在构建命令行时所产生的行为是不一样的。另外，`itemSeparator`（项目分隔符）字段如果出现，则指明数组各元素的值应并入单独的一个参数，以指定的项目分隔符插入相邻的元素值之间。"

#: ../../src/topics/inputs.md:185 bb31c6784ea843ec88f185523cfa25df
msgid ""
"Note that the arrays of inputs are specified inside square brackets `[]` "
"in `array-inputs-job.yml`. Arrays can also be expressed over multiple "
"lines, where array values that are not defined with an associated key are"
" marked by a leading `-`. This will be demonstrated in the next lesson "
"and is discussed in more detail in the [YAML Guide](yaml-"
"guide.md#arrays). You can specify arrays of arrays, arrays of records, "
"and other complex types."
msgstr ""
"请注意，在 `array-inputs-job.yml` 中，数组输入由方括号 `[]` 指定。表达数组的另一种形式是多行句法，即用行首的 `-`"
" 标明数组元素，示意它并非键值。下一课中将演示后一种用法，在[《YAML 指南》](yaml-guide.md#arrays) "
"中也有详细讨论。可以指定的数组包括数组的数组、记录的数组及其他复合类型的数组。"

#: ../../src/topics/inputs.md:191 53817379078548b2aeb6195cae9cbab7
msgid "Inclusive and Exclusive Inputs"
msgstr "相容和互斥输入"

#: ../../src/topics/inputs.md:193 e163c0cfe9694a85b2e42682f42970a5
msgid ""
"Sometimes an underlying tool has several arguments that must be provided "
"together (they are dependent) or several arguments that cannot be "
"provided together (they are exclusive).  You can use records and type "
"unions to group parameters together to describe these two conditions."
msgstr ""
"有时，基础工具具有多个必须一起提供的参数（它们是相互依赖的）或多个不能一起提供的参数（它们是互斥的）。 您可以使用记录类型或共用体 (union)"
" 类型将参数加以组合，以分别描述这两种情况。"

#: ../../src/topics/inputs.md:198 84e1ab25511c49d1baabb1f80f247b49
msgid "`record.cwl`"
msgstr "`record.cwl`"

#: ../../src/topics/inputs.md:204 3d5dfc8ee47b458db638a9eed84b4938
msgid "`record-job1.yml`"
msgstr "`record-job1.yml`"

#: ../../src/topics/inputs.md:215 ecfb1d911a84400ba3db12fd0adf9279
msgid ""
"In the first example, you can't provide `itemA` without also providing "
"`itemB`."
msgstr "在第一个示例中，一旦提供 `itemA` 就必须同时提供 `itemB`."

#: ../../src/topics/inputs.md:217 24ba804374b4471d8e925d80670f9dff
msgid "`record-job2.yml`"
msgstr "`record-job2.yml`"

#: ../../src/topics/inputs.md:233 436707d9c7634732ad1e60d8294bd4ba
msgid ""
"In the second example, `itemC` and `itemD` are exclusive, so only the "
"first matching item (`itemC`) is added to the command line and remaining "
"item (`itemD`) is ignored."
msgstr ""
"在第二个示例中，`itemC` 和 `itemD` 是互斥的。因此，只有第一个匹配项 (`itemC`) 会添加到命令行，而余下的 "
"(`itemD`) 将被忽略。"

#: ../../src/topics/inputs.md:236 01b168c5faf94ead8d836dfe39e4c592
msgid "`record-job3.yml`"
msgstr "`record-job3.yml`"

#: ../../src/topics/inputs.md:252 e6d81d6549984689bae4533c6d01bd5b
msgid ""
"In the third example, only `itemD` is provided, so it appears on the "
"command line."
msgstr "在第三个示例中，仅提供了 `itemD`, 因此它出现在命令行上。"

#: ../../src/topics/inputs.md:255 ffddeeda8f04408ba73f7a59a4618da5
msgid "Exclusive Input Parameters with Expressions"
msgstr "互斥输入参数与表达式"

#: ../../src/topics/inputs.md:257 cf22f21ec44c483986979316544a7c3b
#, fuzzy
msgid ""
"If you use exclusive input parameters and reference them in expressions, "
"you need to be aware that the `inputs` JavaScript object will contain one"
" of the possible, mutually-exclusive input values. Because the types of "
"these exclusive values may differ, you may need to check which type is in"
" use when you reference the properties of the `input` object."
msgstr ""
"将互斥的输入参数与表达式结合使用时，需要注意 `inputs` 这个 JavaScript "
"对象可能包含互斥输入值中的任何一个。这意味着你可能需要用逻辑“**或**”运算符来检查哪些值是存在的。"

#: ../../src/topics/inputs.md:263 0fecb128b19b44d796b6c1b6de4f7166
msgid ""
"Let's use an example that contains an exclusive `file_format` input "
"parameter that accepts `null` (i.e. no value provided), or any value from"
" an enum."
msgstr ""
"我们来看一个例子，其中 `file_format` 输入参数的取值是互斥的。该参数接受 "
"`null`（即未提供任何值），或一个特定的枚举类型所包括的值。"

#: ../../src/topics/inputs.md:266 7f1941698a6046e9b9e8a53736af949a
msgid "`exclusive-parameter-expressions.cwl`"
msgstr "`exclusive-parameter-expressions.cwl`"

#: ../../src/topics/inputs.md:272 60b585142f06489d9f48090b664b6d32
#, fuzzy
msgid ""
"Note how the JavaScript expression uses the value of the exclusive input "
"parameter without taking into consideration a `null` value. If you "
"provide a valid value, such as `fasta` (one of the possible values of the"
" enum), your command should execute successfully:"
msgstr ""
"请注意，这里的 JavaScript 表达式用到了互斥输入参数的值，但没有考虑到空值 `null` 的情况。如果提供的值有效，比如 “fasta”"
" （枚举中的一个值），命令将会成功执行："

#: ../../src/topics/inputs.md:281 11fdeb057d674f118830f431ff019c15
#, fuzzy
msgid ""
"However, if you do not provide any input value, then `file_format` will "
"be evaluated to `null`, which does not match the expected type for the "
"output field (a `string`), resulting in failure when running your "
"workflow."
msgstr ""
"但是，如果未提供任何输入值，则 `file_format` 的值为 `null`, 从而不符合输出字段的预期类型（字符串 "
"`string`），导致工作流运行失败。"

#: ../../src/topics/inputs.md:290 8594cca9d93b4280b6cfee64c8a7c578
#, fuzzy
msgid ""
"To correct it, you should explicitly handle the possibility of a `null` "
"value. For example, the expression could be changed to "
"`$(inputs.file_format || 'auto')`, to have a default value `\"auto\"` if "
"none was provided in the command line or job input file."
msgstr ""
"为了修正这个问题，需要记住的，是在 JavaScript 表达式中使用互斥参数或任何允许为空 (`null`) "
"的参数时，应使用逻辑“或”运算符。例如，表达式可以修改为 `$(inputs.file_format || 'auto')`, "
"从而在命令行或作业输入文件未提供值的情况下有默认值可用。"

#: ../../src/topics/inputs.md:295 b5055c77f85e43609fe3e9b9839778e3
msgid ""
"Here, the boolean “or” operator `||` in JavaScript is used for its "
"_short-circuiting_ property. If `inputs.file_format` is “true” in a "
"boolean context (e.g. a valid non-empty string from the enum), the "
"evaluation of the expression stops at the first operand of `||`; it "
"“short-circuits”. If however `inputs.file_format` is `null`, the whole "
"expression’s value becomes that of the second operand, which is why a "
"reasonable default can be provided there."
msgstr ""

#: ../../src/topics/metadata-and-authorship.md:1
#: 723c2232310c4276aeac2bd6728d2912
msgid "Metadata and Authorship"
msgstr "元数据和著作人信息"

#: ../../src/topics/metadata-and-authorship.md:3
#: 4d81aac1830045229e5c60c7959074d8
msgid ""
"Implementation extensions not required for correct execution (for "
"example, fields related to GUI presentation) and metadata about the tool "
"or workflow itself (for example, authorship for use in citations) may be "
"provided as additional fields on any object. Such extensions fields (e.g."
" `format: edam:format_2572`) can use a namespace prefix listed in the "
"`$namespaces` section of the document (e.g. edam: "
"http://edamontology.org/) as described in the [Schema Salad specification"
"][schema-salad]. Once you add the namespace prefix, you can access it "
"anywhere in the document as shown below. Otherwise, one must use full "
"URLs: `format: http://edamontology.org/format_2572`."
msgstr ""
"由某个实现所提供的非必需、不影响正确执行的扩展（如关于图形界面中展示的字段），以及关于工具或工作流本身的元数据（如用于引文的作者信息），都可以作为任意对象的附加字段提供。这种扩展字段（形如"
" `format: edam:format_2572`）可以使用文件 `$namespaces`（命名空间）部分依照 [Schema Salad "
"规约][schema-salad]的要求列举的命名空间前缀（例如 "
"`edam：http://edamontology.org/`）。如下所示，一旦添加了命名空间前缀，便可在文档的任何位置使用它。否则，必须使用完整的"
" URL: `format: http://edamontology.org/format_2572`."

#: ../../src/topics/metadata-and-authorship.md:13
#: 368f8993ae9d401488081d74ae5acd49
msgid ""
"For all developers, we recommend the following minimal metadata for your "
"tool and workflows. This example includes metadata allowing others to "
"cite your tool."
msgstr "我们建议所有的开发者为自己编写的工具和工作流提供类似下面所示的精简版元数据。此例中的元数据向他人说明如何在文献中引用你的工具。"

#: ../../src/topics/metadata-and-authorship.md:16
#: c80f2b180ca74afb8a1fc18f8686304b
msgid "`metadata_example2.cwl`"
msgstr "`metadata_example2.cwl`"

#: ../../src/topics/metadata-and-authorship.md:28
#: 37b07ea9b7124842b8ba3040f70308e9
msgid "Extended Example"
msgstr "进一步扩展的例子"

#: ../../src/topics/metadata-and-authorship.md:30
#: 1cd5989ade6741aabe625c13bed3c8ed
msgid ""
"For those that are highly motivated, it is also possible to annotate your"
" tool with a much larger amount of metadata. This example includes EDAM "
"ontology tags as keywords (allowing the grouping of related tools), hints"
" at hardware requirements in order to use the tool, and a few more "
"metadata fields."
msgstr ""
"如果您积极性更高，也可以加入更多的元数据来注释工具。此例中加入了 EDAM "
"本体标签作为关键字（以便将彼此关联的工具分组）、关于硬件要求的软性提示，以及其他元数据字段。"

#: ../../src/topics/metadata-and-authorship.md:35
#: ae7369ba14404d23b72d1ef30dcd4153
msgid "`metadata_example3.cwl`"
msgstr "`metadata_example3.cwl`"

#: ../../src/topics/operations.md:1 a79974b2f4534fcd8c7a04401e8a5556
msgid "Operations"
msgstr "抽象操作"

#: ../../src/topics/operations.md:3 b6507c8e1625476b97708423acb4fd0e
msgid ""
"An Operation is a type of CWL process, just like a workflow, a command-"
"line tool, or an expression tool. It is a step of a workflow that "
"specifies inputs and outputs, but it does not provide enough information "
"to be executed."
msgstr ""
"抽象操作 (Operation) 与工作流、命令行工具或表达式工具类似，是一种 CWL "
"流程。作为工作流中的一个步骤，它可以指定输入和输出，但不完全提供具体执行所需的信息。"

#: ../../src/topics/operations.md:7 047b09455db64524a71c47ab5192039f
msgid ""
"You can create operations to visualize a workflow during development, "
"before you are ready to submit the workflow to a CWL runner:"
msgstr "在开发周期中，工作流准备就绪、可以提交给 CWL 运行程序之前，您可以创建抽象操作，将工作流可视化："

#: ../../src/topics/operations.md:10 e9b2b97f3059460b867577a49934a338
msgid "`operations.cwl`"
msgstr "`operations.cwl`"

#: ../../src/topics/operations.md:16 d21e9444182d4e27bae934db4573ae99
#, fuzzy
msgid ""
"The `uppercase` step of the workflow is an operation. It can appear where"
" a command line tool or an expression is expected. You can also plot it "
"with the CWL Viewer or `cwltool`:"
msgstr ""
"工作流中的 `uppercase` 步骤是一个抽象操作，可以充当命令行工具或表达式使用。您可以用 CWL Viewer 或 `cwltool` "
"将它绘制出来："

#: ../../src/topics/operations.md:24 61e4ae6ed18e41708270eb358cd55277
#, fuzzy
msgid ""
"The output of the command above can be rendered with a Graphviz renderer."
" The following image is rendered with the Sphinx `{graphviz}` directive "
"(this user guide is built with Sphinx):"
msgstr ""
"以上命令的输出可用 Graphviz 渲染出来。下面的图片是使用 Sphinx Graphviz 指令来渲染的（本《用户指南》是以 Sphinx "
"编译）："

#: ../../src/topics/operations.md:56 c07e3ff02ac14ffb89bcbd1b30f3f3fd
msgid ""
"The operation file will fail to run with `cwltool` because `cwltool` "
"lacks the necessary information to execute it:"
msgstr ""

#: ../../src/topics/operations.md:59 e184470550e645f6b9ce658af7e65ecf
msgid "`cwltool` does not know how to run operations"
msgstr "`cwltool` 不知道如何运行抽象操作"

#: ../../src/topics/operations.md:67 3b90445d3428444cafd7d5c0e5884980
msgid ""
"CWL runners may come up with ways to bind operations to concrete steps. A"
" CWL runner could, for instance, use abstract operations with ID's that "
"correspond to steps executed by a different workflow engine."
msgstr "CWL 运行程序可能安排一些将抽象操作绑定到具体步骤的方法。例如，带有 ID 的抽象操作有可能对映到其他工作流引擎中执行的步骤。"

#: ../../src/topics/outputs.md:1 35e7bad6fdc04bcf9bbfbb2d8d42cfa5
msgid "Outputs"
msgstr "输出"

#: ../../src/topics/outputs.md:3 6d912d40359c4d33a4f08abca83c00be
msgid "Returning Output Files"
msgstr "返回输出文件"

#: ../../src/topics/outputs.md:5 a6bd3f9e23de488394958fe7b59a61e0
msgid ""
"The `outputs` of a tool is a list of output parameters that should be "
"returned after running the tool.  Each parameter has an `id` for the name"
" of parameter, and `type` describing what types of values are valid for "
"that parameter."
msgstr ""
"某个工具的 ` outputs `（输出）项是运行该工具后应返回的输出参数列表。 每个参数都有一个代表其名称的 "
"`id`字段，以及描述其有效值类型的 `type` 字段。"

#: ../../src/topics/outputs.md:10 a229d8d983344e51a231edb5f667d84b
#, fuzzy
msgid ""
"When a tool runs under CWL, the starting working directory is the "
"designated output directory.  The underlying tool or script must record "
"its results in the form of files created in the output directory.  The "
"output parameters returned by the CWL tool are either the output files "
"themselves, or the result of examining the content of those files."
msgstr ""
"工具在 CWL 下运行时，起始工作目录即指定输出目录。 基础工具或脚本记录运行结果，必须以输出目录下文件的形式实现。 CWL "
"工具返回的输出参数要么是输出文件本身，要么是分析这些文件的内容而得出的信息。"

#: ../../src/topics/outputs.md:16 9845e517f7d848e5b59a97880ca6999f
msgid ""
"The following example demonstrates how to return a file that has been "
"extracted from a tar file."
msgstr "下例演示怎样返回从 tar 文件中提取的文件。"

#: ../../src/topics/outputs.md:19 0bf1ad2c43174e57a3ba8dd86f7c96b2
msgid "Passing mandatory arguments to the `baseCommand`"
msgstr "将必要参数传递给 `baseCommand`"

#: ../../src/topics/outputs.md:21 553d535b023e4d69a888fe5b24bb8c5b
#, fuzzy
msgid ""
"In previous examples, the `baseCommand` was just a string, with any "
"arguments passed as CWL inputs. Instead of a single string, we can use an"
" _array of strings_ as the value of `baseCommand`. The first element of "
"the array is the command to run, and any subsequent elements are "
"mandatory command line arguments"
msgstr ""
"在此前的例子里，`baseCommand` 命令不过是一个字符串，命令的参数都由 CWL "
"输入传递而来。不过，我们也可以用字符串数组构建命令。为此，只需要让待运行的命令成为数组的第一个元素，这样所有后续元素均成为命令行的必要参数"

#: ../../src/topics/outputs.md:28 9b65071222c94951bed12ac53e964ee3
msgid "`tar.cwl`"
msgstr "`tar.cwl`"

#: ../../src/topics/outputs.md:34 759ab0847b97479fb4a15e4b7d4e6565
msgid "`tar-job.yml`"
msgstr "`tar-job.yml`"

#: ../../src/topics/outputs.md:40 f9752ec303ab419c8db8adef3fa2466f
msgid "Next, create a tar file for the example."
msgstr "接下来，新建一个 tar 文件供本示例使用。"

#: ../../src/topics/outputs.md:47 4f96576528684f28a72b805f777769e6
msgid ""
"And now invoke `cwltool` with the tool description and the input object "
"on the command line:"
msgstr "现在，在命令行上结合工具描述和输入对象运行 `cwltool`:"

#: ../../src/topics/outputs.md:53 707803bec0cb42919905c7c321bd9d30
#, fuzzy
msgid ""
"The field "
"[`outputBinding`](https://w3id.org/cwl/CommandLineTool.html#CommandOutputBinding)"
" describes how to set the value of each output parameter."
msgstr "`outputBinding` 字段描述如何设置每个输出参数的值。"

#: ../../src/topics/outputs.md:64 cbaec50871e04718883c8c91ff475d20
#, fuzzy
msgid ""
"The "
"[`glob`](https://w3id.org/cwl/CommandLineTool.html#CommandOutputBinding) "
"field consists of the pattern to match file names in the output "
"directory. This can simply be the file's exact name. But if you don't "
"know the name of the file in advance, you can use a wildcard pattern like"
" `glob: '*.txt'`."
msgstr "`glob` 字段由输出目录中的文件名组成。如果事先不知道文件名，可以使用通配符，例如 `glob: '*.txt'`."

#: ../../src/topics/outputs.md:69 8a6e9173198241429effd911c3a7c4d7
msgid "Capturing Standard Output"
msgstr "捕获标准输出"

#: ../../src/topics/outputs.md:71 a7c4fdaeda3e411fbeb802c5fa529ce9
#, fuzzy
msgid ""
"To capture a tool's standard output stream, add the "
"[`stdout`](https://w3id.org/cwl/CommandLineTool.html#stdout) field with "
"the name of the file where the output stream should go.  Then add `type: "
"stdout` on the corresponding output parameter."
msgstr ""
"要捕获工具的标准输出流，请添加 `stdout` 字段，配上输出流应定向到的文件名。 然后，给相应的输出参数添加 `type: stdout` "
"字段。"

#: ../../src/topics/outputs.md:75 cf2ef8dc7fda49308c09efe4f4ef5d7b
msgid "`stdout.cwl`"
msgstr "`stdout.cwl`"

#: ../../src/topics/outputs.md:93 cbe236266dd148aaa96355e490a87cbe
msgid "Array Outputs"
msgstr "数组输出"

#: ../../src/topics/outputs.md:95 77f86a7b94924a08b6ea2660218fe3c5
msgid ""
"You can also capture multiple output files into an array of files using "
"`glob`."
msgstr "您也可以用 `glob` 将多个输出文件捕获至一个文件数组。"

#: ../../src/topics/outputs.md:97 b34e30481fbd489d95fb7f8d5b5ab50c
msgid "`array-outputs.cwl`"
msgstr "`array-outputs.cwl`"

#: ../../src/topics/outputs.md:103 3aab0e0c9a78430f9caaa29a93303b56
msgid "`array-outputs-job.yml`"
msgstr "`array-outputs-job.yml`"

#: ../../src/topics/outputs.md:116 9a14271c3180429988aaa14869f783a0
msgid ""
"As described in the [YAML Guide](yaml-guide.md#arrays), the array of "
"expected outputs is specified in `array-outputs-job.yml` with each entry "
"marked by a leading `-`. This format can also be used in CWL descriptions"
" to mark entries in arrays, as demonstrated in several of the upcoming "
"sections."
msgstr ""
"如[《YAML 指南》](yaml-guide.md#arrays)中所述，`array-outputs-job.yml` 文件中行首为 `-` "
"的成员代表数组元素，用以指明我们期待的各个输出。这种格式还可以用在 CWL 描述中表示数组成员。接下来若干章节中会演示这一用法。"

#: ../../src/topics/parameter-references.md:1 c8a6ea340e6a43398e97b68e03a8bb3b
msgid "Parameter References"
msgstr "参数引用"

#: ../../src/topics/parameter-references.md:3 f5c0592ca28c46c2a89943f4f6f69a27
msgid ""
"In a previous example, we extracted a file using the \"tar\" program. "
"However, that example was very limited because it assumed that the file "
"we were interested in was called \"hello.txt\", and this was written into"
" the `.cwl` file. This is not the best way to do this, as the "
"\"hello.txt\" filename may vary or be dependent on the input file(s) "
"used.  To avoid this we can specify the name of the file we want in the "
"job parameters file (`.yml`). In this example, you will see how to "
"reference the value of input parameters dynamically from other fields, "
"which will allow us to then specify the name of the file to extract."
msgstr ""
"在前面的例子中，我们使用 “tar” 程序提取了一个文件。但是，该示例局限性很强，因为它假定了我们感兴趣的文件名就是 “hello.txt”, "
"而且这种假设直接写入了 `.cwl` 代码文件里。这种做法有欠妥当，因为文件名 “hello.txt” "
"可能会改变，也可能依赖我们实际用到的输入文件。 为了避免这类情况，我们可以在作业参数 (`.yml`) "
"文件中指定我们想要的文件名。本示例将演示如何从其他字段动态引用输入参数值，以便指定待提取的文件名。"

#: ../../src/topics/parameter-references.md:13 50db8add9b1942d986e581b8d21c2ee4
msgid "`tar-param.cwl`"
msgstr "`tar-param.cwl`"

#: ../../src/topics/parameter-references.md:19 d01ad5fd9fea462cab0d4d776824b4e1
msgid "`tar-param-job.yml`"
msgstr "`tar-param-job.yml`"

#: ../../src/topics/parameter-references.md:25 9b1e2f1a23ea4fe2af97ef5108f33376
msgid ""
"Create your input files and invoke `cwltool` with the tool description "
"and the input object on the command line:"
msgstr "创建输入文件，然后以工具描述和输入对象为命令行参数调用 `cwltool`:"

#: ../../src/topics/parameter-references.md:36 06926a516ae6432d96e3eaa62202cd86
msgid ""
"Certain fields permit parameter references which are enclosed in "
"`$(...)`. These are evaluated and replaced with value being referenced."
msgstr "某些字段允许出现用 `$(...)` 符号括起来的参数引用，由求值的结果代入。"

#: ../../src/topics/parameter-references.md:47 384fe8188f414eafbbb8d6b81bdfd779
msgid ""
"References are written using a subset of Javascript syntax.  In this "
"example, `$(inputs.extractfile)`, `$(inputs[\"extractfile\"])`, and "
"`$(inputs['extractfile'])` are equivalent."
msgstr ""
"引用的编写用的是 JavaScript 语法的一个子集。 "
"本例中，`$(inputs.extractfile)`、`$(inputs[\"extractfile\"])` 和 "
"`$(inputs['extractfile'])` 效果相同。"

#: ../../src/topics/parameter-references.md:51 56ead1c8d45c43bdbcbc6f7cbb8e1e92
msgid ""
"The value of the \"inputs\" variable is the input object provided when "
"the CWL tool was invoked."
msgstr "“inputs” 变量的取值为 CWL 工具被调用时获得的输入对象。"

#: ../../src/topics/parameter-references.md:54 56bca89e314c4223b33d7fe63c9b771d
msgid ""
"Note that because `File` parameters are objects, to get the path to an "
"input file you must reference the path field on a file object; to "
"reference the path to the tar file in the above example you would write "
"`$(inputs.tarfile.path)`."
msgstr ""
"请注意，由于 `File`（文件）参数是对象。因此，要获取输入文件的路径，须引用文件对象上的“path”（路径）字段。例如，要引用上面例子中 "
"tar 文件的路径，则需要写为 `$(inputs.tarfile.path)`."

#: ../../src/topics/parameter-references.md:59 1c1ab240c4114572bb4e42955baad361
msgid "Where are parameter references allowed?"
msgstr "参数引用可以出现在哪些地方？"

#: ../../src/topics/parameter-references.md:61 055d3268859c46c4b7db5005608bae05
msgid "You can only use parameter references in certain fields.  These are:"
msgstr "参数引用只能出现在有限的字段中，即："

#: ../../src/topics/parameter-references.md:63 2ed66835bd9044adbfdd0b5097787f22
msgid ""
"From "
"[`CommandLineTool`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"
msgstr ""
"来自 "
"[`CommandLineTool`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineTool)"

#: ../../src/topics/parameter-references.md:69 f592619e4b2c497e80cd75da0548cf07
msgid ""
"From "
"[CommandInputParameter](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"
msgstr ""
"来自 "
"[CommandInputParameter](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandInputParameter)"

#: ../../src/topics/parameter-references.md:72 81ea71a35020421187dc18ddd151c62f
msgid ""
"From "
"[`inputBinding`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"
msgstr ""
"来自 "
"[`inputBinding`](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandLineBinding)"

#: ../../src/topics/parameter-references.md:74 ea0117748adc4324901024f21eed04ac
msgid ""
"From "
"[CommandOutputParamater](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)"
msgstr ""
"来自 "
"[CommandOutputParamater](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputParameter)"

#: ../../src/topics/parameter-references.md:77 3a30e73176cf4e4eb9f26770a176b9c9
msgid ""
"From "
"[CommandOutputBinding](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)"
msgstr ""
"来自 "
"[CommandOutputBinding](http://www.commonwl.org/v1.0/CommandLineTool.html#CommandOutputBinding)"

#: ../../src/topics/parameter-references.md:81 551c199c9a6344fca9bfacfb69fc4e53
msgid ""
"From "
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[WorkflowOutputParameter](http://www.commonwl.org/v1.0/Workflow.html#WorkflowOutputParameter)"
msgstr ""
"来自[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" 和 "
"[WorkflowOutputParameter](http://www.commonwl.org/v1.0/Workflow.html#WorkflowOutputParameter)"

#: ../../src/topics/parameter-references.md:85 7008a1ff1af54fda827637e787e5c7dd
msgid ""
"From "
"[WorkflowStepInput](http://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"
msgstr ""
"来自 "
"[WorkflowStepInput](http://www.commonwl.org/v1.0/Workflow.html#WorkflowStepInput)"

#: ../../src/topics/parameter-references.md:89 45743e1b261c4195856de0c2e30ea72e
msgid ""
"From "
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" and "
"[ExpressionToolOutputParameter](http://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)"
msgstr ""
"来自 "
"[InputParameter](http://www.commonwl.org/v1.0/Workflow.html#InputParameter)"
" 和 "
"[ExpressionToolOutputParameter](http://www.commonwl.org/v1.0/Workflow.html#ExpressionToolOutputParameter)"

#: ../../src/topics/parameter-references.md:92 0ae32d1db5f9452bbfcbbc4719b0b9f1
msgid ""
"From "
"[`ResourceRequirement`](http://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement)"
msgstr ""
"来自 "
"[`ResourceRequirement`](http://www.commonwl.org/v1.0/CommandLineTool.html#ResourceRequirement)"

#: ../../src/topics/parameter-references.md:101
#: 7e1907ff15c74f488187531de336eccf
msgid ""
"From "
"[`InitialWorkDirRequirement`](http://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"
msgstr ""
"来自 "
"[`InitialWorkDirRequirement`](http://www.commonwl.org/v1.0/CommandLineTool.html#InitialWorkDirRequirement)"

#: ../../src/topics/parameter-references.md:103
#: 678874668fed4f4d80a1b0990e183e2f
msgid "in [Dirent](http://www.commonwl.org/v1.0/CommandLineTool.html#Dirent)"
msgstr "[Dirent](http://www.commonwl.org/v1.0/CommandLineTool.html#Dirent) 对象中"

#: ../../src/topics/parameter-references.md:107
#: e2882880886046ac88ae1c0d414366d1
msgid ""
"From "
"[EnvironmentDef](http://www.commonwl.org/v1.0/CommandLineTool.html#EnvironmentDef)"
msgstr ""
"来自 "
"[EnvironmentDef](http://www.commonwl.org/v1.0/CommandLineTool.html#EnvironmentDef)"

#: ../../src/topics/requirements-and-hints.md:5
#: 05324169d8ae48d4a1abe3a0ac07c891
msgid "Requirements and Hints"
msgstr "需求和提示"

#: ../../src/topics/specifying-software-requirements.md:1
#: 1f5b72d7ec82442ba29baa14a03f061b
msgid "Specifying Software Requirements"
msgstr "指定软件需求"

#: ../../src/topics/specifying-software-requirements.md:3
#: e708866921ea49d69d3c2a32d63ea468
#, fuzzy
msgid ""
"Often, tool descriptions will be written for a specific version of a "
"software. To make it easier for others to use your descriptions, you can "
"include a "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement)"
" field in the `hints` section. This may also help to avoid confusion "
"about which version of a tool the description was written for."
msgstr ""
"工具描述往往是针对特定版本的软件而编写。为了方便他人使用您的工具描述，您可以在 `hints` 部分添加`SoftwareRequirement`"
" 字段，用来指明该描述适用于哪些版本的工具。"

#: ../../src/topics/specifying-software-requirements.md:13
#: 6f722d6fd54f485fa964076c8d08938b
msgid ""
"In this example, the software requirement being described is InterProScan"
" version 5.21-60."
msgstr "本例中描述的软件要求为 5.21-60 版本的 InterProScan."

#: ../../src/topics/specifying-software-requirements.md:25
#: 5c1236ec57c64079bfb7c779524b12ad
msgid ""
"Depending on your CWL runner, these hints may be used to check that the "
"required software is installed and available before the job is run. To "
"enable these checks with the reference implementation, use the "
"[dependency resolvers configuration][dependencies]."
msgstr ""
"您的 CWL 运行程序有可能支持在运行作业前根据提示检查所需软件是否已安装就绪。如"
"果要让参考实现启用此类检查，请使用[依赖项解析配置][dependencies]。"

#: ../../src/topics/specifying-software-requirements.md:29
#: 1a8b8aadf1c64e87b8b670e288bc14bc
msgid ""
"As well as a version number, a unique resource identifier (URI) for the "
"tool is given in the form of an [RRID][rrid]. Resources with RRIDs can be"
" looked up in the [SciCrunch][scicrunch] registry, which provides a "
"portal for finding, tracking, and referring to scientific resources "
"consistently. If you want to specify a tool as a "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool.html#SoftwareRequirement),"
" search for the tool on SciCrunch and use the RRID that it has been "
"assigned in the registry. (Follow this [Adding a Resource Tutorial"
"][scicrunch-add-tool] to add a tool to SciCrunch). You can use this RRID "
"to refer to the tool (via [identifiers.org][identifiers]) in the `specs` "
"field of your requirement description. Other good choices, in order of "
"preference, are to include the DOI for the main tool citation and the URL"
" to the tool."
msgstr ""
"此处我们不仅给出了工具的版本号，还以 [RRID][rrid] "
"的形式给出了该工具的统一资源标识符 (URI) 。查找以 RRID 标识的资源可以使用 "
"[SciCrunch][scicrunch] "
"注册表。该信息门户网站可供查询、跟踪和一致引用科学资源。如果要将工具指定为 "
"[`SoftwareRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#SoftwareRequirement)，请在 SciCrunch "
"上找到该工具并使用该注册表中为其分配的 RRID（如需将工具添加到 SciCrunch "
"请参考 [添加资源教程][scicrunch-add-tool] ）。您可以使用此 RRID, 通过 "
"[identifiers.org][identifiers] 在需求描述的 `specs` 字段中引用该工具。此外，"
"加入主要工具参考文献的 DOI 以及工具的 URL, 也是合适的选择。"

#: ../../src/topics/staging-input-files.md:1 d10c792550e8498c8ee384d3093da306
msgid "Staging Input Files"
msgstr "暂存输入文件"

#: ../../src/topics/staging-input-files.md:3 ac2ef1fced5f4044861761a11c35e78a
msgid ""
"Normally, input files are located in a read-only directory separate from "
"the output directory.  This causes problems if the underlying tool "
"expects to write its output files alongside the input file in the same "
"directory.  You use "
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/CommandLineTool.html#InitialWorkDirRequirement)"
" to stage input files into the output directory. In this example, we use "
"a JavaScript expression to extract the base name of the input file from "
"its leading directory path."
msgstr ""
"通常，输入文件存放于只读目录中，而且位于输出目录之外。 然而，如果基础工具工作"
"的惯例是将输出文件写到输入文件所在的同一目录，则会导致问题。 使用 "
"[`InitialWorkDirRequirement`](https://w3id.org/cwl/CommandLineTool."
"html#InitialWorkDirRequirement) "
"可以实现在输出目录中暂存输入文件。在此示例中，我们使用 JavaScript 表达式，"
"提取输入文件去除前导目录路径后的基本文件名 (base name)."

#: ../../src/topics/staging-input-files.md:9 d8ca16f5321e486ebe8ea9f9752b3737
msgid "`linkfile.cwl`"
msgstr "`linkfile.cwl`"

#: ../../src/topics/troubleshooting.md:1 aa3eddcaa0684f86ba67aafcd57872e7
msgid "Troubleshooting"
msgstr "故障排除"

#: ../../src/topics/troubleshooting.md:3 3207f476afa04158bd26db39a16a2df5
msgid ""
"In this section you will find ways to troubleshoot when you have problems"
" executing CWL. We focus on `cwltool` here but some of these techniques "
"may apply to other CWL Runners."
msgstr ""
"本节将介绍执行 CWL 程序遇到问题时的排查、解决方法。此处我们重点介绍 `cwltool`"
", 不过同样的技巧也可能适用于其他 CWL 运行程序。"

#: ../../src/topics/troubleshooting.md:6 1d47f4ce04554cabb1ccf40a13ee42ec
msgid "Run `cwltool` with `cachedir`"
msgstr "制定 `cachedir`（缓存目录）运行 `cwltool`"

#: ../../src/topics/troubleshooting.md:8 0c25602a83e441b48b536eb49568f2b6
msgid ""
"You can use the `--cachedir` option when running a workflow to tell "
"`cwltool` to cache intermediate files (files that are not input nor "
"output files, but created while your workflow is running). By default, "
"these files are created in a temporary directory but writing them to a "
"separate directory makes accessing them easier."
msgstr ""
"运行工作流时，您可使用 `--cachedir` 选项令 `cwltool` 缓存中间文件（不属于输入"
"输出文件，而是工作流运行过程中创建）。默认情况下这些文件创建于一个临时目录下"
"，不过将其写入指定的独立目录可以更方便地访问。"

#: ../../src/topics/troubleshooting.md:14 36ec60b80c714357a4274217274136ff
msgid ""
"In the following example `troubleshooting-wf1.cwl` we have two steps, "
"`step_a` and `step_b`. The workflow is equivalent to `echo \"Hello "
"World\" | rev`, which would print the message \"Hello World\" reversed, "
"i.e. \"dlroW olleH\". However, the second step, `step_b`, **has a typo**,"
" where instead of executing the `rev` command it tries to execute `revv`,"
" which fails."
msgstr ""
"以下示例 `troubleshooting-wf1.cwl` 中设有两个步骤 `step_a` 和 `step_b`. "
"该工作流相当于执行命令 `echo \"Hello World\" | rev`, 将 \"Hello World\" "
"反向输出为 \"dlroW olleH\". 但是第二个步骤 `step_b` **有一处错误**：本该执行 "
"`rev` 命令，却成了 `revv`, 于是失败。"

#: ../../src/topics/troubleshooting.md:20 6f34038054ac4f4fa0b0ad9cbc3ecdc7
msgid "`troubleshooting-wf1.cwl`"
msgstr "`troubleshooting-wf1.cwl`"

#: ../../src/topics/troubleshooting.md:27 b777877c88024c9fb06a6614029ef8d6
msgid ""
"Let's execute this workflow with `/tmp/cachedir/` as the `--cachedir` "
"value (`cwltool` will create the directory for you if it does not exist "
"already):"
msgstr ""
"我们来以 `/tmp/cachedir/` 为 `--cachedir` "
"选项的值重新执行这个工作流（如果这个目录不存在，`cwltool` 会为你创建之）："

#: ../../src/topics/troubleshooting.md:35 8654b7f2f4464d13be4b47729e1f07e5
msgid ""
"The workflow is in the `permanentFail` status due to `step_b` failing to "
"execute the non-existent `revv` command. The `step_a` was executed "
"successfully and its output has been cached in your `cachedir` location. "
"You can inspect the intermediate files created:"
msgstr ""
"该工作流处于 `permanentFail` 状态，因为 `step_b` 中执行不存在的命令 `revv` "
"失败。`step_a` 得到了成功执行，其输出换存在了你通过 `cachedir` "
"选项指定的位置。你可以检查它创建的中间文件："

#: ../../src/topics/troubleshooting.md:44 04e80f7ce14d4d73bc5d290dcf01bcdb
msgid ""
"Each workflow step has received a unique ID (the long value that looks "
"like a hash). The `${HASH}.status` files display the status of each step "
"executed by the workflow. And the `step_a` output file `stdout.txt` is "
"visible in the output of the command above."
msgstr ""

#: ../../src/topics/troubleshooting.md:48 719917cb0fd849f5a328671df8726189
msgid ""
"Now fix the typo so `step_b` executes `rev` (i.e. replace `revv` by `rev`"
" in the `step_b`). After fixing the typo, when you execute `cwltool` with"
" the same arguments as the previous time, note that now `cwltool` output "
"contains information about pre-cached outputs for `step_a`, and about a "
"new cache entry for the output of `step_b`. Also note that the status of "
"`step_b` is now of success."
msgstr ""

#: ../../src/topics/troubleshooting.md:59 2a9dbb3ad7564f5aa103349c45ee7925
msgid ""
"In this example the workflow step `step_a` was not re-evaluated as it had"
" been cached, and there was no change in its execution or output. "
"Furthermore, `cwltool` was able to recognize when it had to re-evaluate "
"`step_b` after we fixed the executable name. This technique is useful for"
" troubleshooting your CWL documents and also as a way to prevent "
"`cwltool` to re-evaluate steps unnecessarily."
msgstr ""

#: ../../src/topics/using-containers.md:1 7439fe097aa4459ba1e4c0e28fc59b9a
msgid "Using Containers"
msgstr ""

#: ../../src/topics/using-containers.md:3 eff5c6ac1cad44f9862585daf0a91298
msgid "Running Tools Inside Docker"
msgstr ""

#: ../../src/topics/using-containers.md:5 50d1a644bc8c49f78c453e4e0f3c07c8
msgid ""
"[Docker][docker] containers simplify software installation by providing a"
" complete known-good runtime for software and its dependencies.  However,"
" containers are also purposefully isolated from the host system, so in "
"order to run a tool inside a Docker container there is additional work to"
" ensure that input files are available inside the container and output "
"files can be recovered from the container.  A CWL runner can perform this"
" work automatically, allowing you to use Docker to simplify your software"
" management while avoiding the complexity of invoking and managing Docker"
" containers."
msgstr ""

#: ../../src/topics/using-containers.md:15 4b0f6cfc8a774c77bfbc99e568af2ece
msgid ""
"One of the responsibilities of the CWL runner is to adjust the paths of "
"input files to reflect the location where they appear inside the "
"container."
msgstr ""

#: ../../src/topics/using-containers.md:18 27c02a5d479a420eab7d14888d9fb288
msgid ""
"This example runs a simple Node.js script inside a Docker container which"
" will then print \"Hello World\" to the standard output."
msgstr ""

#: ../../src/topics/using-containers.md:21 1a62a93ab20b4f2ca1e13ded3a767dc5
msgid "`docker.cwl`"
msgstr "`docker.cwl`"

#: ../../src/topics/using-containers.md:27 ccc2874840c3476bb714ddf4bdbf0f3e
msgid "`docker-job.yml`"
msgstr "`docker-job.yml`"

#: ../../src/topics/using-containers.md:33 d766b66de4714a5da0cd87ed886cc32f
msgid ""
"Before we run this, let's just break it down and see what some bits do.  "
"Most of this has been explained in previous sections, the only part that "
"is really new is the "
"[`dockerRequirement`](https://w3id.org/cwl/CommandLineTool.html#DockerRequirement)"
" section."
msgstr ""

#: ../../src/topics/using-containers.md:44 1f02618ab6254459ae71f72844e3cc18
msgid ""
"`baseCommand: node` tells CWL that we will be running this command using "
"the Node Js runtime that is meant for Javascript files. We then need to "
"specify some `hints` for how to find the container we want.  In this case"
" we list just our requirements for the docker container in "
"`DockerRequirements`.  The `dockerPull:` parameter takes the same value "
"that you would pass to a `docker pull` command. That is, the name of the "
"container image (you can even specify the tag, which is good idea for "
"best practices when using containers for reproducible research). In this "
"case we have used a container called `node:slim`."
msgstr ""

#: ../../src/topics/using-containers.md:52 54cade4978ec463bbb5c0d8c08e27adb
msgid ""
"Create a Javascript file named \"hello.js\" and invoke `cwltool` "
"providing the tool description and the input object on the command line:"
msgstr ""

#: ../../src/topics/using-containers.md:55 6541d0cd9f6c4c43b8601715cc35e585
msgid "`hello.js`"
msgstr "`hello.js`"

#: ../../src/topics/using-containers.md:69 6abf220b7fa4479394ed33447cdd070e
msgid ""
"Notice the CWL runner has constructed a Docker command line to run the "
"script."
msgstr ""

#: ../../src/topics/using-containers.md:72 d2dd89a5edde4f2eab4c2baf0cc78745
msgid ""
"In this example, the path to the script `hello.js` is "
"`/home/me/cwl/user_guide/hello.js` outside the container but "
"`/var/lib/cwl/job369354770_examples/hello.js` inside the container, as "
"reflected in the invocation of the `node` command."
msgstr ""

#: ../../src/topics/workflows.md:1 06281a10592d42509566c8fc51f8d4da
msgid "Workflows"
msgstr ""

#: ../../src/topics/workflows.md:3 325a656f9b8e4c1fa6f699cd8c447d00
msgid ""
"A workflow is a CWL processing unit that executes command-line tools, "
"expression tools, or workflows (sub-workflows) as steps. It must have "
"`inputs`, `outputs`, and `steps` defined in the CWL document."
msgstr ""

#: ../../src/topics/workflows.md:13 b92275181c9e480da64e660b7aca0745
msgid "CWL workflow."
msgstr ""

#: ../../src/topics/workflows.md:41 be2540315f854b8e9a1d257bcabd78db
msgid ""
"The CWL document `echo-uppercase.cwl` defines a workflow that runs the "
"command-line tool, and the expression tool showed in the earlier "
"examples."
msgstr ""

#: ../../src/topics/workflows.md:51 3be900594bb743399854b95baa9ae2f9
msgid "`echo-uppercase.cwl`"
msgstr "`echo-uppercase.cwl`"

#: ../../src/topics/workflows.md:81 5133c4e062bc4e479ce1dc8abbb08107
msgid ""
"A command-line tool or expression tool can also be written directly in "
"the same CWL document as the workflow. For example, we can rewrite the "
"`echo-uppercase.cwl` workflow as a single file:"
msgstr ""

#: ../../src/topics/workflows.md:91 83bc2796889f4dccb713764ac1b3c3ad
msgid "`echo-uppercase-single-file.cwl`"
msgstr "`echo-uppercase-single-file.cwl`"

#: ../../src/topics/workflows.md:150 5a9a1dd6ed1f4ca6803f1d235c4fd392
msgid ""
"Having separate files helps with modularity and code organization. But it"
" can be helpful writing everything in a single file for development. "
"There are other ways to combine multiple files into a single file (e.g. "
"`cwltool --pack`) discussed further in other sections of this user guide."
msgstr ""

#: ../../src/topics/workflows.md:160 277ed30d4b3a4156a4523e8d10e6ce60
msgid ""
"For a sub-workflows you need to enable the requirement "
"`SubworkflowFeatureRequirement`. It is covered in another section of this"
" user guide in more detail."
msgstr ""

#: ../../src/topics/workflows.md:165 82818ab17aa4403eb982fd81a14a5865
msgid "Writing Workflows"
msgstr ""

#: ../../src/topics/workflows.md:167 3d8b98e8d03548699fadb22198de9b20
msgid ""
"This workflow extracts a java source file from a tar file and then "
"compiles it."
msgstr ""

#: ../../src/topics/workflows.md:170 c61097c695424f7195e8205a23b6ecff
msgid "`1st-workflow.cwl`"
msgstr "`1st-workflow.cwl`"

#: ../../src/topics/workflows.md:179 ../../src/topics/workflows.md:180
#: 6660c48f51d94d4fbcc05656e154059e bd2bab6c11614fa983ca8dab1408e1d8
msgid "Visualization of 1st-workflow.cwl"
msgstr ""

#: ../../src/topics/workflows.md:180 f0831481a43548039fbc4fd17555af57
msgid ""
"[![Visualization of 1st-"
"workflow.cwl](https://view.commonwl.org/graph/png/github.com/common-"
"workflow-"
"language/user_guide/blob/a29e7eae0006660946fc705a310b37a21a7e1edc/_includes/cwl/21"
"-1st-workflow/1st-"
"workflow.cwl)](https://view.commonwl.org/graph/png/github.com/common-"
"workflow-"
"language/user_guide/blob/a29e7eae0006660946fc705a310b37a21a7e1edc/_includes/cwl/21"
"-1st-workflow/1st-workflow.cwl)"
msgstr ""

#: ../../src/topics/workflows.md:183 5ff059fc8ae6471c8ea86dab7e5a93f5
msgid ""
"Use a YAML or a JSON object in a separate file to describe the input of a"
" run:"
msgstr ""

#: ../../src/topics/workflows.md:185 822e5d0a097b4109960d621a72a3c009
msgid "`1st-workflow-job.yml`"
msgstr "`1st-workflow-job.yml`"

#: ../../src/topics/workflows.md:191 4a4db7da861547639524083bf35ccfc0
msgid ""
"Next, create a sample Java file and add it to a tar file to use with the "
"command-line tool."
msgstr ""

#: ../../src/topics/workflows.md:205 ed16b30eaa4747f79b6dd10a19188d8c
msgid "What's going on here?  Let's break it down:"
msgstr ""

#: ../../src/topics/workflows.md:212 6428bd7bd3be4393bfe5675f8e45ff94
msgid ""
"The `cwlVersion` field indicates the version of the CWL spec used by the "
"document.  The `class` field indicates this document describes a "
"workflow."
msgstr ""

#: ../../src/topics/workflows.md:221 d6abec8805f649fca668292412263f78
msgid ""
"The `inputs` section describes the inputs of the workflow.  This is a "
"list of input parameters where each parameter consists of an identifier "
"and a data type.  These parameters can be used as sources for input to "
"specific workflows steps."
msgstr ""

#: ../../src/topics/workflows.md:233 22bf3e4910ef4f86a2e8f6d5a6cf0d42
msgid ""
"The `outputs` section describes the outputs of the workflow.  This is a "
"list of output parameters where each parameter consists of an identifier "
"and a data type.  The `outputSource` connects the output parameter "
"`classfile` of the `compile` step to the workflow output parameter "
"`compiled_class`."
msgstr ""

#: ../../src/topics/workflows.md:248 e0429688fce445da8083e69323e5b020
msgid ""
"The `steps` section describes the actual steps of the workflow.  In this "
"example, the first step extracts a file from a tar file, and the second "
"step compiles the file from the first step using the java compiler. "
"Workflow steps are not necessarily run in the order they are listed, "
"instead the order is determined by the dependencies between steps (using "
"`source`).  In addition, workflow steps which do not depend on one "
"another may run in parallel."
msgstr ""

#: ../../src/topics/workflows.md:256 980f5eada57c4fadbb783838ded1fa0b
msgid ""
"The first step, `untar` runs `tar-param.cwl` (described previously in "
"[Parameter References](parameter-references.md)). This tool has two input"
" parameters, `tarfile` and `extractfile` and one output parameter "
"`extracted_file`."
msgstr ""

#: ../../src/topics/workflows.md:261 3532e165842f4ebb8db0c78208071555
msgid ""
"The ``in`` section of the workflow step connects these two input "
"parameters to the inputs of the workflow, `tarball` and "
"`name_of_file_to_extract` using `source`.  This means that when the "
"workflow step is executed, the values assigned to `tarball` and "
"`name_of_file_to_extract` will be used for the parameters `tarfile` and "
"`extractfile` in order to run the tool."
msgstr ""

#: ../../src/topics/workflows.md:267 04a4db2f3da94ce29e7999039ee13fde
msgid ""
"The `out` section of the workflow step lists the output parameters that "
"are expected from the tool."
msgstr ""

#: ../../src/topics/workflows.md:278 2651ee113a3d4b79b138854ebe729f48
msgid ""
"The second step `compile` depends on the results from the first step by "
"connecting the input parameter `src` to the output parameter of `untar` "
"using `untar/extracted_file`.  It runs `arguments.cwl` (described "
"previously in [Additional Arguments and Parameters](additional-arguments-"
"and-parameters.md)). The output of this step `classfile` is connected to "
"the `outputs` section for the Workflow, described above."
msgstr ""

#: ../../src/topics/workflows.md:285 177040bf9c0045f2878f42bcdd8cbd2d
msgid "Nested Workflows"
msgstr ""

#: ../../src/topics/workflows.md:287 e8adc2f7c5ac4464b0711712617b8bbe
msgid ""
"Workflows are ways to combine multiple tools to perform a larger "
"operations. We can also think of a workflow as being a tool itself; a CWL"
" workflow can be used as a step in another CWL workflow, if the workflow "
"engine supports the `SubworkflowFeatureRequirement`:"
msgstr ""

#: ../../src/topics/workflows.md:297 44d281d99cd944478db98446a984c001
msgid ""
"Here's an example workflow that uses our `1st-workflow.cwl` as a nested "
"workflow:"
msgstr ""

#: ../../src/topics/workflows.md:300 d7b60ce81ea741ffa08f2c2d9d7cca69
msgid "`nestedworkflows.cwl`"
msgstr ""

#: ../../src/topics/workflows.md:309 a5b7a1ab16e34bda8744ffadacdda3e8
msgid ""
"This two-step workflow starts with the `create-tar` step which is "
"connected to the `compile` step in orange; `compile` is another workflow,"
" diagrammed on the right. In purple we see the fixed string "
"`\"Hello.java\"` being supplied as the `name_of_file_to_extract`."
msgstr ""

#: ../../src/topics/workflows.md:314 8654f2d86b644609aaa5b9b73db30bda
msgid ""
"<a href=\"https://view.commonwl.org/workflows/github.com/common-workflow-"
"language/user_guide/blob/main/_includes/cwl/workflows/nestedworkflows.cwl\"><img"
" src=\"https://view.commonwl.org/graph/svg/github.com/common-workflow-"
"language/user_guide/blob/main/_includes/cwl/workflows/nestedworkflows.cwl\""
" alt=\"Visualization of nestedworkflows.cwl\" /></a> <a "
"href=\"https://view.commonwl.org/workflows/github.com/common-workflow-"
"language/user_guide/blob/main/_includes/cwl/workflows/1st-"
"workflow.cwl\"><img src=\"https://view.commonwl.org/graph/svg/github.com"
"/common-workflow-language/user_guide/blob/main/_includes/cwl/workflows"
"/1st-workflow.cwl\" alt=\"Visualization of 1st-workflow.cwl\" /></a>"
msgstr ""

#: ../../src/topics/workflows.md:322 7ce847ab54224452b6425de2a55ec893
msgid ""
"A CWL `Workflow` can be used as a `step` just like a `CommandLineTool`, "
"its CWL file is included with `run`. The workflow inputs (`tarball` and "
"`name_of_file_to_extract`) and outputs (`compiled_class`) then can be "
"mapped to become the step's input/outputs."
msgstr ""

#: ../../src/topics/workflows.md:336 d621821d2c1b403cb7415b381dd883f6
msgid ""
"Our `1st-workflow.cwl` was parameterized with workflow inputs, so when "
"running it we had to provide a job file to denote the tar file and "
"`*.java` filename. This is generally best-practice, as it means it can be"
" reused in multiple parent workflows, or even in multiple steps within "
"the same workflow."
msgstr ""

#: ../../src/topics/workflows.md:341 358c612f175241f7bf148a04d75e00c9
msgid ""
"Here we use `default:` to hard-code `\"Hello.java\"` as the "
"`name_of_file_to_extract` input, however our workflow also requires a tar"
" file at `tarball`, which we will prepare in the `create-tar` step. At "
"this point it is probably a good idea to refactor `1st-workflow.cwl` to "
"have more specific input/output names, as those also appear in its usage "
"as a tool."
msgstr ""

#: ../../src/topics/workflows.md:347 c6297c120e004ae8b52d5b519fbc04d2
msgid ""
"It is also possible to do a less generic approach and avoid external "
"dependencies in the job file. So in this workflow we can generate a hard-"
"coded `Hello.java` file using the previously mentioned "
"`InitialWorkDirRequirement` requirement, before adding it to a tar file."
msgstr ""

#: ../../src/topics/workflows.md:366 66f76677f4ce42baa8a8813410ea5aee
msgid ""
"In this case our step can assume `Hello.java` rather than be "
"parameterized, so we can use hardcoded values `hello.tar` and "
"`Hello.java` in a `baseCommand` and the resulting `outputs`:"
msgstr ""

#: ../../src/topics/workflows.md:383 a8ccb9f9ab4448e087ea8448d620d33c
msgid ""
"Did you notice that we didn't split out the `tar --create` tool to a "
"separate file, but rather embedded it within the CWL Workflow file? This "
"is generally not best practice, as the tool then can't be reused. The "
"reason for doing it in this case is because the command line is hard-"
"coded with filenames that only make sense within this workflow."
msgstr ""

#: ../../src/topics/workflows.md:389 afe43b9e92e949a589f493293eff2903
msgid ""
"In this example we had to prepare a tar file outside, but only because "
"our inner workflow was designed to take that as an input. A better "
"refactoring of the inner workflow would be to take a list of Java files "
"to compile, which would simplify its usage as a tool step in other "
"workflows."
msgstr ""

#: ../../src/topics/workflows.md:394 239eef3a740d42a69208a8f4e716d2b3
msgid ""
"Nested workflows can be a powerful feature to generate higher-level "
"functional and reusable workflow units - but just like for creating a CWL"
" Tool description, care must be taken to improve its usability in "
"multiple workflows."
msgstr ""

#: ../../src/topics/workflows.md:398 96d1ca78cc324f40b61c4b7330447db2
msgid "Scattering Steps"
msgstr ""

#: ../../src/topics/workflows.md:400 eab4437bf9994b649954221375e3dd6d
msgid ""
"Now that we know how to write workflows, we can start utilizing the "
"`ScatterFeatureRequirement`. This feature tells the runner that you wish "
"to run a tool or workflow multiple times over a list of inputs. The "
"workflow then takes the input(s) as an array and will run the specified "
"step(s) on each element of the array as if it were a single input. This "
"allows you to run the same workflow on multiple inputs without having to "
"generate many different commands or input yaml files."
msgstr ""

#: ../../src/topics/workflows.md:411 c245ba0ae2074fa388ad6c35695033c8
msgid ""
"The most common reason a new user might want to use scatter is to perform"
" the same analysis on different samples. Let's start with a simple "
"workflow that calls our first example (`hello_world.cwl`) and takes an "
"array of strings as input to the workflow:"
msgstr ""

#: ../../src/topics/workflows.md:415 83537938ce1244709f9b72269b048d63
msgid "`scatter-workflow.cwl`"
msgstr "`scatter-workflow.cwl`"

#: ../../src/topics/workflows.md:421 4f507925766e48ae8f713d56051a5e29
msgid ""
"Aside from the `requirements` section including "
"`ScatterFeatureRequirement`, what is going on here?"
msgstr ""

#: ../../src/topics/workflows.md:429 ccbbba3189404241a44736c970249b84
msgid ""
"First of all, notice that the main workflow level input here requires an "
"array of strings."
msgstr ""

#: ../../src/topics/workflows.md:441 31eff13bb8334fc7b6d48ef6c5b1ce33
msgid ""
"Here we've added a new field to the step `echo` called `scatter`. This "
"field tells the runner that we'd like to scatter over this input for this"
" particular step. Note that the input name listed after scatter is the "
"one of the step's input, not a workflow level input."
msgstr ""

#: ../../src/topics/workflows.md:445 0d5cf8b82dbd47f2abd1ed16b9b3eb61
msgid ""
"For our first scatter, it's as simple as that! Since our tool doesn't "
"collect any outputs, we still use `outputs: []` in our workflow, but if "
"you expect that the final output of your workflow will now have multiple "
"outputs to collect, be sure to update that to an array type as well!"
msgstr ""

#: ../../src/topics/workflows.md:450 38b7042a270043ba82c11cf2e758f0c8
msgid "Using the following input file:"
msgstr ""

#: ../../src/topics/workflows.md:452 b3fc75c262fe4a3a8e8bfba1abb07b3d
msgid "`scatter-job.yml`"
msgstr "`scatter-job.yml`"

#: ../../src/topics/workflows.md:458 f9fa7046c89c417db51dc7c8a026fd5d
msgid ""
"As a reminder, [`hello_world.cwl`](../introduction/quick-start.md) simply"
" calls the command `echo` on a message. If we invoke `cwltool scatter-"
"workflow.cwl scatter-job.yml` on the command line:"
msgstr ""

#: ../../src/topics/workflows.md:466 b6a33410ee9a45d7bf7b2ba56f786f8f
msgid ""
"You can see that the workflow calls echo multiple times on each element "
"of our `message_array`. Ok, so how about if we want to scatter over two "
"steps in a workflow?"
msgstr ""

#: ../../src/topics/workflows.md:469 99b5c8a845ab4beb8524a69c051e2d42
msgid ""
"Let's perform a simple echo like above, but capturing `stdout` by adding "
"the following lines instead of `outputs: []`"
msgstr ""

#: ../../src/topics/workflows.md:472 97bf58937d3f4e98af702e3c1a418992
msgid "`hello_world_to_stdout.cwl`"
msgstr "`hello_world_to_stdout.cwl`"

#: ../../src/topics/workflows.md:480 173bd28708834f11a2a1366b579b7ad7
msgid ""
"And add a second step that uses `wc` to count the characters in each "
"file. See the tool below:"
msgstr ""

#: ../../src/topics/workflows.md:483 4afccfe982ff4be2be96cbe5889e5014
msgid "`wc-tool.cwl`"
msgstr "`wc-tool.cwl`"

#: ../../src/topics/workflows.md:489 63595d35dded4911aab0be3a165eec0c
msgid ""
"Now, how do we incorporate scatter? Remember the scatter field is under "
"each step:"
msgstr ""

#: ../../src/topics/workflows.md:491 a7f96ec6e4f24c62ac0f5b6edcc9734b
msgid "`scatter-two-steps.cwl`"
msgstr "`scatter-two-steps.cwl`"

#: ../../src/topics/workflows.md:497 122452b7d7114c3fa53cbea286703023
msgid ""
"Here we have placed the scatter field under each step. This is fine for "
"this example since it runs quickly, but if you're running many samples "
"for a more complex workflow, you may wish to consider an alternative. "
"Here we are running scatter on each step independently, but since the "
"second step is not dependent on the first step completing all languages, "
"we aren't using the scatter functionality efficiently. The second step "
"expects an array as input from the first step, so it will wait until "
"everything in step one is finished before doing anything. Pretend that "
"`echo Hello World!` takes 1 minute to perform, `wc -c` on the output "
"takes 3 minutes and that `echo Hallo welt!` takes 5 minutes to perform, "
"and `wc` on that output takes 3 minutes. Even though `echo Hello World!` "
"could finish in 4 minutes, it will actually finish in 8 minutes because "
"the first step must wait on `echo Hallo welt!`. You can see how this "
"might not scale well."
msgstr ""

#: ../../src/topics/workflows.md:509 85dd63daf04546b78bdcb68c1d985fa9
msgid ""
"Ok, so how do we scatter on steps that can proceed independent of other "
"samples? Remember from [Nested Workflows](#nested-workflows), that we can"
" make an entire workflow a single step in another workflow! Convert our "
"two-step workflow to a single step subworkflow:"
msgstr ""

#: ../../src/topics/workflows.md:513 fac138ba275745898b763a7d719a8235
msgid "`scatter-nested-workflow.cwl`"
msgstr "`scatter-nested-workflow.cwl`"

#: ../../src/topics/workflows.md:519 508ef2240879445594b0f262ed11a01d
msgid ""
"Now the scatter acts on a single step, but that step consists of two "
"steps so each step is performed in parallel."
msgstr ""

#: ../../src/topics/workflows.md:522 b0bf01dad1234a1db3c87b10953e42ef
msgid "Conditional Workflows"
msgstr ""

#: ../../src/topics/workflows.md:524 8d933ed1ec6e408589f781e3a425b869
msgid ""
"This workflow contains a conditional step and is executed based on the "
"input. This allows workflows to skip additional steps based on input "
"parameters given at the start of the program or by previous steps."
msgstr ""

#: ../../src/topics/workflows.md:527 9ac7b4f71621411da9a4ca3bc277dcb0
msgid "`conditional-workflow.cwl`"
msgstr "`conditional-workflow.cwl`"

#: ../../src/topics/workflows.md:566 4a4a2b2b99b44d449adb246cebce0a26
msgid ""
"The first thing you'll notice is that this workflow is only compatible "
"for version 1.2 or greater of the CWL standards."
msgstr ""

#: ../../src/topics/workflows.md:573 4742fe09a4264fb8be6f092519de5d72
msgid ""
"The first step of the workflow (step1) contains two input properties and "
"will execute foo.cwl when the conditions are met. The new property `when`"
" is where the condition validation takes place. In this case only when "
"`in1`  from the workflow contains a value `< 1` this step will be "
"executed."
msgstr ""

#: ../../src/topics/workflows.md:587 b33ecd2b8af042feb08687e32d4b6bbf
msgid ""
"Using the following command `cwltool cond-wf-003.1.cwl --val 0` the value"
" will pass the first conditional step and will therefore be executed and "
"is shown in the log by `INFO [step step1] start` whereas the second step "
"is skipped as indicated by `INFO [step step2] will be skipped`."
msgstr ""

#: ../../src/topics/workflows.md:607 7cd80b31a94543358ece7a2d413adce9
msgid ""
"When a value of 3 is given the first conditional step will not be "
"executed but the second step will `cwltool cond-wf-003.1.cwl --val 3`."
msgstr ""

#: ../../src/topics/workflows.md:627 9679e32f65e0482a8b083387e4a18c1f
msgid ""
"If no conditions are met for example when using `--val 2` the workflow "
"will raise a permanentFail."
msgstr ""

#: ../../src/topics/yaml-guide.md:1 4fa76441f95d45fab76ab7eef8d7d4d2
msgid "YAML Guide"
msgstr ""

#: ../../src/topics/yaml-guide.md:6 705765787eb84ecaae004194225924cb
msgid ""
"[YAML][yaml] is a file format designed to be readable by both computers "
"and humans. This guide introduces the features of YAML that are relevant "
"when writing CWL descriptions and input parameter files."
msgstr ""

#: ../../src/topics/yaml-guide.md:13 cb243f6ab11f48ffb5c91945c4e0d101
msgid "You can skip this section if you are already comfortable with YAML."
msgstr ""

#: ../../src/topics/yaml-guide.md:16 cfc95d15e33a492f842649f92ced941d
msgid "Contents"
msgstr ""

#: ../../src/topics/yaml-guide.md:18 f618d44d202f4c2ea6ff72a1dca2c659
msgid "[Key-Value Pairs](#key-value-pairs)"
msgstr ""

#: ../../src/topics/yaml-guide.md:19 36bfa6ed40c54bd99826bedff12c759d
msgid "[Comments](#comments)"
msgstr ""

#: ../../src/topics/yaml-guide.md:20 61913753eb0c4c728889b47f1110be24
msgid "[Maps](#maps)"
msgstr ""

#: ../../src/topics/yaml-guide.md:21 0de824a05eea46209aafa6f9e2e8623c
msgid "[Arrays](#arrays)"
msgstr ""

#: ../../src/topics/yaml-guide.md:22 95627bc476b3415ca4d77246125137d2
msgid "[JSON Style](#json-style)"
msgstr ""

#: ../../src/topics/yaml-guide.md:24 3f64a6d33d9a4c22a8a839a8def82686
msgid "Key-Value Pairs"
msgstr ""

#: ../../src/topics/yaml-guide.md:26 2f74f6eaa8d84dc9b4d0a166844dedbe
msgid ""
"Fundamentally, a file written in YAML consists of a set of _key-value "
"pairs_. Each pair is written as `key: value`, where whitespace after the "
"`:` is required. Key names in CWL files should not contain whitespace - "
"[_camelCase_][camelCase] is used for multi-word key names that have "
"special meaning in the CWL specification and underscored key names "
"otherwise. For example:"
msgstr ""

#: ../../src/topics/yaml-guide.md:42 514365e59d9648deb896e2068d967a64
msgid ""
"The YAML above defines four keys - `first_name`, `last_name`, "
"`age_years`, and `home` - with their four respective values. Values can "
"be character strings, numeric (integer, floating point, or scientific "
"representation), Boolean (`true` or `false`), or more complex nested "
"types (see below)."
msgstr ""

#: ../../src/topics/yaml-guide.md:51 6939eb7e783744d7bcf75ea0a7cae129
msgid ""
"Values may be wrapped in quotation marks, but be aware that this may "
"change the way that they are interpreted i.e. `\"1234\"` will be treated "
"as a character string , while `1234` will be treated as an integer. This "
"distinction can be important, for example when describing parameters to a"
" command: in CWL all parts of `baseCommand` must be strings so, if you "
"want to specify a fixed numeric value to a command, make sure that you "
"wrap that numeric value in quotes: `baseCommand: [echo, \"42\"]`."
msgstr ""

#: ../../src/topics/yaml-guide.md:61 96e1776b09e840ebbc9b4b7e01da0e43
msgid "Comments"
msgstr ""

#: ../../src/topics/yaml-guide.md:63 8b17f7557c3540b2b0d0beca0fe4ebc7
msgid ""
"You may use `#` to add comments to your CWL and parameter files. Any "
"characters to the right of ` #` will be ignored by the program "
"interpreting the YAML. For example:"
msgstr ""

#: ../../src/topics/yaml-guide.md:76 13da997c82c04023a4b7bb36b76e969d
msgid ""
"If there is anything on the line before the comment, be sure to add at "
"least one space before the `#`!"
msgstr ""

#: ../../src/topics/yaml-guide.md:79 b9fc191166a64450b64a8182adabad75
msgid "Maps"
msgstr ""

#: ../../src/topics/yaml-guide.md:81 aedf8c4f615845ad91a7947217005d6e
msgid ""
"When describing a tool or workflow with CWL, it is usually necessary to "
"construct more complex, nested representations. Referred to as _maps_, "
"these hierarchical structures are described in YAML by providing "
"additional key-value pairs as the value of any key. These pairs "
"(sometimes referred to as \"children\") are written on new lines under "
"the key to which they belong (the \"parent\"), and should be indented "
"with two spaces (⇥tab characters are not allowed). For example:"
msgstr ""

#: ../../src/topics/yaml-guide.md:104 f0f1f414f74342a89065ba5ded8668e5
msgid ""
"The YAML above illustrates how to build up complex nested object "
"descriptions relatively quickly. The `inputs` map contains a single key, "
"`example_flag`, which itself contains two keys, `type` and "
"`inputBinding`, while one of these children, `inputBinding`, contains a "
"further two key-value pairs (`position` and `prefix`). See the "
"[Arrays](#arrays) section below for more information about providing "
"multiple values/key-value pairs for a single key. For comparison with the"
" example YAML above, here is a graphical representation of the `inputs` "
"object it describes."
msgstr ""

#: ../../src/topics/yaml-guide.md:127 965405e2a45a4cbb8f227bc8ceeb05df
msgid "Arrays"
msgstr ""

#: ../../src/topics/yaml-guide.md:129 5aca9a90fb6149529ed717992746a2f3
msgid ""
"In certain circumstances, it is necessary to provide multiple values or "
"objects for a single key. As we've already seen in the [Maps](#maps) "
"section above, more than one key-value pair can be mapped to a single "
"key. However, it is also possible to define multiple values for a key "
"without having to provide a unique key for each value. We can achieve "
"this with an _array_, where each value is defined on its own line and "
"preceded by `-`. For example:"
msgstr ""

#: ../../src/topics/yaml-guide.md:146 d1c9e72e004b4fb4a6efb7748a15ab6f
msgid "and a more complex example combining maps and arrays:"
msgstr ""

#: ../../src/topics/yaml-guide.md:167 9a3d6879404745a48cd394bf86865dbc
msgid "JSON Style"
msgstr ""

#: ../../src/topics/yaml-guide.md:169 6a7cca0339794e679329b00d89e29d2b
msgid ""
"YAML is based on [JavaScript Object Notation (JSON)][json]. Maps and "
"arrays can also be defined in YAML using the native JSON syntax. For "
"example:"
msgstr ""

#: ../../src/topics/yaml-guide.md:177 d8feed2d36d04fe283b9de9784d91941
msgid "and:"
msgstr ""

#: ../../src/topics/yaml-guide.md:184 5156ad32791048f8ace51475d7689575
msgid ""
"Native JSON can be useful in indicating where a field is intentionally "
"left empty (such as `[]` for an empty array), as well as where it makes "
"more sense for the values to be located on the same line (For example, "
"when providing option flags and their values in a shell command). "
"However, as the second example above shows, it can severely affect the "
"readability of a YAML file, and should be used sparingly."
msgstr ""

#: ../../src/topics/yaml-guide.md:194 ce49f80e6fc0498b8ad298fb1f0268f3
msgid "Reference"
msgstr ""

#: ../../src/topics/yaml-guide.md:196 180d261392a644fcb8ff47d7a4a160c0
msgid ""
"The [Learn YAML in Y Minutes][yaml-y-mins] reference was very helpful for"
" us while we wrote this guide, though it also covers features that are "
"not valid in CWL."
msgstr ""

#: ../../src/tutorials.md:1 d682035afebf4c128755bd4e58780dd2
msgid "Tutorials"
msgstr ""

#: ../../src/tutorials.md:5 d9adeab63ec54084bc41fb90f264d3ae
msgid ""
"This is a list of tutorials provided by the CWL community. Use the `Edit "
"this page` link in the menu if you would like to add another tutorial to "
"the list."
msgstr ""

#: ../../src/tutorials.md:7 23c81edb650b4f86a60c5e0bcedeac1d
msgid "Beginner Tutorials"
msgstr ""

#: ../../src/tutorials.md:9 87ddaa1e5f57445c8f13803722aa146e
msgid ""
"[Introduction to Workflows with Common Workflow Language: For "
"Contributors.](https://carpentries-incubator.github.io/cwl-novice-"
"tutorial/)"
msgstr ""

#: ../../src/tutorials.md:11 b8ee193ba533498db6263e0f5f4ec45f
msgid "Advanced Tutorials"
msgstr ""

#: ../../src/tutorials.md:13 67c4b3923fce46fdab025495125c91d4
msgid "[Typescript in CWL](https://github.com/umccr/cwl-ica/wiki/TypeScript)"
msgstr ""

#: ../../src/tutorials.md:15 e640316669104239970794191b6da38b
msgid "Bioinformatics Tutorials"
msgstr ""

#: ../../src/tutorials.md:17 efe94af44b874f9b81b245fbdee43f7f
msgid "[rnaseq with CWL](https://arvados.github.io/rnaseq-cwl-training/)"
msgstr ""

#~ msgid "In CWL, everything must be directly stated."
#~ msgstr "在CWL中，一切都必须直接说明。"

#~ msgid "Optional Inputs 💯"
#~ msgstr "可选输入💯"

#~ msgid "Enum Inputs ⚜️"
#~ msgstr "枚举输入 ⚜️"

#~ msgid "Record Inputs 📀"
#~ msgstr "记录输入 📀"

#~ msgid "Debug JavaScript Expressions"
#~ msgstr "调试 JavaScript 表达式"

#~ msgid ""
#~ "`cwltool` can be installed with `pip`."
#~ " We recommend using a virtual "
#~ "environment like `venv` or `conda`. The"
#~ " following commands will create and "
#~ "activate a Python virtual environment "
#~ "using the `venv` module, and install "
#~ "`cwltool` in that environment:"
#~ msgstr ""
#~ "`cwltool` 可以用 `pip` 命令安装，而且我们推荐使用 `venv` "
#~ "或 `conda` 等虚拟环境。以下命令将使用 `venv` 模块创建并激活一个 "
#~ "Python 虚拟环境，并在该环境中安装 `cwltool`:"

#~ msgid "Installing `cwltool` with `pip` and `venv`."
#~ msgstr "使用 `pip` 和 `venv` 安装 `cwltool`."

#~ msgid "Cwl-runner Python Module"
#~ msgstr "Python 模块 cwl-runner"

#~ msgid ""
#~ "This indicates whether a process "
#~ "requires outgoing IPv4/IPv6 network access."
#~ " If a command-line tool is "
#~ "written manually in CWL v1.1+, there "
#~ "is a need to  specify when network"
#~ " access is required."
#~ msgstr ""
#~ "这指的是流程是否需要发起 IPv4/IPv6 网络访问。如果命令行工具是基于 CWL "
#~ "v1.1+ 版本新编写的，则有必要明文指定何时需要访问网络。"

#~ msgid "To generate such files, we can use the `InitialWorkDirRequirement`."
#~ msgstr "要生成此类文件，我们可以使用 `InitialWorkDirRequirements`."

#~ msgid "From `Workflow`"
#~ msgstr "来自 `Workflow`"

#~ msgid ""
#~ "If you try running it with "
#~ "`cwltool`, the command will fail since"
#~ " `cwltool` does not have enough "
#~ "information to know how to execute "
#~ "it:"
#~ msgstr "如果您尝试用 `cwltool` 运行它，该命令会失败，因为 `cwltool` 缺少足够信息，无从知晓如何运行它："

#~ msgid ""
#~ "Before we run this, let's just "
#~ "break it down and see what some"
#~ " bits do.  Most of this has "
#~ "been explained in previous sections, the"
#~ " only part that is really new "
#~ "is the `dockerRequirement` section."
#~ msgstr ""
